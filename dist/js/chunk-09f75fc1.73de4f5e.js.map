{"version":3,"sources":["webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./src/components/Comment.vue?9a24","webpack:///./src/middlewares/hyphen.js","webpack:///src/components/Comment.vue","webpack:///./src/components/Comment.vue?1689","webpack:///./src/components/Comment.vue","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/hyphen/export-contract.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/hyphen/ru/index.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/hyphen/hyphen.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/hyphen/patterns/ru.js","webpack:///./node_modules/core-js/modules/es.array.index-of.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./src/services/CommentService.js"],"names":["toObject","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","call","match","ch","capture","charAt","slice","n","f","classof","regexpExec","R","S","exec","result","TypeError","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","this","arguments","$","target","proto","forced","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","render","_vm","_h","$createElement","_c","_self","comments","_l","comment","key","id","staticClass","_v","_s","author","name","toUpperCase","surname","date","type","updateType","updateFrom","updateTo","from","to","domProps","urlify","message","on","$event","preventDefault","addMessage","indexOf","_k","keyCode","ctrlKey","shiftKey","altKey","metaKey","attrs","model","value","callback","$$v","content","expression","staticRenderFns","text","hyphenateSync","data","props","Array","default","methods","currentYear","commentDate","getFullYear","res","urlRegex","url","component","fixRegExpWellKnownSymbolLogic","anObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","getSubstitution","regExpExec","max","min","maybeToString","it","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","done","rx","functionalReplace","fullUnicode","unicode","lastIndex","results","push","matchStr","accumulatedResult","nextSourcePosition","i","index","j","groups","replacerArgs","concat","apply","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","createHyphenator","patterns","hyphenate","async","hyphenateHTML","html","hyphenateHTMLSync","regexpFlags","stickyHelpers","nativeExec","RegExp","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","re","sticky","flags","charsAdded","strCopy","multiline","input","root","factory","MIN_WORD_LENGTH_BOUNDRY","SETTING_DEFAULT_ASYNC","SETTING_DEFAULT_DEBUG","SETTING_DEFAULT_HTML","SETTING_DEFAULT_HYPH_CHAR","SETTING_NAME_ASYNC","SETTING_NAME_DEBUG","SETTING_NAME_HTML","SETTING_NAME_HYPH_CHAR","SETTING_NAME_MIN_WORD_LENGTH","_global","window","cloneObj","keyOrDefault","defaultValue","exceptionsFromDefinition","patternsDefinition","hyphenChar","exceptions","reduce","exception","options","asyncMode","caches","debug","map","preprocessPattern","minWordLength","skipHTML","cacheKey","Error","localDebug","localHyphenChar","localMinWordLength","start","createTextChunkReader","readNextTextChunk","nextTextChunk","shouldHyphenate","chunkReader","nextCharIndex","nextChar","charIsLetter","test","charIsAngleOpen","charIsAngleClose","charIsHyphen","state","STATE_READ_TAG","STATE_RETURN_UNTOUCHED","SHOULD_SKIP","STATE_READ_WORD","STATE_RETURN_WORD","SHOULD_HYPHENATE","isSpacelike","shouldNextHyphenate","bind","hyphenateWord","patternData","levels","loweredText","toLocaleLowerCase","p","patternIndex","fromChar","endPattern","patternEntityIndex","patternFits","stickToLeft","stickToRight","pattern","join","hyphenatedText","leveledText","debugHyphenatedText","console","log","patternChar","patternCharIndex","states","alphabet","level","charIsDot","charIsNumber","prevCharIsNumber","parseInt","cache","isAsync","allTime","Date","resolveNewText","newText","processedN","hyphenatedN","workTime","reader","concatenate","nextTick","loopStart","setTimeout","Promise","resolve","fails","RE","s","nativeKeys","FAILS_ON_PRIMITIVES","stat","hyphenation","$indexOf","nativeIndexOf","NEGATIVE_ZERO","ACCESSORS","1","searchElement","redefine","wellKnownSymbol","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","a","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","split","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","string","arg","DESCRIPTORS","toIndexedObject","getOwnPropertyDescriptorModule","createProperty","descriptor","nativeGetOwnPropertyDescriptor","FORCED","CommentService","http","post"],"mappings":"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,KAAMA,K,qBCPR,IAAIoB,EAAI,EAAQ,QACZnD,EAAW,EAAQ,QACnB2T,EAAa,EAAQ,QACrBH,EAAQ,EAAQ,QAEhBI,EAAsBJ,GAAM,WAAcG,EAAW,MAIzDxQ,EAAE,CAAEC,OAAQ,SAAUyQ,MAAM,EAAMvQ,OAAQsQ,GAAuB,CAC/D/I,KAAM,SAAc1C,GAClB,OAAOwL,EAAW3T,EAASmI,Q,qBCX/B,yBAGI,EAAO,GAAI,EAAF,EAAS,kEAHtB,CAaGlF,GAAM,WACP,IAAIqI,EAAW,GACbwI,EAAc,GA6BZxI,EAAW,CACbaACA,UACA,YACA,UACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,WACA,WACA,SACA,QACA,SACA,SACA,OACA,WACA,QACA,QACA,QACA,QACA,OACA,QACA,MACA,SACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,MACA,WACA,SACA,SACA,OACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,SACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,QACA,MACA,QACA,OACA,UACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,MACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,QACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,SACA,QACA,QACA,OACA,MACA,QACA,QACA,OACA,SACA,MACA,QACA,OACA,OACA,UACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,SACA,SACA,OACA,MACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,YACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,UACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,UACA,SACA,WACA,OACA,QACA,QACA,OACA,MACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,QACA,SACA,UACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,IAEEwI,EAAc,CAChB,UACA,QACA,cACA,cACA,UACA,kBACA,cACA,gBACA,WACA,UACA,QACA,UACA,WACA,UACA,WACA,SACA,UACA,iBACA,WACA,iBACA,QACA,eACA,gBACA,OACA,aACA,QACA,WACA,eACA,WACA,aACA,gBACA,eACA,YACA,gBACA,SACA,aACA,WACA,eACA,aACA,aACA,WACA,cACA,aACA,YACA,QACA,WACA,UACA,WACA,YACA,aACA,iBACA,SACA,WACA,aACA,UACA,eACA,OACA,YACA,QACA,gBACA,cACA,SACA,aACA,aACA,UACA,WACA,WACA,YACA,cACA,aACA,WACA,cACA,YACA,cACA,cACA,OACA,YACA,eACA,aACA,aACA,aACA,YACA,aACA,UACA,eACA,YACA,WACA,WACA,SACA,SACA,WACA,YACA,YACA,YACA,WACA,YACA,UACA,UACA,OACA,SACA,eACA,WACA,YACA,gBACA,YACA,gBACA,mBACA,YACA,UACA,iBACA,aACA,YACA,cACA,kBACA,aACA,aACA,QACA,WACA,WACA,cACA,YACA,SACA,gBACA,aACA,iBACA,cACA,UACA,UACA,UACA,YACA,UACA,cACA,UACA,SACA,cACA,eACA,cACA,eACA,WACA,YACA,YACA,QACA,WACA,YACA,YACA,UACA,aACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,WACA,QACA,UACA,YACA,YACA,aACA,SACA,eACA,gBACA,iBACA,UACA,OACA,YACA,QACA,QACA,SACA,OACA,OACA,YACA,OACA,gBACA,gBACA,aACA,iBACA,QACA,YACA,eACA,OACA,YACA,aACA,IAGF,MAAO,CACLxI,SAAUA,EACV8C,WAAY0F,O,kCC3lOhB,IAAI3Q,EAAI,EAAQ,QACZ4Q,EAAW,EAAQ,QAA+BpO,QAClD/C,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCmR,EAAgB,GAAGrO,QAEnBsO,IAAkBD,GAAiB,EAAI,CAAC,GAAGrO,QAAQ,GAAI,GAAK,EAC5D7C,EAAgBF,EAAoB,WACpCG,EAAiBF,EAAwB,UAAW,CAAEqR,WAAW,EAAMC,EAAG,IAI9EhR,EAAE,CAAEC,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","file":"js/chunk-09f75fc1.73de4f5e.js","sourcesContent":["var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.comments.length)?_c('div',_vm._l((_vm.comments),function(comment){return _c('div',{key:comment.id,staticClass:\"comments__item\"},[_c('div',{staticClass:\"comments__left\"},[_c('div',{staticClass:\"comments__avatar avatar-wrapper\"},[_c('span',{staticClass:\"avatar\"},[_c('small',[_vm._v(_vm._s(comment.author.name.slice(0, 1).toUpperCase()))]),_c('small',[_vm._v(_vm._s(comment.author.surname.slice(0, 1).toUpperCase()))])])])]),_c('div',{staticClass:\"comments__right\"},[_c('div',{staticClass:\"comments__title\"},[_c('p',[_vm._v(_vm._s(comment.author.name)+\" \"+_vm._s(comment.author.surname))]),_c('span',[_vm._v(_vm._s(_vm.date(comment.date)))])]),_c('div',{staticClass:\"comments__action\"},[(comment.type === 'UPDATE_COMMENT')?[(comment.updateType === 'Assignee')?_c('small',[_c('span',[_vm._v(_vm._s(comment.updateType)+\":\")]),_c('span',[_c('span',{staticClass:\"comments__action-item comments__action-item--arrow\"},[_vm._v(_vm._s(comment.updateFrom.name))]),_c('span',{staticClass:\"comments__action-item\"},[_vm._v(_vm._s(comment.updateTo.name))])])]):_c('small',[_c('span',[_vm._v(_vm._s(comment.updateType)+\":\")]),_c('span',[_c('span',{staticClass:\"comments__action-item comments__action-item--arrow\"},[_vm._v(_vm._s(comment.from.name))]),_c('span',{staticClass:\"comments__action-item\"},[_vm._v(_vm._s(comment.to.name))])])])]:[_c('p',{staticClass:\"comments__text\",domProps:{\"innerHTML\":_vm._s(_vm.urlify(comment.message))}})]],2)])])}),0):_c('div',[_c('p',[_vm._v(\"No comments yet. Be the first!\")])]),_c('b-form',{staticClass:\"form p-0 mt-5\",on:{\"submit\":function($event){$event.preventDefault();return _vm.addMessage($event)},\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.addMessage($event)},\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if($event.ctrlKey||$event.shiftKey||$event.altKey||$event.metaKey){ return null; }$event.preventDefault();}}},[_c('div',{staticClass:\"form__item\"},[_c('b-form-textarea',{staticClass:\"form__textarea-field\",attrs:{\"type\":\"text\",\"placeholder\":\"Write your comment\"},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1),_c('div',{staticClass:\"comments__footer\"},[_c('button',{staticClass:\"button comments__btn\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Add comment \")])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { hyphenateSync } from 'hyphen/ru'\n\nexport default function(text) {\n  return hyphenateSync(text)\n}\n","<template>\n  <div>\n    <div v-if=\"comments.length\">\n      <div\n          class=\"comments__item\"\n          v-for=\"comment in comments\"\n          :key=\"comment.id\"\n      >\n        <div class=\"comments__left\">\n          <div class=\"comments__avatar avatar-wrapper\">\n              <span class=\"avatar\">\n                <small>{{ comment.author.name.slice(0, 1).toUpperCase() }}</small>\n                <small>{{ comment.author.surname.slice(0, 1).toUpperCase() }}</small>\n              </span>\n          </div>\n        </div>\n        <div class=\"comments__right\">\n          <div class=\"comments__title\">\n            <p>{{ comment.author.name }} {{ comment.author.surname }}</p><span>{{ date(comment.date) }}</span>\n          </div>\n          <div class=\"comments__action\">\n\n            <template v-if=\"comment.type === 'UPDATE_COMMENT'\">\n              <small v-if=\"comment.updateType === 'Assignee'\">\n                <span>{{ comment.updateType }}:</span>\n                <span>\n                <span class=\"comments__action-item comments__action-item--arrow\">{{\n                    comment.updateFrom.name\n                  }}</span>\n                <span class=\"comments__action-item\">{{ comment.updateTo.name }}</span>\n              </span>\n              </small>\n\n              <small v-else>\n                <span>{{ comment.updateType }}:</span>\n                <span>\n                <span class=\"comments__action-item comments__action-item--arrow\">{{ comment.from.name }}</span>\n                <span class=\"comments__action-item\">{{ comment.to.name }}</span>\n              </span>\n              </small>\n            </template>\n\n            <template v-else>\n              <p class=\"comments__text\" v-html=\"urlify(comment.message)\"></p>\n            </template>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-else>\n      <p>No comments yet. Be the first!</p>\n    </div>\n\n    <b-form\n        class=\"form p-0 mt-5\"\n        @submit.prevent=\"addMessage\"\n        @keyup.enter.exact=\"addMessage\"\n        @keydown.enter.exact.prevent\n    >\n      <div class=\"form__item\">\n        <b-form-textarea\n            class=\"form__textarea-field\"\n            type=\"text\"\n            placeholder=\"Write your comment\"\n            v-model=\"content\"\n        ></b-form-textarea>\n      </div>\n\n      <div class=\"comments__footer\">\n        <button\n            class=\"button comments__btn\"\n            type=\"submit\"\n        >Add comment\n        </button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport hyphen from '../middlewares/hyphen';\n\nexport default {\n  name: 'Comment',\n  data() {\n    return {\n      content: '',\n    }\n  },\n  props: {\n    comments: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  methods: {\n    async addMessage() {\n      if (!this.content.length) {\n        return\n      }\n\n      this.$emit('addComment', this.content)\n      this.content = ''\n    },\n    date(date) {\n      let res = ''\n      const currentYear = new Date().getFullYear();\n      const commentDate = new Date(date);\n\n      if (currentYear !== commentDate.getFullYear()) {\n        res += commentDate.getFullYear() + ' '\n      }\n\n      return (\n          res + commentDate.toLocaleString('en', {month: 'short'}) + ' ' +\n          commentDate.getDate() + ' ' + commentDate.toLocaleString('ru', {hour: '2-digit', minute: '2-digit'})\n      )\n    },\n    urlify(text) {\n      let message = hyphen(text);\n\n      let urlRegex = /^(?:([a-z]+):(?:([a-z]*):)?\\/\\/)?(?:([^:@]*)(?::([^:@]*))?@)?((?:[a-z0-9_-]+\\.)+[a-z]{2,}|localhost|(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])))(?::(\\d+))?(?:([^:\\?\\#]+))?(?:\\?([^\\#]+))?(?:\\#([^\\s]+))?$/i;\n      return message.replace(urlRegex, function (url) {\n\n        if (!(url.indexOf('//') + 1)) {\n          url = 'https://' + url\n        }\n\n        return '<a style=\"color: #2193b0;\" target=\"_blank\" href=\"' + url + '\">' + url + '</a>';\n      })\n    },\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Comment.vue?vue&type=template&id=384c2c7b&\"\nimport script from \"./Comment.vue?vue&type=script&lang=js&\"\nexport * from \"./Comment.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","var createHyphenator = require(\"./hyphen.js\");\n\nmodule.exports = function (patterns) {\n  return {\n    hyphenate: createHyphenator(patterns, { async: true }),\n    hyphenateHTML: createHyphenator(patterns, { async: true, html: true }),\n    hyphenateHTMLSync: createHyphenator(patterns, { html: true }),\n    hyphenateSync: createHyphenator(patterns),\n    patterns: patterns\n  };\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","module.exports = require(\"../export-contract.js\")(\n  require(\"../patterns/ru.js\")\n);\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","/** Text hyphenation in Javascript.\n *  Copyright (C) 2020 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  var MIN_WORD_LENGTH_BOUNDRY = 5;\n\n  var SETTING_DEFAULT_ASYNC = false,\n    SETTING_DEFAULT_DEBUG = false,\n    SETTING_DEFAULT_HTML = false,\n    SETTING_DEFAULT_HYPH_CHAR = \"\\u00AD\",\n    SETTING_NAME_ASYNC = \"async\",\n    SETTING_NAME_DEBUG = \"debug\",\n    SETTING_NAME_HTML = \"html\",\n    SETTING_NAME_HYPH_CHAR = \"hyphenChar\",\n    SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof this === \"object\"\n      ? this\n      : {};\n\n  function cloneObj(source) {\n    var target = {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  function keyOrDefault(object, key, defaultValue) {\n    if (key in object) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n\n  function exceptionsFromDefinition(patternsDefinition, hyphenChar) {\n    return patternsDefinition.exceptions.reduce(function (\n      exceptions,\n      exception\n    ) {\n      exceptions[exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    },\n    {});\n  }\n\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var //\n      asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      patterns = patternsDefinition.patterns.map(preprocessPattern),\n      minWordLength = Math.max(\n        options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n        MIN_WORD_LENGTH_BOUNDRY\n      ),\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML);\n\n    // Prepare cache\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = exceptionsFromDefinition(\n      patternsDefinition,\n      hyphenChar\n    );\n    caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n\n    return function (text, options) {\n      options = options || {};\n\n      var localDebug = keyOrDefault(options, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength = Math.max(\n          options[SETTING_NAME_MIN_WORD_LENGTH] >> 0,\n          minWordLength\n        ),\n        cacheKey = localHyphenChar + localMinWordLength;\n\n      if (!exceptions[cacheKey]) {\n        exceptions[cacheKey] = exceptionsFromDefinition(\n          patternsDefinition,\n          localHyphenChar\n        );\n      }\n\n      if (!caches[cacheKey]) {\n        caches[cacheKey] = cloneObj(exceptions[cacheKey]);\n      }\n\n      return start(\n        text,\n        patterns,\n        caches[cacheKey],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n  function createTextChunkReader(text, hyphenChar, skipHTML, minWordLength) {\n    function readNextTextChunk() {\n      var nextTextChunk = \"\";\n\n      shouldHyphenate = void 0;\n\n      chunkReader: while (nextCharIndex <= text.length) {\n        var //\n          nextChar = text.charAt(nextCharIndex++),\n          charIsLetter =\n            !!nextChar && !/\\s|[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/.test(nextChar),\n          charIsAngleOpen = nextChar === \"<\",\n          charIsAngleClose = nextChar === \">\",\n          charIsHyphen = nextChar === hyphenChar;\n\n        do {\n          if (state === STATE_READ_TAG) {\n            if (charIsAngleClose) {\n              state = STATE_RETURN_UNTOUCHED;\n            }\n            break;\n          }\n\n          if (charIsHyphen) {\n            shouldHyphenate = SHOULD_SKIP;\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (charIsLetter) {\n            state = STATE_READ_WORD;\n            break;\n          }\n\n          if (state === STATE_READ_WORD) {\n            state = STATE_RETURN_WORD;\n            shouldHyphenate =\n              shouldHyphenate ||\n              (nextTextChunk.length >= minWordLength && SHOULD_HYPHENATE);\n            break;\n          }\n\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_RETURN_UNTOUCHED;\n        } while (0);\n\n        if (\n          charIsAngleOpen &&\n          state !== STATE_RETURN_WORD &&\n          skipHTML &&\n          !isSpacelike(text.charAt(nextCharIndex))\n        ) {\n          shouldHyphenate = SHOULD_SKIP;\n          state = STATE_READ_TAG;\n        }\n\n        switch (state) {\n          case STATE_READ_TAG:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_READ_WORD:\n            nextTextChunk += nextChar;\n            break;\n\n          case STATE_RETURN_UNTOUCHED:\n            nextTextChunk += nextChar;\n            break chunkReader;\n\n          case STATE_RETURN_WORD:\n            nextCharIndex--;\n            break chunkReader;\n        }\n      }\n      return nextTextChunk || void 0;\n    }\n\n    function shouldNextHyphenate() {\n      return shouldHyphenate === SHOULD_HYPHENATE;\n    }\n\n    var isSpacelike = RegExp.prototype.test.bind(/\\s/);\n\n    var //\n      nextCharIndex = 0,\n      SHOULD_HYPHENATE = 1,\n      SHOULD_SKIP = 2,\n      shouldHyphenate,\n      STATE_READ_TAG = 1,\n      STATE_READ_WORD = 2,\n      STATE_RETURN_UNTOUCHED = 3,\n      STATE_RETURN_WORD = 4,\n      state;\n\n    return [readNextTextChunk, shouldNextHyphenate];\n  }\n  function hyphenateWord(text, patterns, debug, hyphenChar) {\n    var //\n      levels = new Array(text.length + 1),\n      loweredText = text.toLocaleLowerCase(),\n      p = [],\n      patternData,\n      patternIndex = 0;\n\n    for (var i = levels.length; i--; ) levels[i] = 0;\n\n    while ((patternData = patterns[patternIndex++])) {\n      var //\n        fromChar = 0,\n        endPattern = false;\n      while (!endPattern) {\n        var //\n          patternEntityIndex = loweredText.indexOf(patternData.text, fromChar),\n          patternFits =\n            patternEntityIndex > -1 &&\n            (patternData.stickToLeft ? patternEntityIndex === 0 : true) &&\n            (patternData.stickToRight\n              ? patternEntityIndex + patternData.text.length === text.length\n              : true);\n\n        if (patternFits) {\n          p.push(patternData.pattern + \">\" + patternData.levels.join(\"\"));\n\n          for (var i = 0; i < patternData.levels.length; i++)\n            levels[patternEntityIndex + i] = Math.max(\n              patternData.levels[i],\n              levels[patternEntityIndex + i]\n            );\n        }\n        if (patternEntityIndex > -1 && patternData.text.length > 0) {\n          fromChar = patternEntityIndex + patternData.text.length + 1;\n        } else {\n          endPattern = true;\n        }\n      }\n    }\n\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n\n    var //\n      hyphenatedText = \"\",\n      leveledText = \"\",\n      debugHyphenatedText = \"\";\n\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n      debugHyphenatedText += (levels[i] % 2 === 1 ? \"-\" : \"\") + text.charAt(i);\n      leveledText += (levels[i] > 0 ? levels[i] : \"\") + text.charAt(i);\n    }\n\n    if (debug)\n      console.log.apply(\n        console,\n        [text, \"->\"]\n          .concat(p)\n          .concat([\"->\"])\n          .concat(levels)\n          .concat([\"->\", leveledText])\n          .concat([\"->\", debugHyphenatedText])\n      );\n\n    return hyphenatedText;\n  }\n  function preprocessPattern(pattern) {\n    var //\n      patternCharIndex = 0,\n      patternChar,\n      patternData = {\n        pattern: pattern,\n        text: \"\",\n        levels: [],\n        stickToLeft: 0,\n        stickToRight: 0\n      },\n      states = { alphabet: 1, level: 2, stickToLeft: 3, stickToRight: 4 };\n\n    while ((patternChar = pattern.charAt(patternCharIndex++))) {\n      var //\n        charIsDot = patternChar === \".\",\n        charIsNumber = !charIsDot && /\\d/.test(patternChar),\n        state = charIsDot\n          ? patternCharIndex - 1 === 0\n            ? states.stickToLeft\n            : states.stickToRight\n          : charIsNumber\n          ? states.level\n          : states.alphabet;\n\n      switch (state) {\n        case states.alphabet:\n          !prevCharIsNumber && patternData.levels.push(0);\n          patternData.text += patternChar;\n          break;\n\n        case states.level:\n          patternData.levels.push(parseInt(patternChar));\n          break;\n\n        case states.stickToLeft:\n          patternData.stickToLeft = true;\n          break;\n\n        case states.stickToRight:\n          patternData.stickToRight = true;\n          break;\n      }\n\n      var prevCharIsNumber = charIsNumber;\n    }\n\n    return patternData;\n  }\n  function start(\n    text,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      allTime = new Date() - allTime;\n      resolveNewText(newText);\n\n      if (debug) {\n        console.log(\n          \"----------------\\nHyphenation stats: \" +\n            processedN +\n            \" text chunks processed, \" +\n            hyphenatedN +\n            \" words hyphenated\"\n        );\n        console.log(\"Work time: \" + workTime / 1000);\n        console.log(\"Wait time: \" + (allTime - workTime) / 1000);\n        console.log(\"All time: \" + allTime / 1000);\n      }\n    }\n\n    var //\n      newText = \"\",\n      nextTextChunk,\n      reader = createTextChunkReader(text, hyphenChar, skipHTML, minWordLength),\n      readNextTextChunk = reader[0],\n      shouldNextHyphenate = reader[1],\n      states = { hyphenateWord: 1, concatenate: 2 },\n      processedN = 0,\n      hyphenatedN = 0;\n\n    var //\n      allTime = new Date(),\n      workTime = 0;\n\n    var resolveNewText = function () {};\n\n    function nextTick() {\n      var loopStart = new Date();\n\n      while (\n        (!isAsync || new Date() - loopStart < 10) &&\n        (nextTextChunk = readNextTextChunk())\n      ) {\n        var state = shouldNextHyphenate()\n          ? states.hyphenateWord\n          : states.concatenate;\n\n        switch (state) {\n          case states.hyphenateWord:\n            if (!cache[nextTextChunk])\n              cache[nextTextChunk] = hyphenateWord(\n                nextTextChunk,\n                patterns,\n                debug,\n                hyphenChar\n              );\n\n            if (nextTextChunk !== cache[nextTextChunk]) hyphenatedN++;\n\n            nextTextChunk = cache[nextTextChunk];\n\n          case states.concatenate:\n            newText += nextTextChunk;\n        }\n\n        processedN++;\n      }\n      workTime += new Date() - loopStart;\n\n      if (!nextTextChunk) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  return createHyphenator;\n});\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.hyphenationPatternsRu = factory();\n  }\n})(this, function () {\n  var patterns = [],\n    hyphenation = [];\n\n  // title: Hyphenation patterns for Russian\n  // copyright: Copyright (C) 1999-2003 Alexander I. Lebedev\n  // notice:\n  //     This file is part of the hyph-utf8 package.\n  //     See http://www.hyphenation.org/tex for more information.\n  // language:\n  //     name: Russian\n  //     tag: ru\n  // version: 2003/03/10\n  // authors:\n  //   -\n  //     name: Alexander I. Lebedev\n  //     contact: swan (at) scon155.phys.msu.su\n  // licence:\n  //     name: LPPL\n  //     version: 1.2\n  //     or_later: true\n  //     url: https://latex-project.org/lppl/\n  // ==========================================\n  // Patterns were generated with patgen from a 990,000-word list and then\n  // manually corrected.\n  //\n  // The program consists of the files ruhyphal.tex, cyryoal.tex and two\n  // document files README.ruhyphal and hyphen.rules.  The file cyryoal.tex\n  // can be regenerated using mkcyryo script (a part of ruhyphen package)\n  // and the latest release of rus-ispell dictionaries\n  // <ftp://scon155.phys.msu.su/pub/russian/ispell/>.\n  var patterns = [\n    \".аб1р\",\n    \".аг1ро\",\n    \".ади2\",\n    \".аи2\",\n    \".ак1р\",\n    \".аль3я\",\n    \".ар2т1о2\",\n    \".ас1то\",\n    \".аст1р\",\n    \".ау2\",\n    \".би2о\",\n    \".во2б3л\",\n    \".во3ж2д\",\n    \".го2ф\",\n    \".дек2\",\n    \".де1кв\",\n    \".ди2ак\",\n    \".ди1о\",\n    \".до3п\",\n    \".до3т2\",\n    \".епи3\",\n    \".зав2р\",\n    \".за3м2н\",\n    \".за3п\",\n    \".иг1р\",\n    \".изг2\",\n    \".из3н\",\n    \".ии2\",\n    \".ик1р\",\n    \".ио2\",\n    \".ио4на\",\n    \".ис3\",\n    \".ле2о\",\n    \".ле2п3р\",\n    \".лес1к\",\n    \".ль2\",\n    \".люст1\",\n    \".ме2ж1у2\",\n    \".ми1ом\",\n    \".мо2к1\",\n    \".му2шт1\",\n    \".на1в\",\n    \".на3т\",\n    \".на3ш2\",\n    \".не3вн\",\n    \".не1др\",\n    \".не1з2\",\n    \".не1сл\",\n    \".не1с2ц\",\n    \".не3т\",\n    \".нос1к\",\n    \".нук1л\",\n    \".обо3ж2\",\n    \".ово1\",\n    \".ог3н\",\n    \".оз4\",\n    \".ос2ка\",\n    \".ос2п\",\n    \".ос3пи\",\n    \".от1в\",\n    \".от1ро\",\n    \".от1ру\",\n    \".от1уж\",\n    \".по3в2\",\n    \".по3ж2\",\n    \".поз2н\",\n    \".прос2\",\n    \".ра2с3т\",\n    \".ре2бр\",\n    \".ре2з3в\",\n    \".ри2ск\",\n    \".ри2ч\",\n    \".ро2з3в\",\n    \".ро2с3л\",\n    \".ро2х\",\n    \".септ2\",\n    \".ск2\",\n    \".ст2\",\n    \".су2ж\",\n    \".те2о3\",\n    \".тиа3\",\n    \".ти2г\",\n    \".тиг1р\",\n    \".ти2о\",\n    \".уб2\",\n    \".уд2\",\n    \".уе2\",\n    \".уз2на\",\n    \".ук2\",\n    \".ум2ч\",\n    \".уо3\",\n    \".уп2\",\n    \".ур2в\",\n    \".ус2\",\n    \".ут2р\",\n    \".ую2\",\n    \".хо2р3в\",\n    \".че2с1к\",\n    \".юс1\",\n    \"4а3а\",\n    \"аа2п\",\n    \"аа2р\",\n    \"аа2ц\",\n    \"а1б\",\n    \"абе3ст\",\n    \"а3бла\",\n    \"аб2лю\",\n    \"аб1ри\",\n    \"а3бу\",\n    \"ав1в\",\n    \"а1ве\",\n    \"ав3зо\",\n    \"а1ви\",\n    \"ави2а\",\n    \"а1во\",\n    \"аво1с\",\n    \"а2вот\",\n    \"ав1ра\",\n    \"ав2се\",\n    \"а2вт\",\n    \"а1ву\",\n    \"а2вх\",\n    \"а3в2че\",\n    \"2ага\",\n    \"ага1с2\",\n    \"а2гд\",\n    \"а2гити\",\n    \"а2гле\",\n    \"аг2ли\",\n    \"а2глос\",\n    \"аг2лот\",\n    \"2аго\",\n    \"а3гу\",\n    \"а1д\",\n    \"2адв\",\n    \"а2две\",\n    \"ад2жи\",\n    \"ади2од\",\n    \"а2дл\",\n    \"а2д1обл\",\n    \"ад1ро\",\n    \"а2д1ру\",\n    \"аду3ч\",\n    \"ад2ц\",\n    \"а2дын\",\n    \"а1е\",\n    \"ае2го\",\n    \"ае2ди\",\n    \"ае2л\",\n    \"а2еп\",\n    \"ае2ре\",\n    \"ае2с\",\n    \"аза4ш3\",\n    \"азв2\",\n    \"аз3вез\",\n    \"аз1вл\",\n    \"азг2\",\n    \"аз1др\",\n    \"аз1об\",\n    \"аз2о1бр\",\n    \"а2зовь\",\n    \"а2золь\",\n    \"а1зори\",\n    \"аз2о1с\",\n    \"аз1р\",\n    \"а1и\",\n    \"аи2г1\",\n    \"аи3гл\",\n    \"а2их\",\n    \"а1к\",\n    \"ак1в\",\n    \"1акк\",\n    \"ак2л\",\n    \"ак3лем\",\n    \"ако1б2\",\n    \"2аконс\",\n    \"ако3т\",\n    \"2акри\",\n    \"ак1с\",\n    \"а1ла\",\n    \"а3лаг\",\n    \"а1ле\",\n    \"2алек\",\n    \"а3ли\",\n    \"ало1з\",\n    \"а1лу\",\n    \"алу2ш\",\n    \"алуш1т\",\n    \"а1лы\",\n    \"а2льщ\",\n    \"а1лю\",\n    \"2ама\",\n    \"амб4\",\n    \"2амет\",\n    \"а2минт\",\n    \"ам2нет\",\n    \"2амо\",\n    \"амо1з2\",\n    \"амои2\",\n    \"а2мч\",\n    \"ана2дц\",\n    \"а2н1а2ме\",\n    \"а2наф\",\n    \"ан2дра\",\n    \"а2н1о2б\",\n    \"ан1о2хр\",\n    \"ан1р\",\n    \"ан2сп\",\n    \"анс1у\",\n    \"ан2сур\",\n    \"а2н1уз\",\n    \"а1нь\",\n    \"2а1о\",\n    \"ао2д\",\n    \"ао2к\",\n    \"ао2р\",\n    \"ао2с\",\n    \"аост1\",\n    \"а3пла\",\n    \"ап2лом\",\n    \"2апо\",\n    \"апо4вс\",\n    \"апо3ч2т\",\n    \"ап2ра\",\n    \"ап1рел\",\n    \"а1ра\",\n    \"ара2ст\",\n    \"ар2бок\",\n    \"ар2вал\",\n    \"1аргу\",\n    \"а1ре\",\n    \"аре1дв\",\n    \"аре1ол\",\n    \"ар2жа\",\n    \"а1ри\",\n    \"а1ро\",\n    \"ар2тор\",\n    \"ар2т1р\",\n    \"а1ру\",\n    \"ар1х\",\n    \"а1ры\",\n    \"а1рю\",\n    \"а1ря\",\n    \"2ас1к\",\n    \"ас3ми\",\n    \"ас3но\",\n    \"1ассиг\",\n    \"аст1ву\",\n    \"ас3тем\",\n    \"ас2тин\",\n    \"ас2тия\",\n    \"ас1тоо\",\n    \"ас1тух\",\n    \"а1стье\",\n    \"ас2шед\",\n    \"ас2шес\",\n    \"а1сьи\",\n    \"а1та\",\n    \"1атак\",\n    \"ат3ва\",\n    \"ат1ви\",\n    \"ат1ву\",\n    \"2атез\",\n    \"а1ти\",\n    \"а1то\",\n    \"ат1обе\",\n    \"а2томн\",\n    \"ато2ш\",\n    \"ат1рах\",\n    \"ат1ри\",\n    \"а1ту\",\n    \"ат2х\",\n    \"а1ты\",\n    \"а1тье\",\n    \"а3тью\",\n    \"а3тья\",\n    \"а1тю\",\n    \"а1тя\",\n    \"а1у\",\n    \"а2уб\",\n    \"ау2д\",\n    \"ау3до\",\n    \"а2уле\",\n    \"аут1р\",\n    \"ау2х\",\n    \"ау2ч\",\n    \"ау3чь\",\n    \"ауэ1\",\n    \"а2ф1л\",\n    \"ах2а\",\n    \"ахми2\",\n    \"ах3с\",\n    \"а1ч\",\n    \"2ача\",\n    \"а2чл\",\n    \"ач1т\",\n    \"а2шл\",\n    \"аэ2ли\",\n    \"а2эр\",\n    \"аю1та\",\n    \"а1я\",\n    \"ая2б\",\n    \"ая2в\",\n    \"ая2з\",\n    \"1ба\",\n    \"ба2бв\",\n    \"ба2г1р\",\n    \"ба2др\",\n    \"ба1з\",\n    \"ба3зу\",\n    \"балю1\",\n    \"ба2о\",\n    \"бас3м\",\n    \"ба1ст\",\n    \"ба1тр\",\n    \"2б1б\",\n    \"б1в\",\n    \"бвы2\",\n    \"бг2\",\n    \"2б1д\",\n    \"1бе\",\n    \"3бев\",\n    \"бе2гл\",\n    \"бе2гн\",\n    \"бе2д1р\",\n    \"3бее\",\n    \"3бе2з\",\n    \"без1а2\",\n    \"без5д4\",\n    \"бе3зи\",\n    \"без3н\",\n    \"без1о2\",\n    \"без1р\",\n    \"бе2с1к\",\n    \"бес3п\",\n    \"бе2с1т\",\n    \"бес3те\",\n    \"бес3ти\",\n    \"3бец\",\n    \"2бещ\",\n    \"2бж\",\n    \"б1з2\",\n    \"1б2и\",\n    \"3биа\",\n    \"би2б\",\n    \"2биж\",\n    \"3бик\",\n    \"били3т2\",\n    \"3био\",\n    \"би2об\",\n    \"би2од\",\n    \"би2он\",\n    \"би2ор\",\n    \"би2тв\",\n    \"би1х\",\n    \"2б3к\",\n    \"б1л\",\n    \"1благ\",\n    \"1б2лаз\",\n    \"б3лази\",\n    \"б2лан\",\n    \"1б2лее\",\n    \"б3лен\",\n    \"б2лес1к\",\n    \"1б2лея\",\n    \"б2луд\",\n    \"1б2луж\",\n    \"2блы\",\n    \"2б2ль\",\n    \"2б3лю.\",\n    \"б2люд\",\n    \"б2люе\",\n    \"б2люл\",\n    \"2б3люсь\",\n    \"2бля\",\n    \"2б3н\",\n    \"1бо\",\n    \"бо1бра\",\n    \"бо3вш\",\n    \"бо2гд\",\n    \"бо1дра\",\n    \"бо1з2\",\n    \"бо1л2ж\",\n    \"бо1льс\",\n    \"бо3м2л\",\n    \"бо2мч\",\n    \"бо3мш\",\n    \"бону1\",\n    \"бо1ру\",\n    \"бо2са\",\n    \"бо1ск\",\n    \"бо3ско\",\n    \"бо3сти\",\n    \"3бот\",\n    \"бо2тв\",\n    \"бот2р\",\n    \"боя2р\",\n    \"2бр.\",\n    \"б3раб\",\n    \"б2рав\",\n    \"бра1зо\",\n    \"1б2рал\",\n    \"2б1рам\",\n    \"б2ран\",\n    \"1брас\",\n    \"б2рать\",\n    \"б1рах\",\n    \"1б2рач\",\n    \"2б3рая\",\n    \"1б2ред\",\n    \"б1рей\",\n    \"б1рек\",\n    \"б2рем\",\n    \"б2рех\",\n    \"б2рид\",\n    \"б2рито\",\n    \"б2риты\",\n    \"1б2роди\",\n    \"б1рол\",\n    \"б1ром.\",\n    \"1б2роси\",\n    \"бро2с1к\",\n    \"2брс\",\n    \"б1ру\",\n    \"3брукс\",\n    \"2брь\",\n    \"1б2рю\",\n    \"2б3рю.\",\n    \"б1ря\",\n    \"2б1с2\",\n    \"б3ск\",\n    \"бс4л\",\n    \"б1т\",\n    \"1б2у\",\n    \"бу2г1р\",\n    \"бук1л\",\n    \"бу1с\",\n    \"2бф\",\n    \"2б1х\",\n    \"2бц\",\n    \"2б1ч\",\n    \"2бш\",\n    \"2бщ\",\n    \"1бы\",\n    \"бы2г1\",\n    \"бы2с\",\n    \"быс1к\",\n    \"быст1\",\n    \"1бь\",\n    \"2бь.\",\n    \"2бьс\",\n    \"2бьт\",\n    \"бэ1р\",\n    \"3б2ю\",\n    \"бю1та\",\n    \"1бя\",\n    \"1ва\",\n    \"ва2бр\",\n    \"3ваг\",\n    \"ва2д1р\",\n    \"вадь2\",\n    \"ва3ж2д\",\n    \"ва1з\",\n    \"ванс2\",\n    \"ва1ст\",\n    \"ва2стр\",\n    \"ва1тр\",\n    \"вах1\",\n    \"3вац\",\n    \"3вая\",\n    \"2в1б\",\n    \"в1ви\",\n    \"в1вр\",\n    \"2вг2\",\n    \"в1д\",\n    \"в2дох\",\n    \"1вев\",\n    \"3вег\",\n    \"вед1р\",\n    \"ве3ду\",\n    \"1вее\",\n    \"1вез\",\n    \"3везе\",\n    \"3везл\",\n    \"вез2у\",\n    \"1вей.\",\n    \"ве2п1\",\n    \"2верд\",\n    \"1вес\",\n    \"ве2с1к\",\n    \"ве2ст1в\",\n    \"вет3р\",\n    \"1вец\",\n    \"1вею\",\n    \"1вея\",\n    \"1в2з2\",\n    \"взг2\",\n    \"взд2\",\n    \"взо1б\",\n    \"взъ2\",\n    \"взъе3д\",\n    \"ви2аз\",\n    \"ви2ак\",\n    \"ви2ар\",\n    \"ви2а1с2\",\n    \"виа1т\",\n    \"ви3аф\",\n    \"ви2гв\",\n    \"ви2гл\",\n    \"1виз\",\n    \"1винт\",\n    \"1винч\",\n    \"ви1о\",\n    \"ви1с2ни\",\n    \"виу3\",\n    \"ви2ф\",\n    \"2в1к\",\n    \"вк2л\",\n    \"3в2кус\",\n    \"в1л\",\n    \"в2ла\",\n    \"2в3лаб\",\n    \"в2лев\",\n    \"в2лек\",\n    \"в2лет\",\n    \"в2леч\",\n    \"2вли\",\n    \"в2лия\",\n    \"2влю\",\n    \"в2люб\",\n    \"2вля\",\n    \"2вм\",\n    \"1вме\",\n    \"2в1н\",\n    \"4в3на\",\n    \"в2нес\",\n    \"вно1\",\n    \"в3ну.\",\n    \"3в2нук\",\n    \"3в2нуч\",\n    \"в3ны\",\n    \"во1б2\",\n    \"во2б3ла\",\n    \"вов2\",\n    \"во3вк\",\n    \"1вод\",\n    \"во1дв\",\n    \"во1др\",\n    \"во2ер\",\n    \"во2жж\",\n    \"вои2с1\",\n    \"1вок\",\n    \"во3м2\",\n    \"воп2\",\n    \"во1ру\",\n    \"2ворц\",\n    \"2ворь\",\n    \"вос1к\",\n    \"во1см\",\n    \"во1сн\",\n    \"вос3пе\",\n    \"во2стр\",\n    \"вот2р\",\n    \"1вох\",\n    \"во1хл\",\n    \"во3х2т\",\n    \"1вою\",\n    \"2вп2\",\n    \"2вр.\",\n    \"2вра.\",\n    \"в2рав\",\n    \"2в1рам\",\n    \"в1рас\",\n    \"2в1рах\",\n    \"2врац\",\n    \"2вре.\",\n    \"2в1рен\",\n    \"1врид\",\n    \"1в2риз\",\n    \"в1рии\",\n    \"в1рик\",\n    \"в1рил\",\n    \"в1рис\",\n    \"в1рит\",\n    \"2в1ро\",\n    \"вро3т2\",\n    \"2в1ры\",\n    \"1врю\",\n    \"в1ря\",\n    \"2в1с2\",\n    \"3все3\",\n    \"в3ская\",\n    \"4в3ски\",\n    \"4в3ску\",\n    \"3в2сп\",\n    \"3в2сю\",\n    \"в1т2\",\n    \"вто1б2\",\n    \"вто3ш\",\n    \"1вуа\",\n    \"ву3г\",\n    \"1ву1з\",\n    \"2вуи\",\n    \"2ву1к\",\n    \"ву3п\",\n    \"ву1с2\",\n    \"ву2х1а\",\n    \"вух3в\",\n    \"ву1чл\",\n    \"вф2\",\n    \"1вхо\",\n    \"2вц\",\n    \"2в1ч\",\n    \"2вш\",\n    \"3в2шив\",\n    \"2вщ\",\n    \"въ2\",\n    \"1вы\",\n    \"вы3г2\",\n    \"вы3зн\",\n    \"вып2\",\n    \"вы3т2\",\n    \"вых2\",\n    \"вы3ш2л\",\n    \"2вь.\",\n    \"1вье\",\n    \"1вьин\",\n    \"2вьс\",\n    \"2вьт\",\n    \"1вью\",\n    \"1вья\",\n    \"1в2э1\",\n    \"1в2ю\",\n    \"1вя\",\n    \"1г\",\n    \"г2а\",\n    \"га1з\",\n    \"га1ст2\",\n    \"га2у\",\n    \"2г3б\",\n    \"гба2\",\n    \"г1ви\",\n    \"2гг\",\n    \"г3дан\",\n    \"2г3ди\",\n    \"3ге.\",\n    \"ге2б1\",\n    \"гено1\",\n    \"ге2об\",\n    \"ге2од\",\n    \"ге1ор\",\n    \"2г3ж\",\n    \"2г1з\",\n    \"г2и\",\n    \"ги2бл\",\n    \"ги3бр\",\n    \"ги2гр\",\n    \"ги1сл\",\n    \"гист2\",\n    \"2г1к\",\n    \"2гла.\",\n    \"г2лав\",\n    \"г1лай\",\n    \"г1лами\",\n    \"2глась\",\n    \"2глая\",\n    \"г1ле\",\n    \"г2лет\",\n    \"2гли.\",\n    \"г2лин\",\n    \"3г2лиф\",\n    \"2гло.\",\n    \"г3лобл\",\n    \"2глов\",\n    \"2глог\",\n    \"2глое\",\n    \"2глой\",\n    \"2глою\",\n    \"2глую\",\n    \"2г1лы\",\n    \"г2ляж\",\n    \"2гляк\",\n    \"2г3м\",\n    \"г2нав\",\n    \"г2нан\",\n    \"г3не.\",\n    \"г2нев\",\n    \"г3нен\",\n    \"г3неп\",\n    \"г3нес\",\n    \"г2нир\",\n    \"гнит2р\",\n    \"г2ное\",\n    \"г2нои\",\n    \"г2нос\",\n    \"г3ня\",\n    \"го1б2\",\n    \"го2вл\",\n    \"го3ж2д\",\n    \"го1з\",\n    \"го2зл\",\n    \"гоз2н\",\n    \"гоиг2\",\n    \"3гой\",\n    \"г2ол\",\n    \"гоми2\",\n    \"го2с1а\",\n    \"го2сд\",\n    \"го1скл\",\n    \"го1сн\",\n    \"го1спа\",\n    \"2готд\",\n    \"гоу3т\",\n    \"го1чл\",\n    \"3гою\",\n    \"2гп\",\n    \"2гр.\",\n    \"г1рае\",\n    \"г1рай\",\n    \"г1рар\",\n    \"г1рег\",\n    \"г1рек\",\n    \"г1рец\",\n    \"гри4в3н\",\n    \"г1рик\",\n    \"г1рил\",\n    \"г1рин\",\n    \"г1рис\",\n    \"г1рич\",\n    \"г1ров\",\n    \"г2роз\",\n    \"г1рок\",\n    \"г1рон\",\n    \"г1роп\",\n    \"г1рот\",\n    \"г1роф\",\n    \"гру2п\",\n    \"г1рыв\",\n    \"2грю\",\n    \"г1ряе\",\n    \"г1рял\",\n    \"г1рят\",\n    \"2г3с2\",\n    \"г4са\",\n    \"г4сб\",\n    \"2г3т\",\n    \"гу1в\",\n    \"гу1с\",\n    \"гу2с1к\",\n    \"2гф\",\n    \"2г1ч\",\n    \"2г3ш\",\n    \"2г3э\",\n    \"1да\",\n    \"да2б1\",\n    \"да2ген\",\n    \"да2гр\",\n    \"да1з\",\n    \"да2о\",\n    \"даст1р\",\n    \"дат1р\",\n    \"2д1б\",\n    \"дв2\",\n    \"д1ве\",\n    \"1дви\",\n    \"2д1вид\",\n    \"2двиз\",\n    \"2двинт\",\n    \"2двинч\",\n    \"2д1вис\",\n    \"2д1вит\",\n    \"д3вк\",\n    \"д1вл\",\n    \"2двод\",\n    \"д1воз\",\n    \"1дворь\",\n    \"2двя\",\n    \"2дг2\",\n    \"2д1д2\",\n    \"1де\",\n    \"де1б2л\",\n    \"де1б2р\",\n    \"3девр\",\n    \"3дез\",\n    \"де2з1а2\",\n    \"де2зи\",\n    \"дез1о2\",\n    \"де2зу\",\n    \"деио2\",\n    \"де1кл\",\n    \"3деме\",\n    \"де2од\",\n    \"део3п\",\n    \"де3пл\",\n    \"дерас2\",\n    \"де2с3в\",\n    \"дес2к\",\n    \"де2ср\",\n    \"де1хл\",\n    \"2дж.\",\n    \"д2жам\",\n    \"д2ж3м\",\n    \"2джс\",\n    \"2д1з2\",\n    \"1ди\",\n    \"ди2ад\",\n    \"диа2з\",\n    \"ди2али\",\n    \"ди2ало\",\n    \"ди2ар\",\n    \"ди2ас\",\n    \"ди2об\",\n    \"дио3де\",\n    \"ди2ор\",\n    \"дио1с\",\n    \"ди1оти\",\n    \"дип2\",\n    \"ди2пи\",\n    \"ди3пт\",\n    \"ди2с1тр\",\n    \"диу3\",\n    \"ди3фр\",\n    \"ди3фто\",\n    \"ди1х\",\n    \"2д1к\",\n    \"д1л\",\n    \"д2лев\",\n    \"2д3м2\",\n    \"2д1н\",\n    \"д3на\",\n    \"днеа2\",\n    \"3дневн\",\n    \"4д3но1\",\n    \"дно3д2\",\n    \"днос2\",\n    \"4д3ны\",\n    \"3д2няш\",\n    \"1до\",\n    \"2д1о2бед\",\n    \"до2бл\",\n    \"2д1обла\",\n    \"до1б2ра\",\n    \"дов2л\",\n    \"до3в2м\",\n    \"до1д2\",\n    \"до3дн\",\n    \"до3ж2д\",\n    \"до1з\",\n    \"доз2н\",\n    \"дои2р\",\n    \"2докт\",\n    \"2долим\",\n    \"до2м1р\",\n    \"доп2\",\n    \"до3пл\",\n    \"2допле\",\n    \"до2пре\",\n    \"до2руб\",\n    \"до1с\",\n    \"д1о2сен\",\n    \"д1о2син\",\n    \"2д1осно\",\n    \"дос2п\",\n    \"2дотд\",\n    \"2дотл\",\n    \"дот2ри\",\n    \"2д1отря\",\n    \"2дотъ\",\n    \"до3ть\",\n    \"3дохл\",\n    \"до2ш3в\",\n    \"до3ш2к\",\n    \"до2шлы\",\n    \"до2щу\",\n    \"2дп\",\n    \"2др.\",\n    \"д1раб\",\n    \"1дравш\",\n    \"2дразв\",\n    \"1д2разн\",\n    \"д1ране\",\n    \"д1рар\",\n    \"д1ра2с3\",\n    \"д1рах\",\n    \"д1рач\",\n    \"д2раю\",\n    \"д1ре\",\n    \"д2реб\",\n    \"2д3реж\",\n    \"2дрез\",\n    \"д2рел\",\n    \"д2рем\",\n    \"1дрема\",\n    \"1дремл\",\n    \"дрем3н\",\n    \"1дремы\",\n    \"2д3рен\",\n    \"дре2ск\",\n    \"д2ресс\",\n    \"д1ри\",\n    \"д2рий\",\n    \"2дрин\",\n    \"д2рип\",\n    \"д2рих\",\n    \"дро2г3н\",\n    \"д1род\",\n    \"д1рое\",\n    \"1д2рож\",\n    \"2д3роз\",\n    \"д1рой\",\n    \"д1рол\",\n    \"д1рон\",\n    \"д1рос\",\n    \"д1рот\",\n    \"д1рою\",\n    \"д1руб\",\n    \"1друг\",\n    \"1друж\",\n    \"д1рум\",\n    \"д1рую\",\n    \"д1ры\",\n    \"2дрыв\",\n    \"1д2рыг\",\n    \"д1ря\",\n    \"д2ряб\",\n    \"1д2ряг\",\n    \"д2рях\",\n    \"2д1с2\",\n    \"дск2\",\n    \"дс3кн\",\n    \"2д1т\",\n    \"1ду\",\n    \"дуб3р\",\n    \"ду3г\",\n    \"2д1уд\",\n    \"ду2да\",\n    \"ду2о\",\n    \"дуп1л\",\n    \"дус1к\",\n    \"д1усл\",\n    \"ду1ст\",\n    \"ду2ста\",\n    \"2дут1р\",\n    \"ду1х\",\n    \"ду2чи\",\n    \"дуэ1т\",\n    \"2дф\",\n    \"д1х\",\n    \"2д3це\",\n    \"2дцу\",\n    \"2дцы\",\n    \"2д1ч\",\n    \"2д3ш2\",\n    \"2дщ\",\n    \"2дъ\",\n    \"дъе2м\",\n    \"1ды\",\n    \"2дыг\",\n    \"ды2г1р\",\n    \"2дыд\",\n    \"2дыме\",\n    \"2ды2с1\",\n    \"2дыт\",\n    \"2дыщ\",\n    \"2дь.\",\n    \"1дье\",\n    \"2дьк\",\n    \"2дьт\",\n    \"1дью\",\n    \"1дья\",\n    \"дь3яр\",\n    \"1д2ю\",\n    \"1дя\",\n    \"е1а\",\n    \"еа2д\",\n    \"еади3\",\n    \"еа3до\",\n    \"еа2з\",\n    \"еан2д1р\",\n    \"еат1р\",\n    \"2еб\",\n    \"еба2с\",\n    \"е1бра\",\n    \"еб1рен\",\n    \"еб1ри\",\n    \"е1бро\",\n    \"еб1ров\",\n    \"еб1ры\",\n    \"е2б3рю\",\n    \"е1ве\",\n    \"2евер\",\n    \"е1ви\",\n    \"е3в2ме\",\n    \"ев2ним\",\n    \"ев2нят\",\n    \"е1во\",\n    \"2евол\",\n    \"евра1с\",\n    \"2е1вре\",\n    \"ев1рее\",\n    \"ев1рей\",\n    \"ев1рея\",\n    \"ев1ри\",\n    \"е2вт\",\n    \"е1ву\",\n    \"е1вх\",\n    \"ев2хо\",\n    \"е1вь\",\n    \"ега1с2\",\n    \"ег2д\",\n    \"е2глан\",\n    \"е2гле\",\n    \"е2гли\",\n    \"е2гло\",\n    \"ег2на\",\n    \"ег2но\",\n    \"2ег2р\",\n    \"ед1во\",\n    \"ед2ж\",\n    \"е1дже\",\n    \"е1д2лин\",\n    \"едноу3\",\n    \"ед1опр\",\n    \"е2дотв\",\n    \"е2дох\",\n    \"е2д1ощ\",\n    \"е1дру\",\n    \"е2дру.\",\n    \"е2ду2б\",\n    \"ед1убо\",\n    \"е2дуве\",\n    \"е2дуг\",\n    \"е2дус\",\n    \"ед1уст\",\n    \"2е3душ\",\n    \"е2дын\",\n    \"е1е\",\n    \"е2евид\",\n    \"ее2в1р\",\n    \"ее2ги\",\n    \"ее1с2\",\n    \"ее2ст\",\n    \"еест1р\",\n    \"ее2х\",\n    \"е2жг\",\n    \"е4ждев\",\n    \"еж3ди\",\n    \"2еже\",\n    \"е2ж1р\",\n    \"еза2вр\",\n    \"езау3\",\n    \"е1з2ва\",\n    \"езд1р\",\n    \"е3зе\",\n    \"еззу3\",\n    \"е3зит\",\n    \"ез1об\",\n    \"ез1о2г\",\n    \"е1зом\",\n    \"ез1оп\",\n    \"ез1о2р\",\n    \"ез1от\",\n    \"ез1ош\",\n    \"ез2ря\",\n    \"ез1у2д\",\n    \"ез1у2к\",\n    \"ез1уп\",\n    \"ез1ус\",\n    \"езу2со\",\n    \"езу2сы\",\n    \"ез1у2х\",\n    \"ез1уча\",\n    \"е3зя\",\n    \"е1и\",\n    \"еи2г1\",\n    \"еи2д\",\n    \"еи2м\",\n    \"еи2о\",\n    \"еис1л\",\n    \"еис1тр\",\n    \"е1ка\",\n    \"ека2б\",\n    \"ек2з\",\n    \"е1ки\",\n    \"2е1ко\",\n    \"2е1кр\",\n    \"ек2ро\",\n    \"ек1ск\",\n    \"ек1сте\",\n    \"е1ку\",\n    \"е1ла\",\n    \"е1ле\",\n    \"еле3ск\",\n    \"еле1сц\",\n    \"е1лу\",\n    \"е1лы\",\n    \"е1лю\",\n    \"е3ля\",\n    \"еми3д2\",\n    \"еми3к\",\n    \"емо1с\",\n    \"2емуж\",\n    \"е2мч\",\n    \"2емыс\",\n    \"е3на\",\n    \"ен2д1р\",\n    \"2е1нр\",\n    \"енс2\",\n    \"ен3ш2\",\n    \"е1нэ\",\n    \"2ео\",\n    \"е1о2б\",\n    \"еоб2ро\",\n    \"е2о3гл\",\n    \"ео2гро\",\n    \"е1од\",\n    \"ео3да\",\n    \"ео2де\",\n    \"еоде3з\",\n    \"ео2до\",\n    \"е1о2ж\",\n    \"е2ои\",\n    \"ео3кл\",\n    \"е1ол.\",\n    \"е1ола\",\n    \"ео3ли\",\n    \"е1олк\",\n    \"е1олы\",\n    \"е1оль\",\n    \"е2ом\",\n    \"е1он.\",\n    \"е2она\",\n    \"е2они\",\n    \"ео3но\",\n    \"е1онс\",\n    \"еоп2\",\n    \"е1опе\",\n    \"ео2пр\",\n    \"ео4пу\",\n    \"е2о3ро\",\n    \"еос2\",\n    \"е1о2сви\",\n    \"ео1ск\",\n    \"е1осм\",\n    \"е1осн\",\n    \"еост1р\",\n    \"ео3сх\",\n    \"е1отл\",\n    \"еот2ру\",\n    \"е1о2ч\",\n    \"е1о2щ\",\n    \"епат2\",\n    \"епа1тр\",\n    \"2епе\",\n    \"епис2к\",\n    \"е2пл\",\n    \"е3пла\",\n    \"еп1леш\",\n    \"е3п2лод\",\n    \"еп1лу\",\n    \"е3плы\",\n    \"еп1лющ\",\n    \"е4пн\",\n    \"2епо\",\n    \"е4п3с\",\n    \"е4пт\",\n    \"е1ра\",\n    \"ер1акт\",\n    \"е2рв\",\n    \"ер1ве\",\n    \"е1ре\",\n    \"е3ре.\",\n    \"ере3до\",\n    \"ере1др\",\n    \"ере1к2\",\n    \"ере3м2н\",\n    \"ере3п\",\n    \"ере1х4\",\n    \"е1ри\",\n    \"ерио3з\",\n    \"е1ро\",\n    \"еро2б\",\n    \"ер1обл\",\n    \"2ерови\",\n    \"2ерокр\",\n    \"2ерол\",\n    \"еро3ф2\",\n    \"ер3ск\",\n    \"е1ру\",\n    \"е2р1у2п\",\n    \"е1ры\",\n    \"е1рю\",\n    \"е1ря\",\n    \"е3с2а\",\n    \"ес2ба\",\n    \"е1сг\",\n    \"е1ск\",\n    \"е2с1ка.\",\n    \"ес1кал\",\n    \"е2ске\",\n    \"е2сков\",\n    \"е4с1ку.\",\n    \"2есл\",\n    \"ес1лас\",\n    \"ес2лин\",\n    \"ес2лов\",\n    \"ес2лом\",\n    \"е1слу\",\n    \"е1слы\",\n    \"е1с4м\",\n    \"е3со\",\n    \"2есп\",\n    \"ес2пек\",\n    \"ес3пол\",\n    \"е2спу\",\n    \"е1ст\",\n    \"ес2тан\",\n    \"е2стл\",\n    \"е3сту\",\n    \"ес2чет\",\n    \"е1та\",\n    \"ет1ве\",\n    \"ет1ви\",\n    \"е1тво\",\n    \"2етеч\",\n    \"е1ти\",\n    \"е1то\",\n    \"ето1с\",\n    \"ет1р\",\n    \"ет2ря\",\n    \"е1ту\",\n    \"е1ты\",\n    \"е1тье\",\n    \"е3тью\",\n    \"е3тья\",\n    \"е1тю\",\n    \"е1тя\",\n    \"е1у2\",\n    \"2еуб\",\n    \"еуб3р\",\n    \"еуз2\",\n    \"еук2ло\",\n    \"ефи3б2\",\n    \"еф2л\",\n    \"еф1ре\",\n    \"еха2т\",\n    \"ех1ато\",\n    \"ех3вал\",\n    \"ех3лоп\",\n    \"ех1об\",\n    \"ех1опо\",\n    \"ех1ре\",\n    \"ех1ру\",\n    \"ех1у2ч\",\n    \"2ецв\",\n    \"е1чл\",\n    \"е2шл\",\n    \"еэ2\",\n    \"ею2г\",\n    \"е1я\",\n    \"ея2з\",\n    \"1ж\",\n    \"жа2бл\",\n    \"жа2бр\",\n    \"жа1з\",\n    \"жат1в\",\n    \"2ж1б2\",\n    \"2ж1в\",\n    \"жг2\",\n    \"2жга\",\n    \"ж2ги\",\n    \"3ж2гл\",\n    \"ж2гу\",\n    \"2ж1д\",\n    \"ж2дак\",\n    \"ж2дач\",\n    \"3ж2дел\",\n    \"4ждеме\",\n    \"ж2деп\",\n    \"ж2ди\",\n    \"4ж2дл\",\n    \"ждо3\",\n    \"жду1\",\n    \"4ждь\",\n    \"3ж2дя\",\n    \"3жев\",\n    \"же3д2\",\n    \"же1к2в\",\n    \"же1кл\",\n    \"же1о2\",\n    \"же3п2\",\n    \"же1с2\",\n    \"же3ск\",\n    \"2жжа\",\n    \"ж2же\",\n    \"2жжев\",\n    \"2ж1з2\",\n    \"жи1о\",\n    \"2жирр\",\n    \"2ж1к\",\n    \"2ж1л\",\n    \"ж2м\",\n    \"ж3ма\",\n    \"2ж3мо\",\n    \"2ж1н\",\n    \"жно1\",\n    \"2ж1об\",\n    \"2ж1о2т1\",\n    \"жоу3\",\n    \"жоу1с\",\n    \"2жп2\",\n    \"жпо1\",\n    \"ж2ру\",\n    \"2ж1с\",\n    \"2жф\",\n    \"2жц\",\n    \"2ж1ч\",\n    \"2жъ\",\n    \"2жь.\",\n    \"2жьс\",\n    \"2жьт\",\n    \"1за1\",\n    \"заа2\",\n    \"заб2\",\n    \"за2в1ри\",\n    \"за2вру\",\n    \"з1аву\",\n    \"заг4\",\n    \"з1адр\",\n    \"зае2д\",\n    \"зае2х\",\n    \"за3ж2д\",\n    \"за3з2\",\n    \"з1акт\",\n    \"за3мне\",\n    \"3з2ан\",\n    \"за3на\",\n    \"занс2\",\n    \"зап2\",\n    \"зар2в\",\n    \"за3р2д\",\n    \"зар2ж\",\n    \"зас2\",\n    \"заст2\",\n    \"зат2\",\n    \"за3тк\",\n    \"зау2\",\n    \"зах2\",\n    \"зач2т\",\n    \"за3ш2\",\n    \"зая2\",\n    \"з1б2\",\n    \"2з3ва.\",\n    \"з2вав\",\n    \"з3валь\",\n    \"з2ван\",\n    \"2звая\",\n    \"з1ве\",\n    \"з2вез\",\n    \"з1ви\",\n    \"з3в2к\",\n    \"з1вла\",\n    \"з1во\",\n    \"2звол\",\n    \"1з2вон\",\n    \"з1вр\",\n    \"1зву\",\n    \"2з1вую\",\n    \"з1вь\",\n    \"2зг\",\n    \"з3га\",\n    \"з2гли\",\n    \"зг2на\",\n    \"з2гну\",\n    \"з1д2в\",\n    \"з2деш\",\n    \"здож3\",\n    \"1зе\",\n    \"зе2б1\",\n    \"зе2ев\",\n    \"зе2од\",\n    \"2зж2\",\n    \"з3з2\",\n    \"1зи\",\n    \"3зи.\",\n    \"3зий.\",\n    \"з1инт\",\n    \"зи2оз\",\n    \"зи2оно\",\n    \"зи1оп\",\n    \"3зис\",\n    \"зи3т2р\",\n    \"зиу3м\",\n    \"3зич\",\n    \"2з1к\",\n    \"зко1\",\n    \"зко3п2\",\n    \"з1л\",\n    \"з2лащ\",\n    \"з2лоб\",\n    \"з2лоп\",\n    \"з2лор\",\n    \"з2лющ\",\n    \"2зм2\",\n    \"з3мн\",\n    \"з1н\",\n    \"2зна.\",\n    \"з2нав\",\n    \"з2нае\",\n    \"з2най\",\n    \"з2нак\",\n    \"з2нан\",\n    \"з2нат\",\n    \"з2наю\",\n    \"2зная\",\n    \"2зне\",\n    \"2з3ни\",\n    \"2зно\",\n    \"2зну\",\n    \"2з3ны\",\n    \"з2обе\",\n    \"зо2би\",\n    \"1зов\",\n    \"зо3в2м\",\n    \"зо2гл\",\n    \"зо1др\",\n    \"1зое\",\n    \"зо1з2\",\n    \"1зои\",\n    \"1зой.\",\n    \"1зок.\",\n    \"з1окс\",\n    \"1зол2\",\n    \"зо1лг\",\n    \"зо1лж\",\n    \"зо3м2\",\n    \"1зом.\",\n    \"2зомн\",\n    \"1зон\",\n    \"2зонр\",\n    \"1зоо\",\n    \"зо2о3п\",\n    \"зо2ос\",\n    \"зо2па\",\n    \"з2опл\",\n    \"з2опр\",\n    \"з1орг\",\n    \"1з2о3ре\",\n    \"зос2\",\n    \"з1осн\",\n    \"зо1сп\",\n    \"зо2тв\",\n    \"з2оте\",\n    \"з1отк\",\n    \"з2ото\",\n    \"зот2ре\",\n    \"зот2ри\",\n    \"1зох\",\n    \"зош2\",\n    \"зо2ши\",\n    \"1зоэ\",\n    \"1зою\",\n    \"з1ра\",\n    \"з2рак\",\n    \"зра2с\",\n    \"з2рач\",\n    \"з2рен\",\n    \"з1рес\",\n    \"з2риш\",\n    \"з1ро\",\n    \"зро2с3\",\n    \"з1ру\",\n    \"з2рю\",\n    \"з1ря\",\n    \"2з1с\",\n    \"2зт\",\n    \"з1ти\",\n    \"1зу\",\n    \"3зу.\",\n    \"2з1у2бе\",\n    \"зу2б3р\",\n    \"зу1в\",\n    \"2зуве\",\n    \"2зу2г\",\n    \"3зуе\",\n    \"2з1уз3\",\n    \"2зу1к\",\n    \"3зуме\",\n    \"з1у2мо\",\n    \"2зуп\",\n    \"зу2пр\",\n    \"з1урб\",\n    \"з1у2те\",\n    \"зу2час\",\n    \"2зц\",\n    \"з1ч\",\n    \"2зш\",\n    \"зъе2м\",\n    \"1зы\",\n    \"2зы2г1\",\n    \"зы2з\",\n    \"2зыме\",\n    \"2зымч\",\n    \"2зы2с1\",\n    \"2зыщ\",\n    \"1зье\",\n    \"1зьи\",\n    \"1зью\",\n    \"3зья\",\n    \"1з2ю\",\n    \"1зя\",\n    \"и1а\",\n    \"и2аб\",\n    \"и2ав\",\n    \"иаг2\",\n    \"и2агр\",\n    \"и2аде\",\n    \"и2ади\",\n    \"иа2зов\",\n    \"иа2му\",\n    \"и3ана\",\n    \"иа2нал\",\n    \"ианд2\",\n    \"иао2\",\n    \"и2ап\",\n    \"иа1с2к\",\n    \"иа1ста\",\n    \"иа1сто\",\n    \"иат1ро\",\n    \"и3ату\",\n    \"и2аф\",\n    \"и2а1х\",\n    \"иа2це\",\n    \"2и1б\",\n    \"и2б1р\",\n    \"2иваж\",\n    \"2и1ве\",\n    \"и2в3з\",\n    \"и1ви\",\n    \"2и1во\",\n    \"и1в2р\",\n    \"и3в2с\",\n    \"и1ву\",\n    \"ив2хо\",\n    \"2ивы\",\n    \"иг2д\",\n    \"и3ге\",\n    \"2игл\",\n    \"и2гле\",\n    \"и2гли\",\n    \"и2гн\",\n    \"игни3\",\n    \"иг1рен\",\n    \"иг1ро\",\n    \"иг1ру\",\n    \"иг1ры\",\n    \"и2г1ря\",\n    \"и1дв\",\n    \"и2дей\",\n    \"и1д2ж\",\n    \"иди1ом\",\n    \"иди1от\",\n    \"ид1р\",\n    \"и1дь\",\n    \"и1е\",\n    \"и2евод\",\n    \"ие2г\",\n    \"ие2д\",\n    \"ие3де\",\n    \"ие2зу\",\n    \"и3ени\",\n    \"ие1о2\",\n    \"иепи1\",\n    \"ие2р\",\n    \"и3ж2д\",\n    \"из1в2\",\n    \"из2гне\",\n    \"1из1д\",\n    \"из2нал\",\n    \"и1зо\",\n    \"изо2о\",\n    \"из1р\",\n    \"и1и\",\n    \"ийс2\",\n    \"и1к\",\n    \"и3к2а\",\n    \"ика1с2\",\n    \"ик2ва\",\n    \"и2кви\",\n    \"и2кля\",\n    \"и3ко\",\n    \"ик1ро\",\n    \"ик1ск\",\n    \"ик2с1т\",\n    \"и3ку\",\n    \"и1л\",\n    \"и2л1а2ц\",\n    \"ило1ск\",\n    \"илп2\",\n    \"и2л1у2п\",\n    \"и2ль\",\n    \"ильт2\",\n    \"2има\",\n    \"и2мено\",\n    \"и2мену\",\n    \"2имень\",\n    \"и3ми\",\n    \"имои2\",\n    \"им3пл\",\n    \"и2м1р\",\n    \"и2мч\",\n    \"им2ча\",\n    \"инд2\",\n    \"1инж\",\n    \"ино2к3л\",\n    \"ино3п2л\",\n    \"ино1с\",\n    \"инс2\",\n    \"1инсп\",\n    \"1инсти\",\n    \"1инсу\",\n    \"1инф\",\n    \"1инъ\",\n    \"и1об\",\n    \"ио2бо\",\n    \"ио2вр\",\n    \"и2ог\",\n    \"и1од\",\n    \"ио2де\",\n    \"и1оз\",\n    \"ио3зо\",\n    \"и1окс\",\n    \"и1оле\",\n    \"и1он\",\n    \"и3онов\",\n    \"и1опт\",\n    \"и1ор\",\n    \"и3ора\",\n    \"ио1ру\",\n    \"ио2са\",\n    \"ио3скл\",\n    \"ио1с2п\",\n    \"и1ота\",\n    \"ио2т1в\",\n    \"и1отк\",\n    \"и1отс\",\n    \"иоуг2\",\n    \"ио2хо\",\n    \"и1ош\",\n    \"2ип\",\n    \"ипат2\",\n    \"ипа1тр\",\n    \"ип2ля\",\n    \"ип3н\",\n    \"ипо3к2\",\n    \"и1р\",\n    \"ира2ст\",\n    \"и2р1ау\",\n    \"и2рв\",\n    \"и2рж\",\n    \"ири2ск\",\n    \"ириу3\",\n    \"иро1з2\",\n    \"1ирр\",\n    \"исан2д1\",\n    \"и2сб\",\n    \"и2сд\",\n    \"ис1к\",\n    \"ис3ка.\",\n    \"ис3кам\",\n    \"ис3ках\",\n    \"ис3ке\",\n    \"ис3ки\",\n    \"ис3ков\",\n    \"ис3ку.\",\n    \"и2слам\",\n    \"ис1лы\",\n    \"ис3ме\",\n    \"ис3му\",\n    \"ис3но\",\n    \"исо2ск\",\n    \"и2с3пр\",\n    \"и4сс\",\n    \"и1ст\",\n    \"и2ст1в\",\n    \"и2стл\",\n    \"ис1тяз\",\n    \"и1сьи\",\n    \"и1т\",\n    \"ита2в\",\n    \"ит3ва\",\n    \"и2т1ве\",\n    \"ит1ви\",\n    \"ит1ву\",\n    \"и2тм\",\n    \"и2т1р\",\n    \"ит2рес\",\n    \"ит3ром\",\n    \"и2т1уч\",\n    \"и3тью\",\n    \"и3тья\",\n    \"и1у2\",\n    \"иу3п\",\n    \"иф1л\",\n    \"иф2лю\",\n    \"и2фр\",\n    \"иха3д\",\n    \"и2х1ас\",\n    \"их2ло2\",\n    \"ихлор1\",\n    \"и3х2о\",\n    \"ихо3к\",\n    \"их1ре\",\n    \"их1ри\",\n    \"и1ху\",\n    \"и1ч\",\n    \"иш2ли\",\n    \"и2шлы\",\n    \"и2шт\",\n    \"ию4л\",\n    \"ию2н\",\n    \"ию2т\",\n    \"ию3та\",\n    \"и1я\",\n    \"ия2д\",\n    \"2й1\",\n    \"йд2\",\n    \"й2д3в\",\n    \"йно1\",\n    \"й2о1с\",\n    \"йо2тр\",\n    \"йп2л\",\n    \"й2сб\",\n    \"й3ска\",\n    \"йс2ке\",\n    \"йс4мо\",\n    \"й2с3му\",\n    \"й2сн\",\n    \"й2с3ф\",\n    \"й2сш\",\n    \"й2тм\",\n    \"й2хм\",\n    \"йх2с3\",\n    \"йя1\",\n    \"ка2бл\",\n    \"ка2бри\",\n    \"1кав\",\n    \"к2ад\",\n    \"ка3дне\",\n    \"ка2д1р\",\n    \"1кае\",\n    \"каз3н\",\n    \"ка1зо\",\n    \"1кай\",\n    \"1кал.\",\n    \"1кало\",\n    \"1калс\",\n    \"1кам\",\n    \"1кан\",\n    \"ка2п1л\",\n    \"ка2пре\",\n    \"кар3тр\",\n    \"3к2ас\",\n    \"ка1ст\",\n    \"1кат\",\n    \"ка1т2р\",\n    \"1ках\",\n    \"ка2ш1т\",\n    \"1каю\",\n    \"2к1б\",\n    \"к2вак\",\n    \"к2вас\",\n    \"к2ваш\",\n    \"к1ви\",\n    \"к2воз\",\n    \"к1ву\",\n    \"2кг\",\n    \"2к1д\",\n    \"кда2\",\n    \"1ке\",\n    \"2кеа\",\n    \"ке2гл\",\n    \"кед1р\",\n    \"ке2с1к\",\n    \"ке2ст1\",\n    \"2к1з\",\n    \"1кив\",\n    \"ки1о\",\n    \"киос1\",\n    \"ки2пл\",\n    \"ки1с2ни\",\n    \"1кит\",\n    \"2к1к2\",\n    \"кк3с\",\n    \"2к3ла.\",\n    \"2к3лась\",\n    \"2к3ле.\",\n    \"2клем\",\n    \"к3лем.\",\n    \"к3лен\",\n    \"к1лео\",\n    \"2к3ли.\",\n    \"2к3лив\",\n    \"к2лик\",\n    \"к2лин\",\n    \"2к3лис\",\n    \"к3лия\",\n    \"2к3ло.\",\n    \"к2лоз\",\n    \"к3лом\",\n    \"2к3лос\",\n    \"кло3т\",\n    \"1клук\",\n    \"к3лы\",\n    \"2кль\",\n    \"1клю\",\n    \"2к3лю.\",\n    \"2кля.\",\n    \"2клям\",\n    \"2клях\",\n    \"2км\",\n    \"2к1н\",\n    \"3к2ниж\",\n    \"к2ноп\",\n    \"3к2няж\",\n    \"к2о\",\n    \"ко1б2ри\",\n    \"1ков\",\n    \"3кова\",\n    \"1код\",\n    \"ко1др\",\n    \"1коз\",\n    \"1кольс\",\n    \"2комин\",\n    \"3конс\",\n    \"коп2р\",\n    \"ко2р3в\",\n    \"ко1ру\",\n    \"1кос\",\n    \"ко1ск\",\n    \"кос3м\",\n    \"ко1сп\",\n    \"1котн\",\n    \"ко2фр\",\n    \"кохо2р3\",\n    \"1кош\",\n    \"2кп\",\n    \"2кр.\",\n    \"к1рел\",\n    \"кре1о\",\n    \"кре2сл\",\n    \"к1реч\",\n    \"1криб\",\n    \"к1рид\",\n    \"к2риз\",\n    \"кри2о3\",\n    \"к2рит\",\n    \"к1рих\",\n    \"к1роа\",\n    \"к1роб\",\n    \"к2рое\",\n    \"к1рок\",\n    \"к1роо\",\n    \"к1рор\",\n    \"к1рос\",\n    \"к1роф\",\n    \"к1рох\",\n    \"к1роэ\",\n    \"кру1с\",\n    \"к1ряд\",\n    \"2кс\",\n    \"ксанд2\",\n    \"к2с3в\",\n    \"кс3г\",\n    \"к2с3д\",\n    \"к2сиб\",\n    \"к1ски\",\n    \"кс1кл\",\n    \"к1ско\",\n    \"кс3м\",\n    \"к3со\",\n    \"к1стам\",\n    \"к1стан\",\n    \"кс3те\",\n    \"к1сто\",\n    \"кс1тр\",\n    \"к1сту\",\n    \"к3су\",\n    \"2к1т\",\n    \"кта2к\",\n    \"3к2то.\",\n    \"кто1с\",\n    \"кт2р\",\n    \"к2у\",\n    \"ку1ве\",\n    \"3куе\",\n    \"1куй\",\n    \"1куля\",\n    \"3кум\",\n    \"куп1л\",\n    \"ку2п1р\",\n    \"1кур\",\n    \"ку3ро\",\n    \"кус1к\",\n    \"ку1ст\",\n    \"1кут\",\n    \"ку3ть\",\n    \"1куче\",\n    \"1куют\",\n    \"3кующ\",\n    \"2кф\",\n    \"2к1х2\",\n    \"2кц\",\n    \"2к1ч\",\n    \"2кш\",\n    \"1кь\",\n    \"к2ю\",\n    \"1ла.\",\n    \"2лабе\",\n    \"ла2бл\",\n    \"2лаго\",\n    \"ла2гр\",\n    \"ла2д1аг\",\n    \"1лае\",\n    \"ла3ж2д\",\n    \"ла1зо\",\n    \"л2ак\",\n    \"лак2р\",\n    \"1лам.\",\n    \"1лами.\",\n    \"лан2д1р\",\n    \"ла1ста\",\n    \"ласт1в\",\n    \"ла1сте\",\n    \"ла1сто\",\n    \"ла2ст1р\",\n    \"ла1сту\",\n    \"ла1стя\",\n    \"ла1т2р\",\n    \"лау1\",\n    \"ла2ус\",\n    \"ла2фр\",\n    \"1ла1х\",\n    \"1лая\",\n    \"2лб\",\n    \"л1бр\",\n    \"л1ве\",\n    \"л1ви\",\n    \"л1во\",\n    \"л1ву\",\n    \"1л2гал\",\n    \"л2гл\",\n    \"лго1\",\n    \"2л3д2\",\n    \"1ле.\",\n    \"ле1вл\",\n    \"лев1ра\",\n    \"ле2г1л\",\n    \"ле1дж\",\n    \"ле3до\",\n    \"ле1з2о3\",\n    \"ле1зр\",\n    \"лек1л\",\n    \"2лемн\",\n    \"1лен\",\n    \"ле1онт\",\n    \"ле1о2с\",\n    \"ле2сб\",\n    \"ле2ск\",\n    \"ле4ска\",\n    \"ле1с2л\",\n    \"ле1спе\",\n    \"ле1тв\",\n    \"ле1т2р\",\n    \"1лех\",\n    \"ле1хр\",\n    \"л1зо\",\n    \"1ли\",\n    \"лиа2м\",\n    \"3ливо\",\n    \"3ливы\",\n    \"лиг2л\",\n    \"ли2гро\",\n    \"лие3р\",\n    \"ли2кв\",\n    \"2лимп\",\n    \"лио1с\",\n    \"ли2пл\",\n    \"лис3м\",\n    \"2л1исп\",\n    \"ли2тв\",\n    \"лиу3м\",\n    \"ли2х3в\",\n    \"ли1хл\",\n    \"ли1хр\",\n    \"2л1к\",\n    \"лк2в\",\n    \"л2к1л\",\n    \"2л1л\",\n    \"л2ль\",\n    \"ллю1\",\n    \"2лм\",\n    \"2л1н\",\n    \"лни2е\",\n    \"1ло\",\n    \"ло2бл\",\n    \"ло1б2р\",\n    \"2ловия\",\n    \"ло2вл\",\n    \"3ловод\",\n    \"ло2г3д\",\n    \"лого1с\",\n    \"ло1др\",\n    \"2лоен\",\n    \"ло1зв\",\n    \"ло2к1а2у\",\n    \"ло2кл\",\n    \"лок3ла\",\n    \"3лопас\",\n    \"ло2рв\",\n    \"2л1орг\",\n    \"ло1ру\",\n    \"лос1к\",\n    \"ло1с2п\",\n    \"2лотд\",\n    \"лот2р\",\n    \"ло2шл\",\n    \"2лп\",\n    \"2л1с2\",\n    \"лс3б\",\n    \"л1т\",\n    \"1лу.\",\n    \"лу1бр\",\n    \"лу1в\",\n    \"лу3г\",\n    \"лу1д4р\",\n    \"1луе\",\n    \"лу1зн\",\n    \"лу1кр\",\n    \"1лун\",\n    \"луо2д\",\n    \"лу3п2ло\",\n    \"лу1с\",\n    \"лу3ть\",\n    \"1лую\",\n    \"2л3ф2\",\n    \"2л1х2\",\n    \"л2х3в\",\n    \"2лц\",\n    \"л1ч\",\n    \"1лы.\",\n    \"1лые\",\n    \"1лыж\",\n    \"1лый\",\n    \"1лым\",\n    \"1лых.\",\n    \"4ль.\",\n    \"2льд\",\n    \"3лье\",\n    \"3льи\",\n    \"2льк\",\n    \"2льм\",\n    \"2льн\",\n    \"3льо\",\n    \"2льск\",\n    \"1льсти\",\n    \"1льстя\",\n    \"2льт\",\n    \"2льц\",\n    \"2льч\",\n    \"1льща\",\n    \"1льще\",\n    \"1льщу\",\n    \"3лью\",\n    \"3лья\",\n    \"л2ю\",\n    \"1лю.\",\n    \"1люж\",\n    \"1люсь\",\n    \"лю1та\",\n    \"1ля\",\n    \"3ля.\",\n    \"ля1ви\",\n    \"3ляво\",\n    \"3лявы\",\n    \"2ляд\",\n    \"3лям\",\n    \"ля1ре\",\n    \"ля1ру\",\n    \"3лях\",\n    \"1м\",\n    \"ма2вз\",\n    \"3маг\",\n    \"ма2гн\",\n    \"ма2др\",\n    \"ма2дь\",\n    \"ма1зо\",\n    \"ма2к1р\",\n    \"2м1алл\",\n    \"ман2д1р\",\n    \"мас3л\",\n    \"ма1с4т\",\n    \"ма2тоб\",\n    \"ма2т1р\",\n    \"ма2у\",\n    \"маф2\",\n    \"3мач\",\n    \"ма2чт\",\n    \"4м1б\",\n    \"м3би\",\n    \"мб2л\",\n    \"м3бля\",\n    \"2м3в2\",\n    \"2мг2\",\n    \"3м2гл\",\n    \"2м1д\",\n    \"меан2\",\n    \"ме2ег\",\n    \"ме2ел\",\n    \"ме2ж1ат\",\n    \"ме1зо\",\n    \"ме2с1к\",\n    \"ме2ст1р\",\n    \"меч1т\",\n    \"2мж\",\n    \"2м1з2\",\n    \"ми2гре\",\n    \"ми1зв\",\n    \"2мизд\",\n    \"ми1зн\",\n    \"ми2кр\",\n    \"мик1ри\",\n    \"ми2оз\",\n    \"ми1опи\",\n    \"ми2ор\",\n    \"ми1с2л\",\n    \"2м1к2\",\n    \"3мкн\",\n    \"2м1л\",\n    \"м2лее\",\n    \"м2лел\",\n    \"2мм\",\n    \"2м1н\",\n    \"4м3на\",\n    \"мне1д\",\n    \"3м2неш\",\n    \"4мное\",\n    \"м2нож\",\n    \"4мной\",\n    \"4мном\",\n    \"м2нор\",\n    \"4мною\",\n    \"м2нут\",\n    \"4м3ны\",\n    \"мо1б2\",\n    \"мо3вл\",\n    \"3мод\",\n    \"мо1др\",\n    \"мо2жж\",\n    \"мо1зв\",\n    \"мо1зр\",\n    \"моис1т\",\n    \"мо2к3в\",\n    \"мо3м2\",\n    \"3мон\",\n    \"3моп\",\n    \"мо1ру\",\n    \"мос1ка\",\n    \"мо1см\",\n    \"мо1сн\",\n    \"мо1с2п\",\n    \"3моти\",\n    \"мо2т1р\",\n    \"3моф\",\n    \"2мп\",\n    \"мп2л\",\n    \"м1раб\",\n    \"2мри\",\n    \"2м1ро\",\n    \"м1ры\",\n    \"2м1с\",\n    \"мс2к\",\n    \"мс2н\",\n    \"м2с1ор\",\n    \"3м2сти\",\n    \"2м1т\",\n    \"му1с2к\",\n    \"му1с4л\",\n    \"му1ст\",\n    \"мут1р\",\n    \"му3ть\",\n    \"2мф\",\n    \"мфи3\",\n    \"2м1х\",\n    \"2мц\",\n    \"м2чав\",\n    \"м2чал\",\n    \"м2чит\",\n    \"м2чиш\",\n    \"2мш2\",\n    \"2мщ\",\n    \"3м2ще\",\n    \"мым1\",\n    \"мы2мр\",\n    \"мы2с\",\n    \"2мь.\",\n    \"2мьс\",\n    \"мью1\",\n    \"2мэ\",\n    \"мэ1р\",\n    \"м2ю\",\n    \"мя1р\",\n    \"мя1ст\",\n    \"1на\",\n    \"наби1о\",\n    \"наб2р\",\n    \"на1в2р\",\n    \"наг2н\",\n    \"на3жд\",\n    \"на1з2\",\n    \"на2ил\",\n    \"на2ин\",\n    \"на2и1с2\",\n    \"4накк\",\n    \"на3м2н\",\n    \"нап2л\",\n    \"на1рва\",\n    \"на1р2ви\",\n    \"на1с2\",\n    \"на1тв\",\n    \"на1т2р\",\n    \"н1а2фр\",\n    \"на1х2\",\n    \"2нач\",\n    \"на3ш2л\",\n    \"2нащ\",\n    \"наэ1р\",\n    \"3ная\",\n    \"2н1б2\",\n    \"2н1в\",\n    \"2нг\",\n    \"н2г1в\",\n    \"нги2о\",\n    \"нг4л\",\n    \"нго1с\",\n    \"нг2р\",\n    \"2н1д\",\n    \"н2дак\",\n    \"н2д1в\",\n    \"нде3з\",\n    \"нде2с\",\n    \"нд2ж\",\n    \"н3д2з\",\n    \"н2дл\",\n    \"нд1раг\",\n    \"нд1раж\",\n    \"нд2ре\",\n    \"нд2риа\",\n    \"н2дря\",\n    \"нд2сп\",\n    \"н2дц\",\n    \"1не\",\n    \"не1б2\",\n    \"не1в2д\",\n    \"2невн\",\n    \"не3вня\",\n    \"нег2\",\n    \"3нед\",\n    \"не1д2л\",\n    \"нед2о\",\n    \"не2дра\",\n    \"не1дро\",\n    \"не3ду\",\n    \"не3е\",\n    \"нее2д\",\n    \"не3ж2д\",\n    \"не1зв\",\n    \"не1з2л\",\n    \"не1зн\",\n    \"не1зо\",\n    \"не1зр\",\n    \"неи2\",\n    \"не1к2в\",\n    \"не1кл\",\n    \"не3м2н\",\n    \"3не1о2\",\n    \"не2ода\",\n    \"не2ол\",\n    \"не3п2\",\n    \"не1р2ж\",\n    \"не2р1от\",\n    \"нес2к\",\n    \"не3с2н\",\n    \"не1с2п\",\n    \"нест2\",\n    \"не1с2х\",\n    \"не1с2ч\",\n    \"не1т2в\",\n    \"не3т2л\",\n    \"не1т2р\",\n    \"3неу\",\n    \"не2фр\",\n    \"не1хр\",\n    \"не3шк\",\n    \"нея2\",\n    \"2н1з2\",\n    \"нзо1с\",\n    \"1ни\",\n    \"ни3б2\",\n    \"ни2ен\",\n    \"3ний\",\n    \"ни2кл\",\n    \"нила2\",\n    \"ни2л1ал\",\n    \"ни2л1ам\",\n    \"2нинсп\",\n    \"2н1инст\",\n    \"ни1сл\",\n    \"нис3п\",\n    \"нист2р\",\n    \"ниу3\",\n    \"ни1х\",\n    \"3ниц\",\n    \"3нищ\",\n    \"2н1к\",\n    \"нк2в\",\n    \"нк2л\",\n    \"нкоб2\",\n    \"нко3п2\",\n    \"н2к1ро\",\n    \"нк1с\",\n    \"н1л\",\n    \"2н1н\",\n    \"нно3п2\",\n    \"1но\",\n    \"ноб2\",\n    \"но1бр\",\n    \"но2вл\",\n    \"но1дв\",\n    \"но1др\",\n    \"но2ер\",\n    \"но1зв\",\n    \"но2зд\",\n    \"но3з2о\",\n    \"но1зр\",\n    \"но3кн\",\n    \"3номе\",\n    \"ном3ш\",\n    \"но2рв\",\n    \"но1ру\",\n    \"но1скл\",\n    \"но2сли\",\n    \"но1с2п\",\n    \"но2сч\",\n    \"2нотд\",\n    \"но3ф2\",\n    \"ноэ2\",\n    \"н3п2\",\n    \"2н1ре\",\n    \"2н1ри\",\n    \"н1ро\",\n    \"2н1с\",\n    \"н2с3в\",\n    \"н2сг\",\n    \"нс2ке\",\n    \"н2скон\",\n    \"н2сл\",\n    \"н3сла\",\n    \"н2с3м\",\n    \"н2сн\",\n    \"н2с1ок\",\n    \"н3с2пе\",\n    \"нст2р\",\n    \"нсу2р\",\n    \"н2с3ф\",\n    \"н2съ3\",\n    \"2н1т\",\n    \"н2т1в\",\n    \"нти1о2к\",\n    \"н2тм\",\n    \"нт2ра\",\n    \"н2тр1а2г\",\n    \"нтр1аж\",\n    \"н2трар\",\n    \"нтрас2\",\n    \"нт2ре\",\n    \"н2трив\",\n    \"н2трок\",\n    \"нт2ру\",\n    \"нтр1уд\",\n    \"нт2ры\",\n    \"н2т1ря\",\n    \"1ну\",\n    \"нут1р\",\n    \"ну1х\",\n    \"3ную\",\n    \"2нф2\",\n    \"н1х\",\n    \"нхо1\",\n    \"2нц\",\n    \"2н1ч\",\n    \"н2чл\",\n    \"2нш\",\n    \"нш2т\",\n    \"2нщ\",\n    \"1ны\",\n    \"3ны.\",\n    \"2нь.\",\n    \"1нье\",\n    \"1ньи\",\n    \"2ньк\",\n    \"1ньо\",\n    \"2ньс\",\n    \"2ньт\",\n    \"2ньч\",\n    \"1нью\",\n    \"1нья\",\n    \"н2э\",\n    \"1н2ю\",\n    \"2н3ю2р\",\n    \"1ня\",\n    \"ня1ви\",\n    \"2о1а2\",\n    \"о3ав\",\n    \"оап1\",\n    \"2оба\",\n    \"2обио\",\n    \"об2лев\",\n    \"об2лем\",\n    \"о1блю\",\n    \"1обм\",\n    \"обо1л2г\",\n    \"обо3м2\",\n    \"обо2с\",\n    \"2обот\",\n    \"об1р\",\n    \"о2бра.\",\n    \"о1брав\",\n    \"о1бран\",\n    \"1объ\",\n    \"2обь\",\n    \"о1в\",\n    \"о3вла\",\n    \"о3в2ло\",\n    \"ов3но\",\n    \"о3в2нуш\",\n    \"о2в1ри\",\n    \"ов2се\",\n    \"ов3ско\",\n    \"ов2т\",\n    \"о2вх\",\n    \"ог2\",\n    \"2о3ге\",\n    \"ог3ла.\",\n    \"ог3ли.\",\n    \"ог3ло.\",\n    \"о3гря\",\n    \"2одан\",\n    \"од1вое\",\n    \"о3де.\",\n    \"1о2деял\",\n    \"2оди3а\",\n    \"2о3дим\",\n    \"од2лит\",\n    \"о2д1о2пе\",\n    \"одо3пр\",\n    \"о2д1о2пы\",\n    \"о2доси\",\n    \"о2д1отч\",\n    \"о1драг\",\n    \"од1раж\",\n    \"од1раз\",\n    \"од1рак\",\n    \"о1драл\",\n    \"од3реб\",\n    \"о1дроб\",\n    \"од1ров\",\n    \"о2д1у2ч\",\n    \"о2дыма\",\n    \"о2дыму\",\n    \"о2дын\",\n    \"о1дь\",\n    \"о2дьб\",\n    \"о1е\",\n    \"ое1б\",\n    \"о2е1вл\",\n    \"ое2д\",\n    \"о3ежек\",\n    \"ое2жи\",\n    \"ое1о\",\n    \"ое1с2\",\n    \"ое2ст\",\n    \"о2ето\",\n    \"ое2ц\",\n    \"о3жди\",\n    \"о3ж2ду\",\n    \"оза2б3в\",\n    \"2озав\",\n    \"о1з2ва\",\n    \"оз2вен\",\n    \"оз2ви\",\n    \"о1з2вя\",\n    \"оз2гло\",\n    \"оз2дор\",\n    \"о1здр\",\n    \"озе1о\",\n    \"оз3но\",\n    \"о1зо\",\n    \"о2з1об\",\n    \"2озон\",\n    \"о2зоп\",\n    \"озо1ру\",\n    \"оз1уг\",\n    \"о2зым\",\n    \"о3зыс\",\n    \"о3и\",\n    \"ои2г1\",\n    \"оиг2н\",\n    \"оие3\",\n    \"ои2з\",\n    \"ои2м\",\n    \"ои3мо\",\n    \"ои2о\",\n    \"2ой\",\n    \"ойс2\",\n    \"о1к\",\n    \"2о3кан\",\n    \"ок2в\",\n    \"2ок2л\",\n    \"о3клю\",\n    \"око1б\",\n    \"2о3кол\",\n    \"око3п2л\",\n    \"ок1ск\",\n    \"1окт\",\n    \"2окти\",\n    \"2окум\",\n    \"о3ла\",\n    \"ол2ган\",\n    \"о1ле\",\n    \"1олимп\",\n    \"о3ло\",\n    \"о1лу\",\n    \"олу3д2\",\n    \"о1лы\",\n    \"о1лю\",\n    \"о3ля\",\n    \"о3ма\",\n    \"ом2бл\",\n    \"2оме\",\n    \"о3м2нем\",\n    \"о3м2нет\",\n    \"о3множ\",\n    \"ом1ри\",\n    \"ом2ч\",\n    \"ом2ше\",\n    \"о2мь\",\n    \"о3мья\",\n    \"о3на\",\n    \"онд2\",\n    \"оне3ф2\",\n    \"оно1б\",\n    \"о1нр\",\n    \"онс2\",\n    \"он2тру\",\n    \"о1о2\",\n    \"о2ол\",\n    \"оо3пс\",\n    \"оос3м\",\n    \"оост1р\",\n    \"о2оти\",\n    \"о2оф\",\n    \"о3пак\",\n    \"о3пар\",\n    \"о2пле.\",\n    \"о2п1лей\",\n    \"о2пли\",\n    \"оп2лит\",\n    \"оп2ло\",\n    \"оп3лю.\",\n    \"о2пля\",\n    \"о3пляс\",\n    \"опо4вс\",\n    \"опоз2н\",\n    \"опо2ш3л\",\n    \"оп2ри\",\n    \"о3п2те\",\n    \"оп2то\",\n    \"о1ра\",\n    \"ора2с3\",\n    \"ор2б3л\",\n    \"о1р2в\",\n    \"о1ре\",\n    \"2о3рег\",\n    \"оре2ск\",\n    \"о1ри\",\n    \"ор1исп\",\n    \"о1ро\",\n    \"оро2с3л\",\n    \"ор2тр\",\n    \"о1руе\",\n    \"о1рук\",\n    \"ор1укс\",\n    \"о1рус\",\n    \"2орц\",\n    \"о1ры\",\n    \"о1рю\",\n    \"о1ря\",\n    \"о3сад\",\n    \"оса3ж2\",\n    \"ос2б\",\n    \"о2с3ба\",\n    \"о2с1ка.\",\n    \"ос3кар\",\n    \"оск1во\",\n    \"о2ске\",\n    \"ос1ки\",\n    \"о2ски.\",\n    \"о2сков\",\n    \"ос1кой\",\n    \"ос1ком\",\n    \"о1с2коп\",\n    \"ос1кою\",\n    \"о2с1ку.\",\n    \"ос1кую\",\n    \"о1с2л\",\n    \"ос3лей\",\n    \"ос3лог\",\n    \"ос3лых\",\n    \"ос3ми\",\n    \"ос3мос\",\n    \"о1с2ним\",\n    \"ос2нял\",\n    \"ос2пас\",\n    \"о1с2пу\",\n    \"ос2пя\",\n    \"ос2св\",\n    \"ос2с3м\",\n    \"о1ст\",\n    \"ос2та\",\n    \"о3стра\",\n    \"о2суч\",\n    \"2осх\",\n    \"ос2цен\",\n    \"о1с2ч\",\n    \"о1с2шив\",\n    \"о1т\",\n    \"отв2\",\n    \"от3ва\",\n    \"от1ве\",\n    \"от1ви\",\n    \"от1вл\",\n    \"1отг\",\n    \"1отд\",\n    \"2о3тек\",\n    \"о3тер\",\n    \"2о3тех\",\n    \"о3ти\",\n    \"о3ткал\",\n    \"о2тм\",\n    \"от1раб\",\n    \"от1рад\",\n    \"от1раз\",\n    \"отра2с\",\n    \"от1реж\",\n    \"от1рек\",\n    \"от1реч\",\n    \"от1реш\",\n    \"от1ри\",\n    \"от1род\",\n    \"от1рое\",\n    \"от1рок\",\n    \"от1рос\",\n    \"от1роч\",\n    \"от1руг\",\n    \"от3см\",\n    \"оту2а\",\n    \"от1у2ч\",\n    \"1отх\",\n    \"о3тью\",\n    \"о3тья\",\n    \"о1у2\",\n    \"оуп2\",\n    \"оус2к\",\n    \"оу3та\",\n    \"оу3то\",\n    \"2офаш\",\n    \"о3фе\",\n    \"2офит\",\n    \"2офон\",\n    \"о2фори\",\n    \"2офот\",\n    \"о2фри\",\n    \"2охи\",\n    \"ох1лы\",\n    \"о2хля\",\n    \"ох2ме\",\n    \"2охор\",\n    \"о1хр\",\n    \"о1ху\",\n    \"о2цо\",\n    \"оча1с\",\n    \"оч2л\",\n    \"оч1ле\",\n    \"о3чли\",\n    \"о1чт\",\n    \"о2ч1то\",\n    \"ош3ва\",\n    \"ош2ла\",\n    \"ошпа2к3\",\n    \"ош2т\",\n    \"оэ1ти\",\n    \"2ою\",\n    \"о1я\",\n    \"оя2в\",\n    \"оя2д\",\n    \"оя2з\",\n    \"оя2ри\",\n    \"1п\",\n    \"пави3\",\n    \"пав3л\",\n    \"па2вь\",\n    \"па2др\",\n    \"па2ен\",\n    \"па1зо\",\n    \"пас1л\",\n    \"пас1та\",\n    \"па1сте\",\n    \"пас1то\",\n    \"пас1ту\",\n    \"па2с1ты\",\n    \"па1тро\",\n    \"па2ун\",\n    \"па3ф\",\n    \"па1ху\",\n    \"па2шт\",\n    \"2п1в2\",\n    \"2п1д\",\n    \"пе1\",\n    \"пе2дв\",\n    \"пе2д1ин\",\n    \"пе2з\",\n    \"пе3за\",\n    \"пе3зо\",\n    \"пе2к1ла\",\n    \"пе2ль\",\n    \"пе4пл\",\n    \"пери1о\",\n    \"пе2с1к\",\n    \"пе2сн\",\n    \"пе2ст1р\",\n    \"пе2сц\",\n    \"пе2сч\",\n    \"пе2тр\",\n    \"пе2шт\",\n    \"пиаст1\",\n    \"пи2ж3м\",\n    \"пи2к1р\",\n    \"3пинк\",\n    \"3пися\",\n    \"4п3к\",\n    \"2пл.\",\n    \"4пла.\",\n    \"пла1с\",\n    \"п1лем.\",\n    \"п1лемс\",\n    \"2плен\",\n    \"п2ленк\",\n    \"п1ле2о\",\n    \"плес1к\",\n    \"п1лею\",\n    \"2плив\",\n    \"3п2лик\",\n    \"2пло.\",\n    \"2плов\",\n    \"2плог\",\n    \"2плый\",\n    \"2плым\",\n    \"п1лын\",\n    \"п1лых\",\n    \"2плю.\",\n    \"п1лют\",\n    \"п2ляс\",\n    \"п2ляш\",\n    \"2п1н\",\n    \"п3на\",\n    \"п3но1\",\n    \"п3ны\",\n    \"по1б2\",\n    \"по3вл\",\n    \"по3в2с\",\n    \"под1во\",\n    \"по2д1о2к\",\n    \"подо3м2\",\n    \"пое2л\",\n    \"пое2х\",\n    \"по1зве\",\n    \"по1здо\",\n    \"по1з2л\",\n    \"по1зн\",\n    \"пои2щ\",\n    \"3пой\",\n    \"3полк\",\n    \"по3мно\",\n    \"по3мну\",\n    \"3по3п2\",\n    \"п1орг\",\n    \"пор2ж\",\n    \"по1ру\",\n    \"по1с4\",\n    \"3посл\",\n    \"по3сс\",\n    \"пот2в\",\n    \"пот2р\",\n    \"по1х2\",\n    \"по2шло\",\n    \"по2шлы\",\n    \"по2шля\",\n    \"поэ3м\",\n    \"2пп2\",\n    \"ппо1д\",\n    \"2пр.\",\n    \"3прев\",\n    \"пре1з\",\n    \"прей2\",\n    \"пре1л\",\n    \"пре1ог\",\n    \"3прет\",\n    \"при1\",\n    \"при3в\",\n    \"приг2\",\n    \"при3д2\",\n    \"при3к\",\n    \"при3л\",\n    \"приль2\",\n    \"прип2\",\n    \"п2риц\",\n    \"про1бл\",\n    \"прод2л\",\n    \"про3ж2\",\n    \"про1з2\",\n    \"п1розо\",\n    \"3прои\",\n    \"про3п\",\n    \"профо2\",\n    \"2прс\",\n    \"п2ру\",\n    \"2п1с2\",\n    \"3п2сал\",\n    \"п3син\",\n    \"3п2сих\",\n    \"п3со\",\n    \"2п1т\",\n    \"п2т3в\",\n    \"3п2тих\",\n    \"п3ту\",\n    \"3пуб\",\n    \"пуг3н\",\n    \"пус1ку\",\n    \"пу1ст\",\n    \"пу3ть\",\n    \"2пф2\",\n    \"пх2\",\n    \"2пц\",\n    \"4п3ч\",\n    \"2пш\",\n    \"2пщ\",\n    \"2пь.\",\n    \"2пьт\",\n    \"пэ1ра\",\n    \"п2ю1\",\n    \"1ра.\",\n    \"раа2\",\n    \"ра2бл\",\n    \"1рабо\",\n    \"ра2б1р\",\n    \"1равня\",\n    \"ра2гв\",\n    \"ра2гл\",\n    \"рад2ж\",\n    \"радо1б2\",\n    \"ра2дц\",\n    \"ра2жур\",\n    \"ра2зий\",\n    \"ра2зуб\",\n    \"рак2в\",\n    \"1ракиз\",\n    \"ра2к3л\",\n    \"1ралг\",\n    \"1рамк\",\n    \"1рамн\",\n    \"ра2нох\",\n    \"ран2сц\",\n    \"ра2п1л\",\n    \"рас3к2\",\n    \"1расл\",\n    \"рас3п\",\n    \"рас1т\",\n    \"1раста\",\n    \"рас3т2л\",\n    \"ра2так\",\n    \"рат1в\",\n    \"ра1т2р\",\n    \"2рахи\",\n    \"1ращи\",\n    \"1раю\",\n    \"1рая\",\n    \"2раят\",\n    \"2р1б\",\n    \"рб2ла\",\n    \"р2бле\",\n    \"рб2ло\",\n    \"рб2лю\",\n    \"рбо3с\",\n    \"1р2вав\",\n    \"р3вак\",\n    \"р3вар\",\n    \"р3вата\",\n    \"р3веж\",\n    \"р2вео\",\n    \"1рвет\",\n    \"р1ви\",\n    \"р3вин\",\n    \"р2вит\",\n    \"р1во\",\n    \"рво1з2д\",\n    \"р1вь\",\n    \"2рг\",\n    \"р2гв\",\n    \"р2г1л\",\n    \"р2гн\",\n    \"рг2р\",\n    \"2р1д\",\n    \"рда1с\",\n    \"р2д1в\",\n    \"рд2ж\",\n    \"рди2а\",\n    \"р2дл\",\n    \"рдос2\",\n    \"р2дц\",\n    \"1ре.\",\n    \"ре1вр\",\n    \"рег2ля\",\n    \"рег2н\",\n    \"ре2д1о2п\",\n    \"ре2дос\",\n    \"рее2в\",\n    \"рее2д\",\n    \"рее2л\",\n    \"ре3ж2д\",\n    \"1резк\",\n    \"ре1з2л\",\n    \"ре1зна\",\n    \"1ре1зо\",\n    \"ре1зр\",\n    \"рез2у\",\n    \"1рейш\",\n    \"ре1к2л\",\n    \"1рекш\",\n    \"ре3мно\",\n    \"3ремо\",\n    \"ремо2г3\",\n    \"1ренк\",\n    \"1рень\",\n    \"ре1он\",\n    \"ре1оп\",\n    \"ре1о2р\",\n    \"ре1о2ф\",\n    \"ре1ох\",\n    \"ре1о2ц\",\n    \"1репь\",\n    \"ре3р2\",\n    \"рес1ки\",\n    \"ре1сл\",\n    \"ре1с2п\",\n    \"рес2с3м\",\n    \"ре3ста\",\n    \"ре3сто\",\n    \"ре1сч\",\n    \"ре1тв\",\n    \"ре1т2р\",\n    \"реуч3т\",\n    \"ре1чт\",\n    \"ре3шл\",\n    \"р3жа.\",\n    \"р3жам\",\n    \"р3жан\",\n    \"р3ж2д\",\n    \"2рз\",\n    \"р1з2в\",\n    \"р1зо\",\n    \"ри3а\",\n    \"риб2\",\n    \"ри3бр\",\n    \"ри3в2н\",\n    \"2риги\",\n    \"ри2гло\",\n    \"ри3г2н\",\n    \"2ридж\",\n    \"ри1д2р\",\n    \"рие2л\",\n    \"рие3р\",\n    \"риз2в\",\n    \"рик2р\",\n    \"ри3м2н\",\n    \"ри3м2ч\",\n    \"р2ин\",\n    \"1ринс\",\n    \"рио2з\",\n    \"рио2с\",\n    \"ри1от\",\n    \"ри3р2\",\n    \"ри1с2\",\n    \"ри3сб\",\n    \"2рисп\",\n    \"ри3ств\",\n    \"ри3т2р\",\n    \"1риу\",\n    \"ри2фл\",\n    \"ри3фр\",\n    \"ри1хл\",\n    \"1риц\",\n    \"1риш\",\n    \"риэти2\",\n    \"2р1к\",\n    \"р2кв\",\n    \"р2к1л\",\n    \"рк1с\",\n    \"2р1л2\",\n    \"р2ль\",\n    \"рлю1\",\n    \"р3ля\",\n    \"2рм\",\n    \"р2мч\",\n    \"2р1н\",\n    \"рнас4\",\n    \"рне3о\",\n    \"рне1с2\",\n    \"рно3сл\",\n    \"1ро.\",\n    \"ро2блю\",\n    \"ро1б2р\",\n    \"ро2вл\",\n    \"1рогол\",\n    \"1рогру\",\n    \"ро1дв\",\n    \"ро3д2з\",\n    \"ро1дл\",\n    \"род2ле\",\n    \"ро2д1от\",\n    \"ро1др\",\n    \"1родь\",\n    \"рое2л\",\n    \"рое2м\",\n    \"рое2х\",\n    \"1розар\",\n    \"ро1з2в\",\n    \"ро1зр\",\n    \"3розыс\",\n    \"рои2с3\",\n    \"1рокон\",\n    \"1рокр\",\n    \"1ролис\",\n    \"1ролиц\",\n    \"1ромор\",\n    \"1ронаж\",\n    \"1ронап\",\n    \"1ронос\",\n    \"рооп1р\",\n    \"ро2плю\",\n    \"ро3пс\",\n    \"2р1орг\",\n    \"ро1р2ж\",\n    \"ро1ру\",\n    \"ро1ск\",\n    \"ро2ски\",\n    \"ро2ску\",\n    \"1росл\",\n    \"ро1см\",\n    \"ро1с2п\",\n    \"рос2ф\",\n    \"1росш\",\n    \"1росю\",\n    \"1рот2в\",\n    \"1ротк\",\n    \"рот2ри\",\n    \"1роу\",\n    \"роуг2\",\n    \"ро2ф1ак\",\n    \"ро2фр\",\n    \"ро1хл\",\n    \"рош2л\",\n    \"ро3шн\",\n    \"1рояз\",\n    \"2рп\",\n    \"рп2ло\",\n    \"р2плю\",\n    \"2р1р\",\n    \"4р1с\",\n    \"рс2к\",\n    \"р2сн\",\n    \"рс2п\",\n    \"рств2\",\n    \"р3ствл\",\n    \"2р1т\",\n    \"р2такк\",\n    \"р2т1акт\",\n    \"р2т1в\",\n    \"рт3ва\",\n    \"рт2вл\",\n    \"р2тм\",\n    \"р2т1об\",\n    \"рт1орг\",\n    \"рт1ра\",\n    \"рт2ран\",\n    \"рт1ре\",\n    \"рт1ри\",\n    \"ртус1\",\n    \"р2т1у2чи\",\n    \"р3тью\",\n    \"рт1яч\",\n    \"1ру.\",\n    \"1руба\",\n    \"руг3н\",\n    \"ру2дар\",\n    \"1ружей\",\n    \"2рукс\",\n    \"1рул\",\n    \"рус1к\",\n    \"рус3л\",\n    \"ру1ста\",\n    \"руст1р\",\n    \"ру3ть\",\n    \"1руха\",\n    \"1рухо\",\n    \"1ручн\",\n    \"2рф\",\n    \"рф2л\",\n    \"2рх\",\n    \"р2хв\",\n    \"р2х1ин\",\n    \"рх1л\",\n    \"р1х2ло\",\n    \"р2х1оп\",\n    \"рх1р\",\n    \"2рц\",\n    \"р2цв\",\n    \"2р1ч\",\n    \"р2чл\",\n    \"р2чм\",\n    \"2рш\",\n    \"р3ш2м\",\n    \"рш2т\",\n    \"2рщ\",\n    \"2ръ\",\n    \"1ры.\",\n    \"1рыб\",\n    \"ры2дв\",\n    \"2рыз\",\n    \"ры2кл\",\n    \"1рым\",\n    \"ры2с1к\",\n    \"ры2х1\",\n    \"2рь.\",\n    \"1рье\",\n    \"1рьи\",\n    \"2рьк\",\n    \"2рьс\",\n    \"2рьт\",\n    \"1рью\",\n    \"1рья\",\n    \"рэ1л\",\n    \"р2ю\",\n    \"1рю.\",\n    \"1рюс\",\n    \"ря1ви\",\n    \"1ряю\",\n    \"1са\",\n    \"са2бл\",\n    \"са2дь\",\n    \"са2кв\",\n    \"са2кл\",\n    \"2с1альп\",\n    \"с1апп\",\n    \"2с1арк\",\n    \"2с1атл\",\n    \"са1тр\",\n    \"са2ун\",\n    \"са2ф1р\",\n    \"са1х2\",\n    \"1сб2\",\n    \"2сбе3з2\",\n    \"сбезо3\",\n    \"сбе3с2\",\n    \"2с3бу\",\n    \"с2бы\",\n    \"2сбю\",\n    \"1с2в\",\n    \"2с3вен\",\n    \"сг2\",\n    \"с2ги\",\n    \"с2гн\",\n    \"с2го\",\n    \"1сд2\",\n    \"с2да\",\n    \"с2де\",\n    \"с3ди\",\n    \"с2до\",\n    \"1с2е\",\n    \"сег2н\",\n    \"се1з2\",\n    \"се1кв\",\n    \"сек1л\",\n    \"се2к1р\",\n    \"секс4\",\n    \"семи1\",\n    \"сере2б\",\n    \"се2ск\",\n    \"се2ст\",\n    \"се3ста\",\n    \"се3сте\",\n    \"сест1р\",\n    \"1с2ж\",\n    \"с1з\",\n    \"1с2и\",\n    \"3сиз\",\n    \"си1ом\",\n    \"си1оп\",\n    \"си2пл\",\n    \"си1х\",\n    \"4ск.\",\n    \"2скам\",\n    \"с2канд\",\n    \"1с2каф\",\n    \"2сках\",\n    \"ск2ва\",\n    \"с2кви\",\n    \"3скино\",\n    \"ск2л\",\n    \"с2кля\",\n    \"ск3ляв\",\n    \"2скн\",\n    \"с1кон\",\n    \"2скона\",\n    \"с2копс\",\n    \"2скош\",\n    \"ск2р\",\n    \"с1кра\",\n    \"2скриб\",\n    \"ск1с\",\n    \"2скуе\",\n    \"2с3ла.\",\n    \"1слав\",\n    \"1слад\",\n    \"с1лам\",\n    \"2с3лая\",\n    \"с3лев\",\n    \"с3лее\",\n    \"с1лей\",\n    \"слео2\",\n    \"с1лет\",\n    \"с3лею\",\n    \"2с3ли.\",\n    \"2слиц\",\n    \"2с3ло.\",\n    \"с2лож\",\n    \"с3лому\",\n    \"2с3лос\",\n    \"2с3лую\",\n    \"2с3лые\",\n    \"2с3лый\",\n    \"2с3лым\",\n    \"2сль\",\n    \"с1люс\",\n    \"2с3ля\",\n    \"с2м\",\n    \"1смес\",\n    \"с4мея\",\n    \"с3мур\",\n    \"с1н\",\n    \"1с2наб\",\n    \"с2нас\",\n    \"2сная\",\n    \"1с2неж\",\n    \"2с3ник\",\n    \"2сно\",\n    \"сно1з2\",\n    \"2сную\",\n    \"2с3ны\",\n    \"1со\",\n    \"со1б2р\",\n    \"с2ов\",\n    \"сов2р\",\n    \"со1д\",\n    \"со1з2\",\n    \"со1л2г\",\n    \"со3м2\",\n    \"со2рие\",\n    \"со1ру\",\n    \"со1ск\",\n    \"со1с2п\",\n    \"со2сь\",\n    \"сот2р\",\n    \"со1чл\",\n    \"сош2л\",\n    \"сп2\",\n    \"с2пав\",\n    \"с2пее\",\n    \"с2пел\",\n    \"с2пен\",\n    \"с2пех\",\n    \"1с2пец\",\n    \"с2пеш\",\n    \"с2пею\",\n    \"с2пим\",\n    \"2спися\",\n    \"с3пн\",\n    \"спо1з2\",\n    \"2спол\",\n    \"с2пос\",\n    \"2спь\",\n    \"1ср\",\n    \"2ср.\",\n    \"с2раб\",\n    \"сра2с\",\n    \"с1рат\",\n    \"сре2б1\",\n    \"сре3до\",\n    \"2с1с\",\n    \"ссанд2\",\n    \"с2сб\",\n    \"сс3во\",\n    \"4с5си\",\n    \"с3с2к\",\n    \"сс2л\",\n    \"с2сн\",\n    \"с3с2не\",\n    \"с2сори\",\n    \"сс2п\",\n    \"сст2\",\n    \"сс2ч\",\n    \"2ст.\",\n    \"1ста.\",\n    \"2стб\",\n    \"4ств.\",\n    \"ст1вер\",\n    \"2ствл\",\n    \"ст2вол\",\n    \"ст2вя\",\n    \"с2те\",\n    \"1с4те.\",\n    \"1стей\",\n    \"1стел\",\n    \"1стен.\",\n    \"с3тет.\",\n    \"с3тете\",\n    \"сте3х\",\n    \"с3теш\",\n    \"1сти\",\n    \"с2тие\",\n    \"с2тии\",\n    \"2стимп\",\n    \"2стинд\",\n    \"2стинф\",\n    \"2стинъ\",\n    \"с2тич\",\n    \"с2тишк\",\n    \"с2тию\",\n    \"2стк\",\n    \"ст2ла\",\n    \"с3т2ле\",\n    \"2стли\",\n    \"ст2лил\",\n    \"ст2лит\",\n    \"2стля\",\n    \"2стм\",\n    \"2стн\",\n    \"1сто.\",\n    \"с2то1б\",\n    \"1стов\",\n    \"1стог\",\n    \"сто2г3н\",\n    \"1стод\",\n    \"1стое\",\n    \"3с2тои\",\n    \"1сток\",\n    \"1стом\",\n    \"1стон\",\n    \"2сторг\",\n    \"2сторж\",\n    \"2сторс\",\n    \"1стос\",\n    \"1стот\",\n    \"с2тоц\",\n    \"1стою\",\n    \"2стп\",\n    \"2стр.\",\n    \"страс2\",\n    \"4страя\",\n    \"2стред\",\n    \"ст1рей\",\n    \"2стрив\",\n    \"ст1риз\",\n    \"2стрил\",\n    \"2стрищ\",\n    \"ст1роа\",\n    \"с4т1ров\",\n    \"ст1род\",\n    \"ст1рох\",\n    \"ст2руб\",\n    \"ст1руш\",\n    \"2стс\",\n    \"с1тут\",\n    \"1стую\",\n    \"2стф\",\n    \"2стц\",\n    \"1сты\",\n    \"с2тыв\",\n    \"с4ть\",\n    \"2сть.\",\n    \"2стьс\",\n    \"3стью\",\n    \"1стья\",\n    \"1стям\",\n    \"1стях\",\n    \"1су\",\n    \"су2б\",\n    \"суб1а2\",\n    \"суб1о\",\n    \"су1в\",\n    \"су3гл\",\n    \"су2ев\",\n    \"су2з\",\n    \"су1кр\",\n    \"сума1\",\n    \"супе2\",\n    \"сус3л\",\n    \"сус3п\",\n    \"су1ст\",\n    \"сут1р\",\n    \"су2ф3\",\n    \"су1х\",\n    \"1с2фе\",\n    \"с1х2\",\n    \"1с2хе\",\n    \"2сца\",\n    \"с2цена\",\n    \"2с3ци\",\n    \"2сцо\",\n    \"сч2\",\n    \"1сча\",\n    \"с2час\",\n    \"сче2с1к\",\n    \"с3чив\",\n    \"2счик\",\n    \"с2чит\",\n    \"с1чл\",\n    \"2счо\",\n    \"сш2\",\n    \"с3шн\",\n    \"1съ2\",\n    \"съе3д\",\n    \"съе3л\",\n    \"1сы\",\n    \"сы2г1\",\n    \"сы2з\",\n    \"сы2п1л\",\n    \"сы2с\",\n    \"сыс1ка\",\n    \"2сь.\",\n    \"1сье\",\n    \"2ськ\",\n    \"2сьт\",\n    \"1сью\",\n    \"1сья\",\n    \"сэ1р\",\n    \"с2эс\",\n    \"1с2ю\",\n    \"сю1с\",\n    \"1ся\",\n    \"2сяз\",\n    \"ся3ть\",\n    \"та2бл\",\n    \"таб2р\",\n    \"та1ври\",\n    \"1таг\",\n    \"та2гн\",\n    \"та1з2\",\n    \"так3ле\",\n    \"т2ан\",\n    \"та2пл\",\n    \"1тас\",\n    \"та1ст\",\n    \"та1тр\",\n    \"1тащ\",\n    \"2т1б2\",\n    \"2тв.\",\n    \"2т2ва\",\n    \"т1вей\",\n    \"т1вел\",\n    \"т1вет\",\n    \"2тви\",\n    \"т1вое\",\n    \"т1во1з\",\n    \"2т1вой\",\n    \"т1вос\",\n    \"2твою\",\n    \"2т1вр\",\n    \"2тву\",\n    \"2твы\",\n    \"2твя\",\n    \"2тг\",\n    \"2т1д\",\n    \"1т2е\",\n    \"те2гн\",\n    \"те1д\",\n    \"те1зо\",\n    \"3тека\",\n    \"тек1л\",\n    \"3текш\",\n    \"теле1о\",\n    \"тем2б1\",\n    \"те2о3д\",\n    \"те1ох\",\n    \"те4п1л\",\n    \"те2рак\",\n    \"тере2о\",\n    \"3терз\",\n    \"тер3к\",\n    \"3теря\",\n    \"те2ска\",\n    \"те2с1ки\",\n    \"те2с1ко\",\n    \"те2ску\",\n    \"тест2\",\n    \"те2хо\",\n    \"2тж\",\n    \"2т1з\",\n    \"тиа2м\",\n    \"ти2бл\",\n    \"ти3д2\",\n    \"ти1зна\",\n    \"тии2\",\n    \"тиис1\",\n    \"тик2\",\n    \"тила2м\",\n    \"т1имп\",\n    \"2т1инв\",\n    \"т1инд\",\n    \"2тинж\",\n    \"2тинф\",\n    \"ти1с2л\",\n    \"ти3ств\",\n    \"ти3ф2р\",\n    \"ти1хр\",\n    \"2т1к2\",\n    \"3т2кав\",\n    \"3т2кан\",\n    \"3т2кет\",\n    \"3ткн\",\n    \"2т1л\",\n    \"тло2б\",\n    \"т2ль\",\n    \"тм2\",\n    \"тми2с\",\n    \"тмист1\",\n    \"т3мщ\",\n    \"2т1н\",\n    \"то2бес\",\n    \"то1б2л\",\n    \"2тобъ\",\n    \"то2вл\",\n    \"то1д\",\n    \"то3д2р\",\n    \"то1з2\",\n    \"ток2р\",\n    \"2т1омм\",\n    \"2томс\",\n    \"2тонг\",\n    \"1торг\",\n    \"1торж\",\n    \"1торс\",\n    \"то1ру\",\n    \"1торш\",\n    \"то1с2н\",\n    \"то1с2п\",\n    \"то1с2ц\",\n    \"2тотд\",\n    \"то3тк\",\n    \"1тощ\",\n    \"2тп2\",\n    \"тпа1т\",\n    \"т1рага\",\n    \"2т1раж\",\n    \"2трб\",\n    \"2трв\",\n    \"2трг\",\n    \"2трд\",\n    \"трдо2\",\n    \"т1реа\",\n    \"1требо\",\n    \"1требу\",\n    \"т1ребь\",\n    \"т1реве\",\n    \"т1ревш\",\n    \"т1рег\",\n    \"т1ред\",\n    \"т1рее\",\n    \"т1реза\",\n    \"т1резн\",\n    \"треп1л\",\n    \"3тре2с\",\n    \"трес1к\",\n    \"т1рест\",\n    \"т1рету\",\n    \"3т2ре2х\",\n    \"т1рец\",\n    \"т2решь\",\n    \"т1рею\",\n    \"1триб\",\n    \"т1рив\",\n    \"три2г1л\",\n    \"т1рил\",\n    \"т1рим\",\n    \"4тринс\",\n    \"три1о\",\n    \"т1рит\",\n    \"три3ф\",\n    \"т1рищ\",\n    \"2трм\",\n    \"2трн\",\n    \"т1рогл\",\n    \"т1роид\",\n    \"2трой\",\n    \"тро3пл\",\n    \"т1рор\",\n    \"т1росо\",\n    \"тро3т\",\n    \"4т3роц\",\n    \"2трою\",\n    \"2трп\",\n    \"2трр\",\n    \"1труб\",\n    \"т2руд\",\n    \"2трук\",\n    \"т2рум\",\n    \"т2рут\",\n    \"2трф\",\n    \"2трщ\",\n    \"2тръ\",\n    \"т1ры\",\n    \"т1ря.\",\n    \"т1ряв\",\n    \"2т1ряд\",\n    \"т1ряе\",\n    \"т1ряж\",\n    \"т1ряй\",\n    \"т3ряк\",\n    \"т1рят\",\n    \"т1рящ\",\n    \"т1ряя\",\n    \"4т1с2\",\n    \"т2сб\",\n    \"т2с3д\",\n    \"тсеп2\",\n    \"т2с3м\",\n    \"т2с3п\",\n    \"2т1т\",\n    \"т2тм\",\n    \"ту2гр\",\n    \"ту2жин\",\n    \"2т1у2пр\",\n    \"ту1сл\",\n    \"ту1ст\",\n    \"ту2фл\",\n    \"1туша\",\n    \"1тушо\",\n    \"1тушь\",\n    \"1тущ\",\n    \"2тф\",\n    \"2т1х\",\n    \"4тц\",\n    \"2т1ч\",\n    \"2тш2\",\n    \"2тщ\",\n    \"2тъ\",\n    \"ты2г1\",\n    \"ты2с1к\",\n    \"2ть\",\n    \"4ть.\",\n    \"3тье\",\n    \"3тьи\",\n    \"ть2м\",\n    \"4тьт\",\n    \"тью1\",\n    \"2тэ\",\n    \"т2ю\",\n    \"тю1т\",\n    \"1тяг\",\n    \"1тяж\",\n    \"1тяп\",\n    \"2тя2ч\",\n    \"у1а\",\n    \"у2але\",\n    \"у2ас\",\n    \"у3бел\",\n    \"убо1д\",\n    \"убос2\",\n    \"уб1р\",\n    \"1убра\",\n    \"уб3рю\",\n    \"1у2быт\",\n    \"у1ве.\",\n    \"у1ви\",\n    \"ув2л\",\n    \"у1во\",\n    \"у1ву\",\n    \"у2гв\",\n    \"у2гл\",\n    \"у2гн\",\n    \"уг2на\",\n    \"уг2не\",\n    \"уг1ре\",\n    \"уг1ря\",\n    \"уда1с\",\n    \"уд2в\",\n    \"уд1рам\",\n    \"уд1ро\",\n    \"у3ду\",\n    \"у1е\",\n    \"уе2д\",\n    \"уе2л\",\n    \"уе1с\",\n    \"уе2с1к\",\n    \"уес2л\",\n    \"уе2х\",\n    \"у2жж\",\n    \"у1з2в\",\n    \"у1зо\",\n    \"узо3п\",\n    \"у1и\",\n    \"у1ка\",\n    \"ук1в\",\n    \"у1ки\",\n    \"у1ко\",\n    \"уко1б\",\n    \"у1ку1\",\n    \"у1ла\",\n    \"у1ле\",\n    \"у1лу\",\n    \"у1лых\",\n    \"у1лю\",\n    \"у2мч\",\n    \"у3на\",\n    \"ун2д1р\",\n    \"у1нь\",\n    \"у1о\",\n    \"уо2б\",\n    \"уо2в\",\n    \"у2оза\",\n    \"уо2к\",\n    \"уо2п\",\n    \"уо2с\",\n    \"уост1\",\n    \"уо2т1\",\n    \"уо2ф\",\n    \"у2пл\",\n    \"уп1лю\",\n    \"у3про\",\n    \"у1ра\",\n    \"у1ре\",\n    \"уре2т3р\",\n    \"у1ри\",\n    \"урке3\",\n    \"у1ро\",\n    \"у2род\",\n    \"уро2дл\",\n    \"урт2р\",\n    \"у3ру\",\n    \"у1ры\",\n    \"у1рю\",\n    \"у1ря\",\n    \"у2сад\",\n    \"у1сг\",\n    \"ус1ка\",\n    \"ус1ки\",\n    \"уск3л\",\n    \"ус1ком\",\n    \"у1скр\",\n    \"ус1ку.\",\n    \"ус2л\",\n    \"усла4ж3\",\n    \"ус3ли\",\n    \"у1см\",\n    \"у2сн\",\n    \"ус2п\",\n    \"ус3с\",\n    \"у1сте\",\n    \"у1стя\",\n    \"у1сф\",\n    \"2усц\",\n    \"у2сч\",\n    \"у2сь\",\n    \"у3сья\",\n    \"у1та\",\n    \"у3тер\",\n    \"у1ти\",\n    \"ут2ля\",\n    \"у1то\",\n    \"уто3п2с\",\n    \"ут1ри\",\n    \"у1ту\",\n    \"у1ты\",\n    \"у1тье\",\n    \"у3тью\",\n    \"1утю\",\n    \"у1тя\",\n    \"у1у\",\n    \"ууг2\",\n    \"уу2с\",\n    \"у3фи\",\n    \"уф1л\",\n    \"уф2ля\",\n    \"у2фр\",\n    \"ух1ад\",\n    \"уха2т\",\n    \"у2хв\",\n    \"у3х4во\",\n    \"ух1л\",\n    \"ух3ля\",\n    \"ух1р\",\n    \"у2чеб\",\n    \"1учр\",\n    \"у1чь\",\n    \"у3ше\",\n    \"у3ши\",\n    \"у2шл\",\n    \"уш1ла\",\n    \"у2шп\",\n    \"2уэ\",\n    \"у1я\",\n    \"уя2з\",\n    \"1ф\",\n    \"фа2б1\",\n    \"фа2гн\",\n    \"фа1зо\",\n    \"фан2д\",\n    \"фанд1р\",\n    \"фа1тр\",\n    \"фа2х\",\n    \"3фаш\",\n    \"фаэ1\",\n    \"2ф1б\",\n    \"2ф1в\",\n    \"2фг\",\n    \"2ф1д\",\n    \"фев1р\",\n    \"фед1р\",\n    \"фе1о3\",\n    \"фе2с1к\",\n    \"ф4и\",\n    \"фиа2к1\",\n    \"фи2гл\",\n    \"фи2ж\",\n    \"фи2зо\",\n    \"фи2нин\",\n    \"фи1о\",\n    \"3фит\",\n    \"2ф1к\",\n    \"ф2ла\",\n    \"ф2ли\",\n    \"ф2ло\",\n    \"2фм\",\n    \"2ф1н\",\n    \"2фобъ\",\n    \"3фон\",\n    \"фо2рв\",\n    \"2ф1орг\",\n    \"фор3тр\",\n    \"фо1ру\",\n    \"фос1к\",\n    \"3фот\",\n    \"фото3п\",\n    \"ф1раб\",\n    \"фра1з\",\n    \"фра1с\",\n    \"ф1рат\",\n    \"ф2рен\",\n    \"фре2с\",\n    \"ф1ри\",\n    \"ф2риж\",\n    \"ф2риз\",\n    \"ф1ро\",\n    \"ф2рон\",\n    \"ф1ру\",\n    \"2ф3с\",\n    \"2ф1т\",\n    \"ф2тм\",\n    \"ф2тор\",\n    \"2ф1у2п\",\n    \"фу3тл\",\n    \"2фуф\",\n    \"2фф\",\n    \"2ф1ч\",\n    \"2фш2\",\n    \"2фь.\",\n    \"ф2ю1\",\n    \"1ха\",\n    \"ха2бл\",\n    \"ха2д\",\n    \"2х1ак\",\n    \"хан2д\",\n    \"хао3\",\n    \"х1арш\",\n    \"2х1б\",\n    \"1х2в\",\n    \"2х3ве\",\n    \"2х3ви\",\n    \"х3вы\",\n    \"2хг\",\n    \"х3д2\",\n    \"1хе\",\n    \"хео3\",\n    \"х1з2\",\n    \"1хи\",\n    \"хиат1\",\n    \"хие2\",\n    \"2х1изы\",\n    \"хи1с2\",\n    \"х1к2\",\n    \"х1лав\",\n    \"х1лас\",\n    \"х1лат\",\n    \"х1лац\",\n    \"1хлеб\",\n    \"х2лес\",\n    \"х1лет\",\n    \"х3ло.\",\n    \"х2лоп\",\n    \"1х2лор\",\n    \"х1лу\",\n    \"1х2му\",\n    \"2х1н\",\n    \"3х2ны\",\n    \"1хо\",\n    \"2х1о2к\",\n    \"хоп2\",\n    \"хо2пе\",\n    \"хо2пор\",\n    \"хо1ру\",\n    \"х1осм\",\n    \"2х1осн\",\n    \"хоф2\",\n    \"хох1л\",\n    \"хоя2\",\n    \"хп2\",\n    \"х1раз\",\n    \"1хран\",\n    \"х1ра1с2\",\n    \"х1рей\",\n    \"хри2пл\",\n    \"х2рис\",\n    \"х1ров\",\n    \"1хром\",\n    \"хро2мч\",\n    \"х1ры\",\n    \"х1ря\",\n    \"2х1с2\",\n    \"2х1т\",\n    \"1ху.\",\n    \"х1у2г\",\n    \"2хуе\",\n    \"2хуй\",\n    \"1хун\",\n    \"х1у2р\",\n    \"ху3ра\",\n    \"1хус\",\n    \"1хуш\",\n    \"2хую\",\n    \"х1х2\",\n    \"2х1ч2\",\n    \"2хш\",\n    \"хью1\",\n    \"1ц\",\n    \"ца1\",\n    \"3ца.\",\n    \"3цам\",\n    \"ца2пл\",\n    \"3цах\",\n    \"2ц1б\",\n    \"ц2ве\",\n    \"2цвы\",\n    \"2цг\",\n    \"2ц1д\",\n    \"це1з\",\n    \"це1к\",\n    \"це1от\",\n    \"цеп1л\",\n    \"цес2л\",\n    \"це1т\",\n    \"2цетат\",\n    \"2ц1з\",\n    \"ци1\",\n    \"ци2к1\",\n    \"цик3л\",\n    \"ци2ол\",\n    \"цип2\",\n    \"ци2ск\",\n    \"циу3\",\n    \"циф1р\",\n    \"2ц1к2\",\n    \"2ц1л\",\n    \"2цм\",\n    \"2ц1н\",\n    \"ц1о2б\",\n    \"2ц1о2д\",\n    \"2ц1от\",\n    \"2цп2\",\n    \"2ц1р\",\n    \"2ц1с\",\n    \"2ц1т\",\n    \"3цу\",\n    \"2цц\",\n    \"2ц3ш2\",\n    \"3цы\",\n    \"цы2п\",\n    \"цып3л\",\n    \"цю1\",\n    \"1ча\",\n    \"ча2др\",\n    \"ча2дц\",\n    \"ча2ево\",\n    \"ча2евы\",\n    \"ча2ер\",\n    \"част1в\",\n    \"ча1сте\",\n    \"ча1сту\",\n    \"ча1стя\",\n    \"3чато\",\n    \"3чаты\",\n    \"2ч1б\",\n    \"ч1в\",\n    \"2ч1д\",\n    \"1че\",\n    \"че1вл\",\n    \"че2гл\",\n    \"че1о\",\n    \"чер2с\",\n    \"черст1\",\n    \"че1сл\",\n    \"ч2ж\",\n    \"чжо2\",\n    \"1чи\",\n    \"3чик\",\n    \"3чиц\",\n    \"2ч1к\",\n    \"1ч2ла\",\n    \"ч2ле\",\n    \"ч3лег\",\n    \"ч3леж\",\n    \"2чли\",\n    \"ч2ли.\",\n    \"1ч2ло\",\n    \"1чм\",\n    \"2чма\",\n    \"2чме\",\n    \"ч2мо\",\n    \"2ч1н\",\n    \"3чо\",\n    \"2ч1с\",\n    \"2ч1та\",\n    \"ч2те\",\n    \"2чтм\",\n    \"1чу\",\n    \"3чук\",\n    \"ч2х\",\n    \"2ч1ч\",\n    \"2чь.\",\n    \"1чье\",\n    \"1чьи\",\n    \"2чьс\",\n    \"2чьт\",\n    \"1чью\",\n    \"1чья\",\n    \"1ш\",\n    \"ша2бл\",\n    \"ша2гн\",\n    \"ша2г1р\",\n    \"ша2др\",\n    \"шан2кр\",\n    \"шар3т2\",\n    \"ша1ст\",\n    \"ша1тро\",\n    \"2ш1б\",\n    \"ш2в\",\n    \"ш3вен\",\n    \"ше2гл\",\n    \"ше1к\",\n    \"ше1о2\",\n    \"ше3пл\",\n    \"ше1с2\",\n    \"ши2бл\",\n    \"ши2пл\",\n    \"шиф1р\",\n    \"2ш1к2\",\n    \"3ш2кол\",\n    \"2ш1лей\",\n    \"2шлен\",\n    \"ш2ли.\",\n    \"2шлив\",\n    \"2шлил\",\n    \"ш2лин\",\n    \"ш2лис\",\n    \"ш2лите\",\n    \"ш2лиф\",\n    \"ш2ло.\",\n    \"2шлов\",\n    \"ш2лог\",\n    \"ш1лы\",\n    \"ш2лю\",\n    \"2шляе\",\n    \"2шляк\",\n    \"ш2ляп\",\n    \"2шлят\",\n    \"2шляч\",\n    \"2шляю\",\n    \"2шм\",\n    \"3ш2мы\",\n    \"4ш3мы.\",\n    \"2ш1н\",\n    \"4шни\",\n    \"ш2нур\",\n    \"ш2п2\",\n    \"ш3пр\",\n    \"2ш1р\",\n    \"2ш1с\",\n    \"ш1ти\",\n    \"2штс\",\n    \"шу2ев\",\n    \"шуст1\",\n    \"2шф\",\n    \"ш1х\",\n    \"2шц\",\n    \"2ш1ч\",\n    \"2шь\",\n    \"4шь.\",\n    \"3шье\",\n    \"3шьи\",\n    \"3шью\",\n    \"3шья\",\n    \"ш2ю1\",\n    \"1щ\",\n    \"2щ3в2\",\n    \"ще1б2л\",\n    \"ще2гл\",\n    \"щед1р\",\n    \"щеи2\",\n    \"щеис1\",\n    \"ще1с\",\n    \"ще1х\",\n    \"щеш2\",\n    \"ще3шк\",\n    \"щи2п1л\",\n    \"2щм\",\n    \"2щ1н\",\n    \"2щ1р\",\n    \"2щь.\",\n    \"ъ1\",\n    \"ъе2г\",\n    \"ъе2д\",\n    \"ъе3до\",\n    \"ъе2л\",\n    \"ъ2е2р\",\n    \"ъе2с\",\n    \"ъе2хи\",\n    \"ъю2\",\n    \"ъя2\",\n    \"ъя3н\",\n    \"ы1\",\n    \"ы2бл\",\n    \"ы3га\",\n    \"ы3ги\",\n    \"ыг2л\",\n    \"ы2гн\",\n    \"ы2дл\",\n    \"ыд2ре\",\n    \"ы2д1ро\",\n    \"ы2дря\",\n    \"ые2\",\n    \"ы3ж2д\",\n    \"ыз2ва\",\n    \"ыз2д\",\n    \"ы2зл\",\n    \"ы2зн\",\n    \"ыз2на\",\n    \"ыи2\",\n    \"ыиг1\",\n    \"ы2к1в\",\n    \"ык2л\",\n    \"ы2к3ло\",\n    \"ыко1з\",\n    \"ык1с\",\n    \"ы2ль\",\n    \"ы2мч\",\n    \"ынос3л\",\n    \"ы3по\",\n    \"ыра2с3\",\n    \"ыр2в\",\n    \"ыре2х\",\n    \"ы3са\",\n    \"ы3се\",\n    \"ыс1ки\",\n    \"ыс1ку\",\n    \"ы2сн\",\n    \"ы3со\",\n    \"ыс2п\",\n    \"ы2сх\",\n    \"ыс2ч\",\n    \"ы2сш\",\n    \"ыт1ви\",\n    \"ыт2р\",\n    \"ы3тью\",\n    \"ы3тья\",\n    \"ыу2\",\n    \"ы2ш1л\",\n    \"ы3шь\",\n    \"ь1\",\n    \"ьб2\",\n    \"ь2вя\",\n    \"ь2дц\",\n    \"ь2е\",\n    \"ье1зо\",\n    \"ье1к\",\n    \"ье2с1к\",\n    \"ь2зн\",\n    \"ь2и1\",\n    \"ь2кл\",\n    \"ьми3д\",\n    \"ьми3к\",\n    \"ьмо1\",\n    \"ьне2о\",\n    \"ь2о\",\n    \"ь2п1л\",\n    \"ь3п2то\",\n    \"ьс2к\",\n    \"ь2сн\",\n    \"ь2сти\",\n    \"ь2стя\",\n    \"ь2т1амп\",\n    \"ьти3м\",\n    \"ь2тм\",\n    \"ь2тот\",\n    \"ь2траб\",\n    \"ьт2ре\",\n    \"ьт2ру\",\n    \"ьт2ры\",\n    \"ьхо2\",\n    \"ьхоз1\",\n    \"ь2ща\",\n    \"ь2ще\",\n    \"ь2щу\",\n    \"ь2ю\",\n    \"ь2я\",\n    \"ья1в\",\n    \"ь3ягс\",\n    \"1э\",\n    \"э1в\",\n    \"эв1р\",\n    \"2эг\",\n    \"эд1р\",\n    \"эк1л\",\n    \"экс1\",\n    \"эк2ст\",\n    \"эле1о\",\n    \"э2м\",\n    \"э3ма\",\n    \"э2н\",\n    \"э3нь\",\n    \"эо2з\",\n    \"э2п\",\n    \"эпи3к\",\n    \"э1ре\",\n    \"э1ри\",\n    \"эри4тр\",\n    \"эро1с2\",\n    \"э1ру\",\n    \"э1ры\",\n    \"эс1\",\n    \"эск2\",\n    \"эс3м\",\n    \"э2со\",\n    \"эс3те\",\n    \"эс2т1р\",\n    \"э2те\",\n    \"этил1а\",\n    \"эт1ра\",\n    \"э2ф\",\n    \"эх2\",\n    \"эхо3\",\n    \"э2ц\",\n    \"эя2\",\n    \"1ю\",\n    \"ю1а\",\n    \"ю1б\",\n    \"ю2бв\",\n    \"ю2бл\",\n    \"ю2б1ре\",\n    \"ю1в\",\n    \"ю1дь\",\n    \"ю1е\",\n    \"юз2г\",\n    \"юзи2к\",\n    \"ю1зо\",\n    \"ю1и\",\n    \"ю2идал\",\n    \"ю1к\",\n    \"ю2к1в\",\n    \"ю1ла\",\n    \"ю1ле\",\n    \"ю2ли\",\n    \"ю1лю\",\n    \"2юм\",\n    \"ю2мч\",\n    \"ю2нь\",\n    \"ю1о1\",\n    \"ю1ра\",\n    \"ю1ре\",\n    \"юре4м\",\n    \"ю1ри\",\n    \"юри2ск\",\n    \"ю1ро\",\n    \"ю1ру\",\n    \"ю1ры\",\n    \"ю2с1к\",\n    \"ю1ста\",\n    \"ю1сте\",\n    \"ю1сто\",\n    \"ю1стя\",\n    \"ю1ти\",\n    \"ю1то\",\n    \"ю1ту\",\n    \"ю1ты\",\n    \"ю1х\",\n    \"юха1с\",\n    \"ю1ч\",\n    \"ю2щь\",\n    \"ю1я\",\n    \"я2бр\",\n    \"яб1ра\",\n    \"яб3ре\",\n    \"яб1ри\",\n    \"яб3рю\",\n    \"3явикс\",\n    \"я1во\",\n    \"я1ву\",\n    \"я1в2х\",\n    \"я2г1л\",\n    \"я2гн\",\n    \"яд1в\",\n    \"яд1р\",\n    \"я1е\",\n    \"яз2гн\",\n    \"я1зо\",\n    \"я1и\",\n    \"я1к\",\n    \"я2к1в\",\n    \"я2к1л\",\n    \"як1с\",\n    \"я1л\",\n    \"я2ль\",\n    \"ям2б3л\",\n    \"я2мь\",\n    \"я3на\",\n    \"янс2\",\n    \"я1ра\",\n    \"я1ри\",\n    \"я1ро\",\n    \"я1рь\",\n    \"яс1к\",\n    \"яс1л\",\n    \"яс2т\",\n    \"яст3в\",\n    \"я1сто\",\n    \"яст1р\",\n    \"я1та\",\n    \"ят3в\",\n    \"я3ти\",\n    \"яти1з\",\n    \"я1то\",\n    \"я1ту\",\n    \"я1ты\",\n    \"я3тью\",\n    \"я3тья\",\n    \"я1тя\",\n    \"я1у\",\n    \"ях1л\",\n    \"я1ху\",\n    \"яце1\",\n    \"я2шл\",\n    \"2яю.\",\n    \"2я1я\",\n    //\n    \".бо2дра\",\n    \".вст2р\",\n    \".доб2рел\",\n    \".до1б2ри\",\n    \".об2люю\",\n    \".об2рее\",\n    \".об2рей\",\n    \".об2рею\",\n    \".об2рив\",\n    \".об2рил\",\n    \".об2рит\",\n    \".па2н1ис\",\n    \".пом2ну\",\n    \".реа2н\",\n    \".ро2с3пи\",\n    \".со2пла\",\n    \"а2ньш\",\n    \"атро2ск\",\n    \"безу2с\",\n    \"бино2ск\",\n    \"виз2гн\",\n    \"выб2ре\",\n    \"гст4р\",\n    \"ди1с2лов\",\n    \"дос2ня\",\n    \"дро2ж3ж\",\n    \"2дружей\",\n    \"е2мьд\",\n    \"е2о3плато\",\n    \"е2о3пози\",\n    \"ере3с2со\",\n    \"4ж3дик\",\n    \"4ж3дич\",\n    \"заи2л\",\n    \"зао2з\",\n    \"2з1а2хав\",\n    \"заю2л\",\n    \"з2рят\",\n    \"зу2мь\",\n    \"6зь.\",\n    \"и2л1а2мин\",\n    \"илло3к2\",\n    \"й2кь\",\n    \"ла2б1р\",\n    \"лу3с4н\",\n    \"ме2динс\",\n    \"ме2д1о2см\",\n    \"мети2л1ам\",\n    \"мис4с3н\",\n    \"нар2ват\",\n    \"не2о3ре\",\n    \"ни1с2кол\",\n    \"ни4сь.\",\n    \"но4л1а2мин\",\n    \"н2трасс\",\n    \"о2д1о2бол\",\n    \"о4ж3дев\",\n    \"о1и2с1тр\",\n    \"ойс4ков\",\n    \"о2м3че.\",\n    \"они3л2ам\",\n    \"он2трат\",\n    \"о2плюс\",\n    \"осо4м3н\",\n    \"оти4дн\",\n    \"пере1с2н\",\n    \"по2доде\",\n    \"по2д1у2ро\",\n    \"пое2ж\",\n    \"по2стин\",\n    \"прем2но\",\n    \"приче2с1к\",\n    \"пти4дн\",\n    \"редо4пл\",\n    \"реж4ди\",\n    \"рни3л2а3м\",\n    \"роб2лею\",\n    \"2сбрук1\",\n    \"со2стрит\",\n    \"со3т2кал\",\n    \"2стче.\",\n    \"2стьт\",\n    \"сы2мит\",\n    \"2сься.\",\n    \"6тр.\",\n    \"тро2етес\",\n    \"6хуя.\",\n    \"ы2рьм\",\n    \"ыя2вя\",\n    \"ьбат2\",\n    \"а1вё\",\n    \"а2двё\",\n    \"а1ё\",\n    \"аз3вёз\",\n    \"а1лё\",\n    \"2алёк\",\n    \"2амёт\",\n    \"ам2нёт\",\n    \"а1рё\",\n    \"ас3тём\",\n    \"а1тьё\",\n    \"1бё\",\n    \"бё2д1р\",\n    \"б3лён\",\n    \"б2лёс1к\",\n    \"б2люё\",\n    \"б1рёк\",\n    \"б2рём\",\n    \"б2рёх\",\n    \"1веё\",\n    \"3везё\",\n    \"вёд1р\",\n    \"1вёз\",\n    \"2вёрд\",\n    \"1вёс\",\n    \"в2лёк\",\n    \"в2лёт\",\n    \"1вмё\",\n    \"в2нёс\",\n    \"2в1рён\",\n    \"3всё3\",\n    \"1вьё\",\n    \"г1лё\",\n    \"г2лёт\",\n    \"г2нёв\",\n    \"г3нён\",\n    \"г2ноё\",\n    \"д1вё\",\n    \"1дё\",\n    \".доб2рёл\",\n    \"2доплё\",\n    \"до2прё\",\n    \"д1рё\",\n    \"д2рёб\",\n    \"2д3рёж\",\n    \"д2рём\",\n    \"1дрёма\",\n    \"1дрёмы\",\n    \"2д3рён\",\n    \"дъё2м\",\n    \"1дьё\",\n    \"еб1рён\",\n    \"е1вё\",\n    \"2евёр\",\n    \"2е1врё\",\n    \"е2глё\",\n    \"е1ё\",\n    \"2ежё\",\n    \"е3зё\",\n    \"е1лё\",\n    \"2епё\",\n    \"ер1вё\",\n    \"е1рё\",\n    \"ерё3до\",\n    \"ерё1к2\",\n    \"ес2чёт\",\n    \"ет1вё\",\n    \"е1тьё\",\n    \"2ёб\",\n    \"ё1бра\",\n    \"ёб1ры\",\n    \"ё1ве\",\n    \"ё1во\",\n    \"2ё1вре\",\n    \"ё1ву\",\n    \"ё1дру\",\n    \"2ё3душ\",\n    \"2ёже\",\n    \"ё3зе\",\n    \"ёз1о2г\",\n    \"ё1зом\",\n    \"ё1ка\",\n    \"ё1ки\",\n    \"2ё1ко\",\n    \"2ё1кр\",\n    \"ёк2ро\",\n    \"ё1ку\",\n    \"ё1ла\",\n    \"ё1ле\",\n    \"ё1лу\",\n    \"ё1лы\",\n    \"2ёмуж\",\n    \"ё2мч\",\n    \"ё3на\",\n    \"ён2д1р\",\n    \"ёнс2\",\n    \"ёпат2\",\n    \"2ёпе\",\n    \"ё2пл\",\n    \"ё3пла\",\n    \"ёп1лу\",\n    \"ё3плы\",\n    \"ё4пн\",\n    \"2ёпо\",\n    \"ё4пт\",\n    \"ё1ра\",\n    \"ё1ре\",\n    \"ё3ре.\",\n    \"ё1ри\",\n    \"ё1ро\",\n    \"ёр3ск\",\n    \"ё1ру\",\n    \"ё1ры\",\n    \"ё3с2а\",\n    \"ё1ск\",\n    \"ё2с1ка.\",\n    \"ё2ске\",\n    \"ё4с1ку.\",\n    \"2ёсл\",\n    \"ё3со\",\n    \"ё1ст\",\n    \"ёс2тан\",\n    \"ё3сту\",\n    \"ё1та\",\n    \"2ётеч\",\n    \"ё1ти\",\n    \"ё1то\",\n    \"ёто1с\",\n    \"ёт1р\",\n    \"ё1ту\",\n    \"ё1ты\",\n    \"ё1тю\",\n    \"ё1тя\",\n    \"ёха2т\",\n    \"ёх1ато\",\n    \"ёх3вал\",\n    \"ёх3лоп\",\n    \"ёх1опо\",\n    \"ёх1ру\",\n    \"3жёв\",\n    \"жё1с2\",\n    \"ж2жё\",\n    \"за3мнё\",\n    \"з1вё\",\n    \"з2вёз\",\n    \"1зё\",\n    \"з2наё\",\n    \"2знё\",\n    \"1з2о3рё\",\n    \"з2отё\",\n    \"зот2рё\",\n    \"3зуё\",\n    \"зъё2м\",\n    \"2зымё\",\n    \"2и1вё\",\n    \"иг1рён\",\n    \"и1ё\",\n    \"их1рё\",\n    \"1каё\",\n    \"1кё\",\n    \"к3лён\",\n    \"к2роё\",\n    \"3куё\",\n    \"ла1стё\",\n    \"лё3до\",\n    \"лё1з2о3\",\n    \"лёк1л\",\n    \"1лён\",\n    \"лё2ск\",\n    \"лё4ска\",\n    \"1лёх\",\n    \"2лоён\",\n    \"1луё\",\n    \"3льё\",\n    \"1льщё\",\n    \"3м2нёш\",\n    \"3м2щё\",\n    \"нд2рё\",\n    \"не3ё\",\n    \"1нё\",\n    \"нё1б2\",\n    \"3номё\",\n    \"1ньё\",\n    \"од3рёб\",\n    \"о1ё\",\n    \"оё2жи\",\n    \"о1лё\",\n    \"2омё\",\n    \"о3м2нём\",\n    \"о3м2нёт\",\n    \"о2п1лёй\",\n    \"о1рё\",\n    \"о2скё\",\n    \"от1вё\",\n    \"2о3тёк\",\n    \"о3тёр\",\n    \"от1рёк\",\n    \"от1рёш\",\n    \"о3фё\",\n    \"пё1\",\n    \"пё2ст1р\",\n    \"пё2тр\",\n    \"2плён\",\n    \"п2лёнк\",\n    \"плёс1к\",\n    \"п1лёю\",\n    \"поё2ж\",\n    \"3прёт\",\n    \"причё2с1к\",\n    \"р2блё\",\n    \"1рвёт\",\n    \".рё2бр\",\n    \"1рёзк\",\n    \"рё1зна\",\n    \"1рё1зо\",\n    \"рёз2у\",\n    \"1рёкш\",\n    \"3рёмо\",\n    \"1рёнк\",\n    \"рё3ста\",\n    \"рё3сто\",\n    \"род2лё\",\n    \"роё2м\",\n    \"1рьё\",\n    \"с2дё\",\n    \"се3стё\",\n    \"1с2ё\",\n    \"сёкс4\",\n    \"сё2ст\",\n    \"сёст1р\",\n    \"2скуё\",\n    \"с1лёт\",\n    \"с2тё\",\n    \"1стёл\",\n    \"1стён.\",\n    \"с3тёт.\",\n    \"с3тёте\",\n    \"стё3х\",\n    \"с3тёш\",\n    \"с3т2лё\",\n    \"счё2с1к\",\n    \"1сьё\",\n    \"т1вёл\",\n    \"т1воё\",\n    \"1т2ё\",\n    \"тё2гн\",\n    \"тё1зо\",\n    \"3тёка\",\n    \"тёк1л\",\n    \"3тёкш\",\n    \"тё4п1л\",\n    \"тёр3к\",\n    \"тё2ска\",\n    \"тё2с1ки\",\n    \"тё2с1ко\",\n    \"тё2ску\",\n    \"тё2хо\",\n    \"3т2кёт\",\n    \"т1ревё\",\n    \"3т2рё2х\",\n    \"т2рёшь\",\n    \"тро2етёс\",\n    \"3тьё\",\n    \"уг2нё\",\n    \"уг1рё\",\n    \".уё2\",\n    \"у1ё\",\n    \"у1лё\",\n    \"у1рё\",\n    \"у1стё\",\n    \"у3тёр\",\n    \"у1тьё\",\n    \"у2чёб\",\n    \"у3шё\",\n    \"2х3вё\",\n    \"1хлёб\",\n    \"х2лёс\",\n    \"ц2вё\",\n    \"1чё\",\n    \"чёр2с\",\n    \"чёрст1\",\n    \".чё2с1к\",\n    \"ч2тё\",\n    \"1чьё\",\n    \"2шлён\",\n    \"3шьё\",\n    \"ъ2ё2р\",\n    \"ыд2рё\",\n    \"ырё2х\",\n    \"ы3сё\",\n    \"ь2ё\",\n    \"ьё1зо\",\n    \"ь2щё\",\n    \"ю1ё\",\n    \"яб3рё\",\n    \".не8\",\n    \"8не.\",\n    \"8бъ.\",\n    \"8въ.\",\n    \"8гъ.\",\n    \"8дъ.\",\n    \"8жъ.\",\n    \"8зъ.\",\n    \"8къ.\",\n    \"8лъ.\",\n    \"8мъ.\",\n    \"8нъ.\",\n    \"8пъ.\",\n    \"8ръ.\",\n    \"8съ.\",\n    \"8тъ.\",\n    \"8фъ.\",\n    \"8хъ.\",\n    \"8цъ.\",\n    \"8чъ.\",\n    \"8шъ.\",\n    \"8щъ.\",\n    // Additional patterns with hyphen/dash: a hack to prevent breaking after hyphen, but not before.\n    \"8-7\",\n    \"--8\",\n    \".а-8\",\n    \".б-8\",\n    \".в-8\",\n    \".г-8\",\n    \".д-8\",\n    \".е-8\",\n    \".ё-8\",\n    \".ж-8\",\n    \".з-8\",\n    \".и-8\",\n    \".й-8\",\n    \".к-8\",\n    \".л-8\",\n    \".м-8\",\n    \".н-8\",\n    \".о-8\",\n    \".п-8\",\n    \".р-8\",\n    \".с-8\",\n    \".т-8\",\n    \".у-8\",\n    \".ф-8\",\n    \".х-8\",\n    \".ц-8\",\n    \".ч-8\",\n    \".ш-8\",\n    \".щ-8\",\n    \".ъ-8\",\n    \".ы-8\",\n    \".ь-8\",\n    \".э-8\",\n    \".ю-8\",\n    \".я-8\",\n    \"-а8а8\",\n    \"8а8а-\",\n    \"-а8б8\",\n    \"8а8б-\",\n    \"-а8в8\",\n    \"8а8в-\",\n    \"-а8г8\",\n    \"8а8г-\",\n    \"-а8д8\",\n    \"8а8д-\",\n    \"-а8е8\",\n    \"8а8е-\",\n    \"-а8ё8\",\n    \"8а8ё-\",\n    \"-а8ж8\",\n    \"8а8ж-\",\n    \"-а8з8\",\n    \"8а8з-\",\n    \"-а8и8\",\n    \"8а8и-\",\n    \"-а8й8\",\n    \"8а8й-\",\n    \"-а8к8\",\n    \"8а8к-\",\n    \"-а8л8\",\n    \"8а8л-\",\n    \"-а8м8\",\n    \"8а8м-\",\n    \"-а8н8\",\n    \"8а8н-\",\n    \"-а8о8\",\n    \"8а8о-\",\n    \"-а8п8\",\n    \"8а8п-\",\n    \"-а8р8\",\n    \"8а8р-\",\n    \"-а8с8\",\n    \"8а8с-\",\n    \"-а8т8\",\n    \"8а8т-\",\n    \"-а8у8\",\n    \"8а8у-\",\n    \"-а8ф8\",\n    \"8а8ф-\",\n    \"-а8х8\",\n    \"8а8х-\",\n    \"-а8ц8\",\n    \"8а8ц-\",\n    \"-а8ч8\",\n    \"8а8ч-\",\n    \"-а8ш8\",\n    \"8а8ш-\",\n    \"-а8щ8\",\n    \"8а8щ-\",\n    \"-а8ъ8\",\n    \"8а8ъ-\",\n    \"-а8ы8\",\n    \"8а8ы-\",\n    \"-а8ь8\",\n    \"8а8ь-\",\n    \"-а8э8\",\n    \"8а8э-\",\n    \"-а8ю8\",\n    \"8а8ю-\",\n    \"-а8я8\",\n    \"8а8я-\",\n    \"-б8а8\",\n    \"8б8а-\",\n    \"-б8б8\",\n    \"8б8б-\",\n    \"-б8в8\",\n    \"8б8в-\",\n    \"-б8г8\",\n    \"8б8г-\",\n    \"-б8д8\",\n    \"8б8д-\",\n    \"-б8е8\",\n    \"8б8е-\",\n    \"-б8ё8\",\n    \"8б8ё-\",\n    \"-б8ж8\",\n    \"8б8ж-\",\n    \"-б8з8\",\n    \"8б8з-\",\n    \"-б8и8\",\n    \"8б8и-\",\n    \"-б8й8\",\n    \"8б8й-\",\n    \"-б8к8\",\n    \"8б8к-\",\n    \"-б8л8\",\n    \"8б8л-\",\n    \"-б8м8\",\n    \"8б8м-\",\n    \"-б8н8\",\n    \"8б8н-\",\n    \"-б8о8\",\n    \"8б8о-\",\n    \"-б8п8\",\n    \"8б8п-\",\n    \"-б8р8\",\n    \"8б8р-\",\n    \"-б8с8\",\n    \"8б8с-\",\n    \"-б8т8\",\n    \"8б8т-\",\n    \"-б8у8\",\n    \"8б8у-\",\n    \"-б8ф8\",\n    \"8б8ф-\",\n    \"-б8х8\",\n    \"8б8х-\",\n    \"-б8ц8\",\n    \"8б8ц-\",\n    \"-б8ч8\",\n    \"8б8ч-\",\n    \"-б8ш8\",\n    \"8б8ш-\",\n    \"-б8щ8\",\n    \"8б8щ-\",\n    \"-б8ъ8\",\n    \"8б8ъ-\",\n    \"-б8ы8\",\n    \"8б8ы-\",\n    \"-б8ь8\",\n    \"8б8ь-\",\n    \"-б8э8\",\n    \"8б8э-\",\n    \"-б8ю8\",\n    \"8б8ю-\",\n    \"-б8я8\",\n    \"8б8я-\",\n    \"-в8а8\",\n    \"8в8а-\",\n    \"-в8б8\",\n    \"8в8б-\",\n    \"-в8в8\",\n    \"8в8в-\",\n    \"-в8г8\",\n    \"8в8г-\",\n    \"-в8д8\",\n    \"8в8д-\",\n    \"-в8е8\",\n    \"8в8е-\",\n    \"-в8ё8\",\n    \"8в8ё-\",\n    \"-в8ж8\",\n    \"8в8ж-\",\n    \"-в8з8\",\n    \"8в8з-\",\n    \"-в8и8\",\n    \"8в8и-\",\n    \"-в8й8\",\n    \"8в8й-\",\n    \"-в8к8\",\n    \"8в8к-\",\n    \"-в8л8\",\n    \"8в8л-\",\n    \"-в8м8\",\n    \"8в8м-\",\n    \"-в8н8\",\n    \"8в8н-\",\n    \"-в8о8\",\n    \"8в8о-\",\n    \"-в8п8\",\n    \"8в8п-\",\n    \"-в8р8\",\n    \"8в8р-\",\n    \"-в8с8\",\n    \"8в8с-\",\n    \"-в8т8\",\n    \"8в8т-\",\n    \"-в8у8\",\n    \"8в8у-\",\n    \"-в8ф8\",\n    \"8в8ф-\",\n    \"-в8х8\",\n    \"8в8х-\",\n    \"-в8ц8\",\n    \"8в8ц-\",\n    \"-в8ч8\",\n    \"8в8ч-\",\n    \"-в8ш8\",\n    \"8в8ш-\",\n    \"-в8щ8\",\n    \"8в8щ-\",\n    \"-в8ъ8\",\n    \"8в8ъ-\",\n    \"-в8ы8\",\n    \"8в8ы-\",\n    \"-в8ь8\",\n    \"8в8ь-\",\n    \"-в8э8\",\n    \"8в8э-\",\n    \"-в8ю8\",\n    \"8в8ю-\",\n    \"-в8я8\",\n    \"8в8я-\",\n    \"-г8а8\",\n    \"8г8а-\",\n    \"-г8б8\",\n    \"8г8б-\",\n    \"-г8в8\",\n    \"8г8в-\",\n    \"-г8г8\",\n    \"8г8г-\",\n    \"-г8д8\",\n    \"8г8д-\",\n    \"-г8е8\",\n    \"8г8е-\",\n    \"-г8ё8\",\n    \"8г8ё-\",\n    \"-г8ж8\",\n    \"8г8ж-\",\n    \"-г8з8\",\n    \"8г8з-\",\n    \"-г8и8\",\n    \"8г8и-\",\n    \"-г8й8\",\n    \"8г8й-\",\n    \"-г8к8\",\n    \"8г8к-\",\n    \"-г8л8\",\n    \"8г8л-\",\n    \"-г8м8\",\n    \"8г8м-\",\n    \"-г8н8\",\n    \"8г8н-\",\n    \"-г8о8\",\n    \"8г8о-\",\n    \"-г8п8\",\n    \"8г8п-\",\n    \"-г8р8\",\n    \"8г8р-\",\n    \"-г8с8\",\n    \"8г8с-\",\n    \"-г8т8\",\n    \"8г8т-\",\n    \"-г8у8\",\n    \"8г8у-\",\n    \"-г8ф8\",\n    \"8г8ф-\",\n    \"-г8х8\",\n    \"8г8х-\",\n    \"-г8ц8\",\n    \"8г8ц-\",\n    \"-г8ч8\",\n    \"8г8ч-\",\n    \"-г8ш8\",\n    \"8г8ш-\",\n    \"-г8щ8\",\n    \"8г8щ-\",\n    \"-г8ъ8\",\n    \"8г8ъ-\",\n    \"-г8ы8\",\n    \"8г8ы-\",\n    \"-г8ь8\",\n    \"8г8ь-\",\n    \"-г8э8\",\n    \"8г8э-\",\n    \"-г8ю8\",\n    \"8г8ю-\",\n    \"-г8я8\",\n    \"8г8я-\",\n    \"-д8а8\",\n    \"8д8а-\",\n    \"-д8б8\",\n    \"8д8б-\",\n    \"-д8в8\",\n    \"8д8в-\",\n    \"-д8г8\",\n    \"8д8г-\",\n    \"-д8д8\",\n    \"8д8д-\",\n    \"-д8е8\",\n    \"8д8е-\",\n    \"-д8ё8\",\n    \"8д8ё-\",\n    \"-д8ж8\",\n    \"8д8ж-\",\n    \"-д8з8\",\n    \"8д8з-\",\n    \"-д8и8\",\n    \"8д8и-\",\n    \"-д8й8\",\n    \"8д8й-\",\n    \"-д8к8\",\n    \"8д8к-\",\n    \"-д8л8\",\n    \"8д8л-\",\n    \"-д8м8\",\n    \"8д8м-\",\n    \"-д8н8\",\n    \"8д8н-\",\n    \"-д8о8\",\n    \"8д8о-\",\n    \"-д8п8\",\n    \"8д8п-\",\n    \"-д8р8\",\n    \"8д8р-\",\n    \"-д8с8\",\n    \"8д8с-\",\n    \"-д8т8\",\n    \"8д8т-\",\n    \"-д8у8\",\n    \"8д8у-\",\n    \"-д8ф8\",\n    \"8д8ф-\",\n    \"-д8х8\",\n    \"8д8х-\",\n    \"-д8ц8\",\n    \"8д8ц-\",\n    \"-д8ч8\",\n    \"8д8ч-\",\n    \"-д8ш8\",\n    \"8д8ш-\",\n    \"-д8щ8\",\n    \"8д8щ-\",\n    \"-д8ъ8\",\n    \"8д8ъ-\",\n    \"-д8ы8\",\n    \"8д8ы-\",\n    \"-д8ь8\",\n    \"8д8ь-\",\n    \"-д8э8\",\n    \"8д8э-\",\n    \"-д8ю8\",\n    \"8д8ю-\",\n    \"-д8я8\",\n    \"8д8я-\",\n    \"-е8а8\",\n    \"8е8а-\",\n    \"-е8б8\",\n    \"8е8б-\",\n    \"-е8в8\",\n    \"8е8в-\",\n    \"-е8г8\",\n    \"8е8г-\",\n    \"-е8д8\",\n    \"8е8д-\",\n    \"-е8е8\",\n    \"8е8е-\",\n    \"-е8ё8\",\n    \"8е8ё-\",\n    \"-е8ж8\",\n    \"8е8ж-\",\n    \"-е8з8\",\n    \"8е8з-\",\n    \"-е8и8\",\n    \"8е8и-\",\n    \"-е8й8\",\n    \"8е8й-\",\n    \"-е8к8\",\n    \"8е8к-\",\n    \"-е8л8\",\n    \"8е8л-\",\n    \"-е8м8\",\n    \"8е8м-\",\n    \"-е8н8\",\n    \"8е8н-\",\n    \"-е8о8\",\n    \"8е8о-\",\n    \"-е8п8\",\n    \"8е8п-\",\n    \"-е8р8\",\n    \"8е8р-\",\n    \"-е8с8\",\n    \"8е8с-\",\n    \"-е8т8\",\n    \"8е8т-\",\n    \"-е8у8\",\n    \"8е8у-\",\n    \"-е8ф8\",\n    \"8е8ф-\",\n    \"-е8х8\",\n    \"8е8х-\",\n    \"-е8ц8\",\n    \"8е8ц-\",\n    \"-е8ч8\",\n    \"8е8ч-\",\n    \"-е8ш8\",\n    \"8е8ш-\",\n    \"-е8щ8\",\n    \"8е8щ-\",\n    \"-е8ъ8\",\n    \"8е8ъ-\",\n    \"-е8ы8\",\n    \"8е8ы-\",\n    \"-е8ь8\",\n    \"8е8ь-\",\n    \"-е8э8\",\n    \"8е8э-\",\n    \"-е8ю8\",\n    \"8е8ю-\",\n    \"-е8я8\",\n    \"8е8я-\",\n    \"-ё8а8\",\n    \"8ё8а-\",\n    \"-ё8б8\",\n    \"8ё8б-\",\n    \"-ё8в8\",\n    \"8ё8в-\",\n    \"-ё8г8\",\n    \"8ё8г-\",\n    \"-ё8д8\",\n    \"8ё8д-\",\n    \"-ё8е8\",\n    \"8ё8е-\",\n    \"-ё8ё8\",\n    \"8ё8ё-\",\n    \"-ё8ж8\",\n    \"8ё8ж-\",\n    \"-ё8з8\",\n    \"8ё8з-\",\n    \"-ё8и8\",\n    \"8ё8и-\",\n    \"-ё8й8\",\n    \"8ё8й-\",\n    \"-ё8к8\",\n    \"8ё8к-\",\n    \"-ё8л8\",\n    \"8ё8л-\",\n    \"-ё8м8\",\n    \"8ё8м-\",\n    \"-ё8н8\",\n    \"8ё8н-\",\n    \"-ё8о8\",\n    \"8ё8о-\",\n    \"-ё8п8\",\n    \"8ё8п-\",\n    \"-ё8р8\",\n    \"8ё8р-\",\n    \"-ё8с8\",\n    \"8ё8с-\",\n    \"-ё8т8\",\n    \"8ё8т-\",\n    \"-ё8у8\",\n    \"8ё8у-\",\n    \"-ё8ф8\",\n    \"8ё8ф-\",\n    \"-ё8х8\",\n    \"8ё8х-\",\n    \"-ё8ц8\",\n    \"8ё8ц-\",\n    \"-ё8ч8\",\n    \"8ё8ч-\",\n    \"-ё8ш8\",\n    \"8ё8ш-\",\n    \"-ё8щ8\",\n    \"8ё8щ-\",\n    \"-ё8ъ8\",\n    \"8ё8ъ-\",\n    \"-ё8ы8\",\n    \"8ё8ы-\",\n    \"-ё8ь8\",\n    \"8ё8ь-\",\n    \"-ё8э8\",\n    \"8ё8э-\",\n    \"-ё8ю8\",\n    \"8ё8ю-\",\n    \"-ё8я8\",\n    \"8ё8я-\",\n    \"-ж8а8\",\n    \"8ж8а-\",\n    \"-ж8б8\",\n    \"8ж8б-\",\n    \"-ж8в8\",\n    \"8ж8в-\",\n    \"-ж8г8\",\n    \"8ж8г-\",\n    \"-ж8д8\",\n    \"8ж8д-\",\n    \"-ж8е8\",\n    \"8ж8е-\",\n    \"-ж8ё8\",\n    \"8ж8ё-\",\n    \"-ж8ж8\",\n    \"8ж8ж-\",\n    \"-ж8з8\",\n    \"8ж8з-\",\n    \"-ж8и8\",\n    \"8ж8и-\",\n    \"-ж8й8\",\n    \"8ж8й-\",\n    \"-ж8к8\",\n    \"8ж8к-\",\n    \"-ж8л8\",\n    \"8ж8л-\",\n    \"-ж8м8\",\n    \"8ж8м-\",\n    \"-ж8н8\",\n    \"8ж8н-\",\n    \"-ж8о8\",\n    \"8ж8о-\",\n    \"-ж8п8\",\n    \"8ж8п-\",\n    \"-ж8р8\",\n    \"8ж8р-\",\n    \"-ж8с8\",\n    \"8ж8с-\",\n    \"-ж8т8\",\n    \"8ж8т-\",\n    \"-ж8у8\",\n    \"8ж8у-\",\n    \"-ж8ф8\",\n    \"8ж8ф-\",\n    \"-ж8х8\",\n    \"8ж8х-\",\n    \"-ж8ц8\",\n    \"8ж8ц-\",\n    \"-ж8ч8\",\n    \"8ж8ч-\",\n    \"-ж8ш8\",\n    \"8ж8ш-\",\n    \"-ж8щ8\",\n    \"8ж8щ-\",\n    \"-ж8ъ8\",\n    \"8ж8ъ-\",\n    \"-ж8ы8\",\n    \"8ж8ы-\",\n    \"-ж8ь8\",\n    \"8ж8ь-\",\n    \"-ж8э8\",\n    \"8ж8э-\",\n    \"-ж8ю8\",\n    \"8ж8ю-\",\n    \"-ж8я8\",\n    \"8ж8я-\",\n    \"-з8а8\",\n    \"8з8а-\",\n    \"-з8б8\",\n    \"8з8б-\",\n    \"-з8в8\",\n    \"8з8в-\",\n    \"-з8г8\",\n    \"8з8г-\",\n    \"-з8д8\",\n    \"8з8д-\",\n    \"-з8е8\",\n    \"8з8е-\",\n    \"-з8ё8\",\n    \"8з8ё-\",\n    \"-з8ж8\",\n    \"8з8ж-\",\n    \"-з8з8\",\n    \"8з8з-\",\n    \"-з8и8\",\n    \"8з8и-\",\n    \"-з8й8\",\n    \"8з8й-\",\n    \"-з8к8\",\n    \"8з8к-\",\n    \"-з8л8\",\n    \"8з8л-\",\n    \"-з8м8\",\n    \"8з8м-\",\n    \"-з8н8\",\n    \"8з8н-\",\n    \"-з8о8\",\n    \"8з8о-\",\n    \"-з8п8\",\n    \"8з8п-\",\n    \"-з8р8\",\n    \"8з8р-\",\n    \"-з8с8\",\n    \"8з8с-\",\n    \"-з8т8\",\n    \"8з8т-\",\n    \"-з8у8\",\n    \"8з8у-\",\n    \"-з8ф8\",\n    \"8з8ф-\",\n    \"-з8х8\",\n    \"8з8х-\",\n    \"-з8ц8\",\n    \"8з8ц-\",\n    \"-з8ч8\",\n    \"8з8ч-\",\n    \"-з8ш8\",\n    \"8з8ш-\",\n    \"-з8щ8\",\n    \"8з8щ-\",\n    \"-з8ъ8\",\n    \"8з8ъ-\",\n    \"-з8ы8\",\n    \"8з8ы-\",\n    \"-з8ь8\",\n    \"8з8ь-\",\n    \"-з8э8\",\n    \"8з8э-\",\n    \"-з8ю8\",\n    \"8з8ю-\",\n    \"-з8я8\",\n    \"8з8я-\",\n    \"-и8а8\",\n    \"8и8а-\",\n    \"-и8б8\",\n    \"8и8б-\",\n    \"-и8в8\",\n    \"8и8в-\",\n    \"-и8г8\",\n    \"8и8г-\",\n    \"-и8д8\",\n    \"8и8д-\",\n    \"-и8е8\",\n    \"8и8е-\",\n    \"-и8ё8\",\n    \"8и8ё-\",\n    \"-и8ж8\",\n    \"8и8ж-\",\n    \"-и8з8\",\n    \"8и8з-\",\n    \"-и8и8\",\n    \"8и8и-\",\n    \"-и8й8\",\n    \"8и8й-\",\n    \"-и8к8\",\n    \"8и8к-\",\n    \"-и8л8\",\n    \"8и8л-\",\n    \"-и8м8\",\n    \"8и8м-\",\n    \"-и8н8\",\n    \"8и8н-\",\n    \"-и8о8\",\n    \"8и8о-\",\n    \"-и8п8\",\n    \"8и8п-\",\n    \"-и8р8\",\n    \"8и8р-\",\n    \"-и8с8\",\n    \"8и8с-\",\n    \"-и8т8\",\n    \"8и8т-\",\n    \"-и8у8\",\n    \"8и8у-\",\n    \"-и8ф8\",\n    \"8и8ф-\",\n    \"-и8х8\",\n    \"8и8х-\",\n    \"-и8ц8\",\n    \"8и8ц-\",\n    \"-и8ч8\",\n    \"8и8ч-\",\n    \"-и8ш8\",\n    \"8и8ш-\",\n    \"-и8щ8\",\n    \"8и8щ-\",\n    \"-и8ъ8\",\n    \"8и8ъ-\",\n    \"-и8ы8\",\n    \"8и8ы-\",\n    \"-и8ь8\",\n    \"8и8ь-\",\n    \"-и8э8\",\n    \"8и8э-\",\n    \"-и8ю8\",\n    \"8и8ю-\",\n    \"-и8я8\",\n    \"8и8я-\",\n    \"-й8а8\",\n    \"8й8а-\",\n    \"-й8б8\",\n    \"8й8б-\",\n    \"-й8в8\",\n    \"8й8в-\",\n    \"-й8г8\",\n    \"8й8г-\",\n    \"-й8д8\",\n    \"8й8д-\",\n    \"-й8е8\",\n    \"8й8е-\",\n    \"-й8ё8\",\n    \"8й8ё-\",\n    \"-й8ж8\",\n    \"8й8ж-\",\n    \"-й8з8\",\n    \"8й8з-\",\n    \"-й8и8\",\n    \"8й8и-\",\n    \"-й8й8\",\n    \"8й8й-\",\n    \"-й8к8\",\n    \"8й8к-\",\n    \"-й8л8\",\n    \"8й8л-\",\n    \"-й8м8\",\n    \"8й8м-\",\n    \"-й8н8\",\n    \"8й8н-\",\n    \"-й8о8\",\n    \"8й8о-\",\n    \"-й8п8\",\n    \"8й8п-\",\n    \"-й8р8\",\n    \"8й8р-\",\n    \"-й8с8\",\n    \"8й8с-\",\n    \"-й8т8\",\n    \"8й8т-\",\n    \"-й8у8\",\n    \"8й8у-\",\n    \"-й8ф8\",\n    \"8й8ф-\",\n    \"-й8х8\",\n    \"8й8х-\",\n    \"-й8ц8\",\n    \"8й8ц-\",\n    \"-й8ч8\",\n    \"8й8ч-\",\n    \"-й8ш8\",\n    \"8й8ш-\",\n    \"-й8щ8\",\n    \"8й8щ-\",\n    \"-й8ъ8\",\n    \"8й8ъ-\",\n    \"-й8ы8\",\n    \"8й8ы-\",\n    \"-й8ь8\",\n    \"8й8ь-\",\n    \"-й8э8\",\n    \"8й8э-\",\n    \"-й8ю8\",\n    \"8й8ю-\",\n    \"-й8я8\",\n    \"8й8я-\",\n    \"-к8а8\",\n    \"8к8а-\",\n    \"-к8б8\",\n    \"8к8б-\",\n    \"-к8в8\",\n    \"8к8в-\",\n    \"-к8г8\",\n    \"8к8г-\",\n    \"-к8д8\",\n    \"8к8д-\",\n    \"-к8е8\",\n    \"8к8е-\",\n    \"-к8ё8\",\n    \"8к8ё-\",\n    \"-к8ж8\",\n    \"8к8ж-\",\n    \"-к8з8\",\n    \"8к8з-\",\n    \"-к8и8\",\n    \"8к8и-\",\n    \"-к8й8\",\n    \"8к8й-\",\n    \"-к8к8\",\n    \"8к8к-\",\n    \"-к8л8\",\n    \"8к8л-\",\n    \"-к8м8\",\n    \"8к8м-\",\n    \"-к8н8\",\n    \"8к8н-\",\n    \"-к8о8\",\n    \"8к8о-\",\n    \"-к8п8\",\n    \"8к8п-\",\n    \"-к8р8\",\n    \"8к8р-\",\n    \"-к8с8\",\n    \"8к8с-\",\n    \"-к8т8\",\n    \"8к8т-\",\n    \"-к8у8\",\n    \"8к8у-\",\n    \"-к8ф8\",\n    \"8к8ф-\",\n    \"-к8х8\",\n    \"8к8х-\",\n    \"-к8ц8\",\n    \"8к8ц-\",\n    \"-к8ч8\",\n    \"8к8ч-\",\n    \"-к8ш8\",\n    \"8к8ш-\",\n    \"-к8щ8\",\n    \"8к8щ-\",\n    \"-к8ъ8\",\n    \"8к8ъ-\",\n    \"-к8ы8\",\n    \"8к8ы-\",\n    \"-к8ь8\",\n    \"8к8ь-\",\n    \"-к8э8\",\n    \"8к8э-\",\n    \"-к8ю8\",\n    \"8к8ю-\",\n    \"-к8я8\",\n    \"8к8я-\",\n    \"-л8а8\",\n    \"8л8а-\",\n    \"-л8б8\",\n    \"8л8б-\",\n    \"-л8в8\",\n    \"8л8в-\",\n    \"-л8г8\",\n    \"8л8г-\",\n    \"-л8д8\",\n    \"8л8д-\",\n    \"-л8е8\",\n    \"8л8е-\",\n    \"-л8ё8\",\n    \"8л8ё-\",\n    \"-л8ж8\",\n    \"8л8ж-\",\n    \"-л8з8\",\n    \"8л8з-\",\n    \"-л8и8\",\n    \"8л8и-\",\n    \"-л8й8\",\n    \"8л8й-\",\n    \"-л8к8\",\n    \"8л8к-\",\n    \"-л8л8\",\n    \"8л8л-\",\n    \"-л8м8\",\n    \"8л8м-\",\n    \"-л8н8\",\n    \"8л8н-\",\n    \"-л8о8\",\n    \"8л8о-\",\n    \"-л8п8\",\n    \"8л8п-\",\n    \"-л8р8\",\n    \"8л8р-\",\n    \"-л8с8\",\n    \"8л8с-\",\n    \"-л8т8\",\n    \"8л8т-\",\n    \"-л8у8\",\n    \"8л8у-\",\n    \"-л8ф8\",\n    \"8л8ф-\",\n    \"-л8х8\",\n    \"8л8х-\",\n    \"-л8ц8\",\n    \"8л8ц-\",\n    \"-л8ч8\",\n    \"8л8ч-\",\n    \"-л8ш8\",\n    \"8л8ш-\",\n    \"-л8щ8\",\n    \"8л8щ-\",\n    \"-л8ъ8\",\n    \"8л8ъ-\",\n    \"-л8ы8\",\n    \"8л8ы-\",\n    \"-л8ь8\",\n    \"8л8ь-\",\n    \"-л8э8\",\n    \"8л8э-\",\n    \"-л8ю8\",\n    \"8л8ю-\",\n    \"-л8я8\",\n    \"8л8я-\",\n    \"-м8а8\",\n    \"8м8а-\",\n    \"-м8б8\",\n    \"8м8б-\",\n    \"-м8в8\",\n    \"8м8в-\",\n    \"-м8г8\",\n    \"8м8г-\",\n    \"-м8д8\",\n    \"8м8д-\",\n    \"-м8е8\",\n    \"8м8е-\",\n    \"-м8ё8\",\n    \"8м8ё-\",\n    \"-м8ж8\",\n    \"8м8ж-\",\n    \"-м8з8\",\n    \"8м8з-\",\n    \"-м8и8\",\n    \"8м8и-\",\n    \"-м8й8\",\n    \"8м8й-\",\n    \"-м8к8\",\n    \"8м8к-\",\n    \"-м8л8\",\n    \"8м8л-\",\n    \"-м8м8\",\n    \"8м8м-\",\n    \"-м8н8\",\n    \"8м8н-\",\n    \"-м8о8\",\n    \"8м8о-\",\n    \"-м8п8\",\n    \"8м8п-\",\n    \"-м8р8\",\n    \"8м8р-\",\n    \"-м8с8\",\n    \"8м8с-\",\n    \"-м8т8\",\n    \"8м8т-\",\n    \"-м8у8\",\n    \"8м8у-\",\n    \"-м8ф8\",\n    \"8м8ф-\",\n    \"-м8х8\",\n    \"8м8х-\",\n    \"-м8ц8\",\n    \"8м8ц-\",\n    \"-м8ч8\",\n    \"8м8ч-\",\n    \"-м8ш8\",\n    \"8м8ш-\",\n    \"-м8щ8\",\n    \"8м8щ-\",\n    \"-м8ъ8\",\n    \"8м8ъ-\",\n    \"-м8ы8\",\n    \"8м8ы-\",\n    \"-м8ь8\",\n    \"8м8ь-\",\n    \"-м8э8\",\n    \"8м8э-\",\n    \"-м8ю8\",\n    \"8м8ю-\",\n    \"-м8я8\",\n    \"8м8я-\",\n    \"-н8а8\",\n    \"8н8а-\",\n    \"-н8б8\",\n    \"8н8б-\",\n    \"-н8в8\",\n    \"8н8в-\",\n    \"-н8г8\",\n    \"8н8г-\",\n    \"-н8д8\",\n    \"8н8д-\",\n    \"-н8е8\",\n    \"8н8е-\",\n    \"-н8ё8\",\n    \"8н8ё-\",\n    \"-н8ж8\",\n    \"8н8ж-\",\n    \"-н8з8\",\n    \"8н8з-\",\n    \"-н8и8\",\n    \"8н8и-\",\n    \"-н8й8\",\n    \"8н8й-\",\n    \"-н8к8\",\n    \"8н8к-\",\n    \"-н8л8\",\n    \"8н8л-\",\n    \"-н8м8\",\n    \"8н8м-\",\n    \"-н8н8\",\n    \"8н8н-\",\n    \"-н8о8\",\n    \"8н8о-\",\n    \"-н8п8\",\n    \"8н8п-\",\n    \"-н8р8\",\n    \"8н8р-\",\n    \"-н8с8\",\n    \"8н8с-\",\n    \"-н8т8\",\n    \"8н8т-\",\n    \"-н8у8\",\n    \"8н8у-\",\n    \"-н8ф8\",\n    \"8н8ф-\",\n    \"-н8х8\",\n    \"8н8х-\",\n    \"-н8ц8\",\n    \"8н8ц-\",\n    \"-н8ч8\",\n    \"8н8ч-\",\n    \"-н8ш8\",\n    \"8н8ш-\",\n    \"-н8щ8\",\n    \"8н8щ-\",\n    \"-н8ъ8\",\n    \"8н8ъ-\",\n    \"-н8ы8\",\n    \"8н8ы-\",\n    \"-н8ь8\",\n    \"8н8ь-\",\n    \"-н8э8\",\n    \"8н8э-\",\n    \"-н8ю8\",\n    \"8н8ю-\",\n    \"-н8я8\",\n    \"8н8я-\",\n    \"-о8а8\",\n    \"8о8а-\",\n    \"-о8б8\",\n    \"8о8б-\",\n    \"-о8в8\",\n    \"8о8в-\",\n    \"-о8г8\",\n    \"8о8г-\",\n    \"-о8д8\",\n    \"8о8д-\",\n    \"-о8е8\",\n    \"8о8е-\",\n    \"-о8ё8\",\n    \"8о8ё-\",\n    \"-о8ж8\",\n    \"8о8ж-\",\n    \"-о8з8\",\n    \"8о8з-\",\n    \"-о8и8\",\n    \"8о8и-\",\n    \"-о8й8\",\n    \"8о8й-\",\n    \"-о8к8\",\n    \"8о8к-\",\n    \"-о8л8\",\n    \"8о8л-\",\n    \"-о8м8\",\n    \"8о8м-\",\n    \"-о8н8\",\n    \"8о8н-\",\n    \"-о8о8\",\n    \"8о8о-\",\n    \"-о8п8\",\n    \"8о8п-\",\n    \"-о8р8\",\n    \"8о8р-\",\n    \"-о8с8\",\n    \"8о8с-\",\n    \"-о8т8\",\n    \"8о8т-\",\n    \"-о8у8\",\n    \"8о8у-\",\n    \"-о8ф8\",\n    \"8о8ф-\",\n    \"-о8х8\",\n    \"8о8х-\",\n    \"-о8ц8\",\n    \"8о8ц-\",\n    \"-о8ч8\",\n    \"8о8ч-\",\n    \"-о8ш8\",\n    \"8о8ш-\",\n    \"-о8щ8\",\n    \"8о8щ-\",\n    \"-о8ъ8\",\n    \"8о8ъ-\",\n    \"-о8ы8\",\n    \"8о8ы-\",\n    \"-о8ь8\",\n    \"8о8ь-\",\n    \"-о8э8\",\n    \"8о8э-\",\n    \"-о8ю8\",\n    \"8о8ю-\",\n    \"-о8я8\",\n    \"8о8я-\",\n    \"-п8а8\",\n    \"8п8а-\",\n    \"-п8б8\",\n    \"8п8б-\",\n    \"-п8в8\",\n    \"8п8в-\",\n    \"-п8г8\",\n    \"8п8г-\",\n    \"-п8д8\",\n    \"8п8д-\",\n    \"-п8е8\",\n    \"8п8е-\",\n    \"-п8ё8\",\n    \"8п8ё-\",\n    \"-п8ж8\",\n    \"8п8ж-\",\n    \"-п8з8\",\n    \"8п8з-\",\n    \"-п8и8\",\n    \"8п8и-\",\n    \"-п8й8\",\n    \"8п8й-\",\n    \"-п8к8\",\n    \"8п8к-\",\n    \"-п8л8\",\n    \"8п8л-\",\n    \"-п8м8\",\n    \"8п8м-\",\n    \"-п8н8\",\n    \"8п8н-\",\n    \"-п8о8\",\n    \"8п8о-\",\n    \"-п8п8\",\n    \"8п8п-\",\n    \"-п8р8\",\n    \"8п8р-\",\n    \"-п8с8\",\n    \"8п8с-\",\n    \"-п8т8\",\n    \"8п8т-\",\n    \"-п8у8\",\n    \"8п8у-\",\n    \"-п8ф8\",\n    \"8п8ф-\",\n    \"-п8х8\",\n    \"8п8х-\",\n    \"-п8ц8\",\n    \"8п8ц-\",\n    \"-п8ч8\",\n    \"8п8ч-\",\n    \"-п8ш8\",\n    \"8п8ш-\",\n    \"-п8щ8\",\n    \"8п8щ-\",\n    \"-п8ъ8\",\n    \"8п8ъ-\",\n    \"-п8ы8\",\n    \"8п8ы-\",\n    \"-п8ь8\",\n    \"8п8ь-\",\n    \"-п8э8\",\n    \"8п8э-\",\n    \"-п8ю8\",\n    \"8п8ю-\",\n    \"-п8я8\",\n    \"8п8я-\",\n    \"-р8а8\",\n    \"8р8а-\",\n    \"-р8б8\",\n    \"8р8б-\",\n    \"-р8в8\",\n    \"8р8в-\",\n    \"-р8г8\",\n    \"8р8г-\",\n    \"-р8д8\",\n    \"8р8д-\",\n    \"-р8е8\",\n    \"8р8е-\",\n    \"-р8ё8\",\n    \"8р8ё-\",\n    \"-р8ж8\",\n    \"8р8ж-\",\n    \"-р8з8\",\n    \"8р8з-\",\n    \"-р8и8\",\n    \"8р8и-\",\n    \"-р8й8\",\n    \"8р8й-\",\n    \"-р8к8\",\n    \"8р8к-\",\n    \"-р8л8\",\n    \"8р8л-\",\n    \"-р8м8\",\n    \"8р8м-\",\n    \"-р8н8\",\n    \"8р8н-\",\n    \"-р8о8\",\n    \"8р8о-\",\n    \"-р8п8\",\n    \"8р8п-\",\n    \"-р8р8\",\n    \"8р8р-\",\n    \"-р8с8\",\n    \"8р8с-\",\n    \"-р8т8\",\n    \"8р8т-\",\n    \"-р8у8\",\n    \"8р8у-\",\n    \"-р8ф8\",\n    \"8р8ф-\",\n    \"-р8х8\",\n    \"8р8х-\",\n    \"-р8ц8\",\n    \"8р8ц-\",\n    \"-р8ч8\",\n    \"8р8ч-\",\n    \"-р8ш8\",\n    \"8р8ш-\",\n    \"-р8щ8\",\n    \"8р8щ-\",\n    \"-р8ъ8\",\n    \"8р8ъ-\",\n    \"-р8ы8\",\n    \"8р8ы-\",\n    \"-р8ь8\",\n    \"8р8ь-\",\n    \"-р8э8\",\n    \"8р8э-\",\n    \"-р8ю8\",\n    \"8р8ю-\",\n    \"-р8я8\",\n    \"8р8я-\",\n    \"-с8а8\",\n    \"8с8а-\",\n    \"-с8б8\",\n    \"8с8б-\",\n    \"-с8в8\",\n    \"8с8в-\",\n    \"-с8г8\",\n    \"8с8г-\",\n    \"-с8д8\",\n    \"8с8д-\",\n    \"-с8е8\",\n    \"8с8е-\",\n    \"-с8ё8\",\n    \"8с8ё-\",\n    \"-с8ж8\",\n    \"8с8ж-\",\n    \"-с8з8\",\n    \"8с8з-\",\n    \"-с8и8\",\n    \"8с8и-\",\n    \"-с8й8\",\n    \"8с8й-\",\n    \"-с8к8\",\n    \"8с8к-\",\n    \"-с8л8\",\n    \"8с8л-\",\n    \"-с8м8\",\n    \"8с8м-\",\n    \"-с8н8\",\n    \"8с8н-\",\n    \"-с8о8\",\n    \"8с8о-\",\n    \"-с8п8\",\n    \"8с8п-\",\n    \"-с8р8\",\n    \"8с8р-\",\n    \"-с8с8\",\n    \"8с8с-\",\n    \"-с8т8\",\n    \"8с8т-\",\n    \"-с8у8\",\n    \"8с8у-\",\n    \"-с8ф8\",\n    \"8с8ф-\",\n    \"-с8х8\",\n    \"8с8х-\",\n    \"-с8ц8\",\n    \"8с8ц-\",\n    \"-с8ч8\",\n    \"8с8ч-\",\n    \"-с8ш8\",\n    \"8с8ш-\",\n    \"-с8щ8\",\n    \"8с8щ-\",\n    \"-с8ъ8\",\n    \"8с8ъ-\",\n    \"-с8ы8\",\n    \"8с8ы-\",\n    \"-с8ь8\",\n    \"8с8ь-\",\n    \"-с8э8\",\n    \"8с8э-\",\n    \"-с8ю8\",\n    \"8с8ю-\",\n    \"-с8я8\",\n    \"8с8я-\",\n    \"-т8а8\",\n    \"8т8а-\",\n    \"-т8б8\",\n    \"8т8б-\",\n    \"-т8в8\",\n    \"8т8в-\",\n    \"-т8г8\",\n    \"8т8г-\",\n    \"-т8д8\",\n    \"8т8д-\",\n    \"-т8е8\",\n    \"8т8е-\",\n    \"-т8ё8\",\n    \"8т8ё-\",\n    \"-т8ж8\",\n    \"8т8ж-\",\n    \"-т8з8\",\n    \"8т8з-\",\n    \"-т8и8\",\n    \"8т8и-\",\n    \"-т8й8\",\n    \"8т8й-\",\n    \"-т8к8\",\n    \"8т8к-\",\n    \"-т8л8\",\n    \"8т8л-\",\n    \"-т8м8\",\n    \"8т8м-\",\n    \"-т8н8\",\n    \"8т8н-\",\n    \"-т8о8\",\n    \"8т8о-\",\n    \"-т8п8\",\n    \"8т8п-\",\n    \"-т8р8\",\n    \"8т8р-\",\n    \"-т8с8\",\n    \"8т8с-\",\n    \"-т8т8\",\n    \"8т8т-\",\n    \"-т8у8\",\n    \"8т8у-\",\n    \"-т8ф8\",\n    \"8т8ф-\",\n    \"-т8х8\",\n    \"8т8х-\",\n    \"-т8ц8\",\n    \"8т8ц-\",\n    \"-т8ч8\",\n    \"8т8ч-\",\n    \"-т8ш8\",\n    \"8т8ш-\",\n    \"-т8щ8\",\n    \"8т8щ-\",\n    \"-т8ъ8\",\n    \"8т8ъ-\",\n    \"-т8ы8\",\n    \"8т8ы-\",\n    \"-т8ь8\",\n    \"8т8ь-\",\n    \"-т8э8\",\n    \"8т8э-\",\n    \"-т8ю8\",\n    \"8т8ю-\",\n    \"-т8я8\",\n    \"8т8я-\",\n    \"-у8а8\",\n    \"8у8а-\",\n    \"-у8б8\",\n    \"8у8б-\",\n    \"-у8в8\",\n    \"8у8в-\",\n    \"-у8г8\",\n    \"8у8г-\",\n    \"-у8д8\",\n    \"8у8д-\",\n    \"-у8е8\",\n    \"8у8е-\",\n    \"-у8ё8\",\n    \"8у8ё-\",\n    \"-у8ж8\",\n    \"8у8ж-\",\n    \"-у8з8\",\n    \"8у8з-\",\n    \"-у8и8\",\n    \"8у8и-\",\n    \"-у8й8\",\n    \"8у8й-\",\n    \"-у8к8\",\n    \"8у8к-\",\n    \"-у8л8\",\n    \"8у8л-\",\n    \"-у8м8\",\n    \"8у8м-\",\n    \"-у8н8\",\n    \"8у8н-\",\n    \"-у8о8\",\n    \"8у8о-\",\n    \"-у8п8\",\n    \"8у8п-\",\n    \"-у8р8\",\n    \"8у8р-\",\n    \"-у8с8\",\n    \"8у8с-\",\n    \"-у8т8\",\n    \"8у8т-\",\n    \"-у8у8\",\n    \"8у8у-\",\n    \"-у8ф8\",\n    \"8у8ф-\",\n    \"-у8х8\",\n    \"8у8х-\",\n    \"-у8ц8\",\n    \"8у8ц-\",\n    \"-у8ч8\",\n    \"8у8ч-\",\n    \"-у8ш8\",\n    \"8у8ш-\",\n    \"-у8щ8\",\n    \"8у8щ-\",\n    \"-у8ъ8\",\n    \"8у8ъ-\",\n    \"-у8ы8\",\n    \"8у8ы-\",\n    \"-у8ь8\",\n    \"8у8ь-\",\n    \"-у8э8\",\n    \"8у8э-\",\n    \"-у8ю8\",\n    \"8у8ю-\",\n    \"-у8я8\",\n    \"8у8я-\",\n    \"-ф8а8\",\n    \"8ф8а-\",\n    \"-ф8б8\",\n    \"8ф8б-\",\n    \"-ф8в8\",\n    \"8ф8в-\",\n    \"-ф8г8\",\n    \"8ф8г-\",\n    \"-ф8д8\",\n    \"8ф8д-\",\n    \"-ф8е8\",\n    \"8ф8е-\",\n    \"-ф8ё8\",\n    \"8ф8ё-\",\n    \"-ф8ж8\",\n    \"8ф8ж-\",\n    \"-ф8з8\",\n    \"8ф8з-\",\n    \"-ф8и8\",\n    \"8ф8и-\",\n    \"-ф8й8\",\n    \"8ф8й-\",\n    \"-ф8к8\",\n    \"8ф8к-\",\n    \"-ф8л8\",\n    \"8ф8л-\",\n    \"-ф8м8\",\n    \"8ф8м-\",\n    \"-ф8н8\",\n    \"8ф8н-\",\n    \"-ф8о8\",\n    \"8ф8о-\",\n    \"-ф8п8\",\n    \"8ф8п-\",\n    \"-ф8р8\",\n    \"8ф8р-\",\n    \"-ф8с8\",\n    \"8ф8с-\",\n    \"-ф8т8\",\n    \"8ф8т-\",\n    \"-ф8у8\",\n    \"8ф8у-\",\n    \"-ф8ф8\",\n    \"8ф8ф-\",\n    \"-ф8х8\",\n    \"8ф8х-\",\n    \"-ф8ц8\",\n    \"8ф8ц-\",\n    \"-ф8ч8\",\n    \"8ф8ч-\",\n    \"-ф8ш8\",\n    \"8ф8ш-\",\n    \"-ф8щ8\",\n    \"8ф8щ-\",\n    \"-ф8ъ8\",\n    \"8ф8ъ-\",\n    \"-ф8ы8\",\n    \"8ф8ы-\",\n    \"-ф8ь8\",\n    \"8ф8ь-\",\n    \"-ф8э8\",\n    \"8ф8э-\",\n    \"-ф8ю8\",\n    \"8ф8ю-\",\n    \"-ф8я8\",\n    \"8ф8я-\",\n    \"-х8а8\",\n    \"8х8а-\",\n    \"-х8б8\",\n    \"8х8б-\",\n    \"-х8в8\",\n    \"8х8в-\",\n    \"-х8г8\",\n    \"8х8г-\",\n    \"-х8д8\",\n    \"8х8д-\",\n    \"-х8е8\",\n    \"8х8е-\",\n    \"-х8ё8\",\n    \"8х8ё-\",\n    \"-х8ж8\",\n    \"8х8ж-\",\n    \"-х8з8\",\n    \"8х8з-\",\n    \"-х8и8\",\n    \"8х8и-\",\n    \"-х8й8\",\n    \"8х8й-\",\n    \"-х8к8\",\n    \"8х8к-\",\n    \"-х8л8\",\n    \"8х8л-\",\n    \"-х8м8\",\n    \"8х8м-\",\n    \"-х8н8\",\n    \"8х8н-\",\n    \"-х8о8\",\n    \"8х8о-\",\n    \"-х8п8\",\n    \"8х8п-\",\n    \"-х8р8\",\n    \"8х8р-\",\n    \"-х8с8\",\n    \"8х8с-\",\n    \"-х8т8\",\n    \"8х8т-\",\n    \"-х8у8\",\n    \"8х8у-\",\n    \"-х8ф8\",\n    \"8х8ф-\",\n    \"-х8х8\",\n    \"8х8х-\",\n    \"-х8ц8\",\n    \"8х8ц-\",\n    \"-х8ч8\",\n    \"8х8ч-\",\n    \"-х8ш8\",\n    \"8х8ш-\",\n    \"-х8щ8\",\n    \"8х8щ-\",\n    \"-х8ъ8\",\n    \"8х8ъ-\",\n    \"-х8ы8\",\n    \"8х8ы-\",\n    \"-х8ь8\",\n    \"8х8ь-\",\n    \"-х8э8\",\n    \"8х8э-\",\n    \"-х8ю8\",\n    \"8х8ю-\",\n    \"-х8я8\",\n    \"8х8я-\",\n    \"-ц8а8\",\n    \"8ц8а-\",\n    \"-ц8б8\",\n    \"8ц8б-\",\n    \"-ц8в8\",\n    \"8ц8в-\",\n    \"-ц8г8\",\n    \"8ц8г-\",\n    \"-ц8д8\",\n    \"8ц8д-\",\n    \"-ц8е8\",\n    \"8ц8е-\",\n    \"-ц8ё8\",\n    \"8ц8ё-\",\n    \"-ц8ж8\",\n    \"8ц8ж-\",\n    \"-ц8з8\",\n    \"8ц8з-\",\n    \"-ц8и8\",\n    \"8ц8и-\",\n    \"-ц8й8\",\n    \"8ц8й-\",\n    \"-ц8к8\",\n    \"8ц8к-\",\n    \"-ц8л8\",\n    \"8ц8л-\",\n    \"-ц8м8\",\n    \"8ц8м-\",\n    \"-ц8н8\",\n    \"8ц8н-\",\n    \"-ц8о8\",\n    \"8ц8о-\",\n    \"-ц8п8\",\n    \"8ц8п-\",\n    \"-ц8р8\",\n    \"8ц8р-\",\n    \"-ц8с8\",\n    \"8ц8с-\",\n    \"-ц8т8\",\n    \"8ц8т-\",\n    \"-ц8у8\",\n    \"8ц8у-\",\n    \"-ц8ф8\",\n    \"8ц8ф-\",\n    \"-ц8х8\",\n    \"8ц8х-\",\n    \"-ц8ц8\",\n    \"8ц8ц-\",\n    \"-ц8ч8\",\n    \"8ц8ч-\",\n    \"-ц8ш8\",\n    \"8ц8ш-\",\n    \"-ц8щ8\",\n    \"8ц8щ-\",\n    \"-ц8ъ8\",\n    \"8ц8ъ-\",\n    \"-ц8ы8\",\n    \"8ц8ы-\",\n    \"-ц8ь8\",\n    \"8ц8ь-\",\n    \"-ц8э8\",\n    \"8ц8э-\",\n    \"-ц8ю8\",\n    \"8ц8ю-\",\n    \"-ц8я8\",\n    \"8ц8я-\",\n    \"-ч8а8\",\n    \"8ч8а-\",\n    \"-ч8б8\",\n    \"8ч8б-\",\n    \"-ч8в8\",\n    \"8ч8в-\",\n    \"-ч8г8\",\n    \"8ч8г-\",\n    \"-ч8д8\",\n    \"8ч8д-\",\n    \"-ч8е8\",\n    \"8ч8е-\",\n    \"-ч8ё8\",\n    \"8ч8ё-\",\n    \"-ч8ж8\",\n    \"8ч8ж-\",\n    \"-ч8з8\",\n    \"8ч8з-\",\n    \"-ч8и8\",\n    \"8ч8и-\",\n    \"-ч8й8\",\n    \"8ч8й-\",\n    \"-ч8к8\",\n    \"8ч8к-\",\n    \"-ч8л8\",\n    \"8ч8л-\",\n    \"-ч8м8\",\n    \"8ч8м-\",\n    \"-ч8н8\",\n    \"8ч8н-\",\n    \"-ч8о8\",\n    \"8ч8о-\",\n    \"-ч8п8\",\n    \"8ч8п-\",\n    \"-ч8р8\",\n    \"8ч8р-\",\n    \"-ч8с8\",\n    \"8ч8с-\",\n    \"-ч8т8\",\n    \"8ч8т-\",\n    \"-ч8у8\",\n    \"8ч8у-\",\n    \"-ч8ф8\",\n    \"8ч8ф-\",\n    \"-ч8х8\",\n    \"8ч8х-\",\n    \"-ч8ц8\",\n    \"8ч8ц-\",\n    \"-ч8ч8\",\n    \"8ч8ч-\",\n    \"-ч8ш8\",\n    \"8ч8ш-\",\n    \"-ч8щ8\",\n    \"8ч8щ-\",\n    \"-ч8ъ8\",\n    \"8ч8ъ-\",\n    \"-ч8ы8\",\n    \"8ч8ы-\",\n    \"-ч8ь8\",\n    \"8ч8ь-\",\n    \"-ч8э8\",\n    \"8ч8э-\",\n    \"-ч8ю8\",\n    \"8ч8ю-\",\n    \"-ч8я8\",\n    \"8ч8я-\",\n    \"-ш8а8\",\n    \"8ш8а-\",\n    \"-ш8б8\",\n    \"8ш8б-\",\n    \"-ш8в8\",\n    \"8ш8в-\",\n    \"-ш8г8\",\n    \"8ш8г-\",\n    \"-ш8д8\",\n    \"8ш8д-\",\n    \"-ш8е8\",\n    \"8ш8е-\",\n    \"-ш8ё8\",\n    \"8ш8ё-\",\n    \"-ш8ж8\",\n    \"8ш8ж-\",\n    \"-ш8з8\",\n    \"8ш8з-\",\n    \"-ш8и8\",\n    \"8ш8и-\",\n    \"-ш8й8\",\n    \"8ш8й-\",\n    \"-ш8к8\",\n    \"8ш8к-\",\n    \"-ш8л8\",\n    \"8ш8л-\",\n    \"-ш8м8\",\n    \"8ш8м-\",\n    \"-ш8н8\",\n    \"8ш8н-\",\n    \"-ш8о8\",\n    \"8ш8о-\",\n    \"-ш8п8\",\n    \"8ш8п-\",\n    \"-ш8р8\",\n    \"8ш8р-\",\n    \"-ш8с8\",\n    \"8ш8с-\",\n    \"-ш8т8\",\n    \"8ш8т-\",\n    \"-ш8у8\",\n    \"8ш8у-\",\n    \"-ш8ф8\",\n    \"8ш8ф-\",\n    \"-ш8х8\",\n    \"8ш8х-\",\n    \"-ш8ц8\",\n    \"8ш8ц-\",\n    \"-ш8ч8\",\n    \"8ш8ч-\",\n    \"-ш8ш8\",\n    \"8ш8ш-\",\n    \"-ш8щ8\",\n    \"8ш8щ-\",\n    \"-ш8ъ8\",\n    \"8ш8ъ-\",\n    \"-ш8ы8\",\n    \"8ш8ы-\",\n    \"-ш8ь8\",\n    \"8ш8ь-\",\n    \"-ш8э8\",\n    \"8ш8э-\",\n    \"-ш8ю8\",\n    \"8ш8ю-\",\n    \"-ш8я8\",\n    \"8ш8я-\",\n    \"-щ8а8\",\n    \"8щ8а-\",\n    \"-щ8б8\",\n    \"8щ8б-\",\n    \"-щ8в8\",\n    \"8щ8в-\",\n    \"-щ8г8\",\n    \"8щ8г-\",\n    \"-щ8д8\",\n    \"8щ8д-\",\n    \"-щ8е8\",\n    \"8щ8е-\",\n    \"-щ8ё8\",\n    \"8щ8ё-\",\n    \"-щ8ж8\",\n    \"8щ8ж-\",\n    \"-щ8з8\",\n    \"8щ8з-\",\n    \"-щ8и8\",\n    \"8щ8и-\",\n    \"-щ8й8\",\n    \"8щ8й-\",\n    \"-щ8к8\",\n    \"8щ8к-\",\n    \"-щ8л8\",\n    \"8щ8л-\",\n    \"-щ8м8\",\n    \"8щ8м-\",\n    \"-щ8н8\",\n    \"8щ8н-\",\n    \"-щ8о8\",\n    \"8щ8о-\",\n    \"-щ8п8\",\n    \"8щ8п-\",\n    \"-щ8р8\",\n    \"8щ8р-\",\n    \"-щ8с8\",\n    \"8щ8с-\",\n    \"-щ8т8\",\n    \"8щ8т-\",\n    \"-щ8у8\",\n    \"8щ8у-\",\n    \"-щ8ф8\",\n    \"8щ8ф-\",\n    \"-щ8х8\",\n    \"8щ8х-\",\n    \"-щ8ц8\",\n    \"8щ8ц-\",\n    \"-щ8ч8\",\n    \"8щ8ч-\",\n    \"-щ8ш8\",\n    \"8щ8ш-\",\n    \"-щ8щ8\",\n    \"8щ8щ-\",\n    \"-щ8ъ8\",\n    \"8щ8ъ-\",\n    \"-щ8ы8\",\n    \"8щ8ы-\",\n    \"-щ8ь8\",\n    \"8щ8ь-\",\n    \"-щ8э8\",\n    \"8щ8э-\",\n    \"-щ8ю8\",\n    \"8щ8ю-\",\n    \"-щ8я8\",\n    \"8щ8я-\",\n    \"-ъ8а8\",\n    \"8ъ8а-\",\n    \"-ъ8б8\",\n    \"8ъ8б-\",\n    \"-ъ8в8\",\n    \"8ъ8в-\",\n    \"-ъ8г8\",\n    \"8ъ8г-\",\n    \"-ъ8д8\",\n    \"8ъ8д-\",\n    \"-ъ8е8\",\n    \"8ъ8е-\",\n    \"-ъ8ё8\",\n    \"8ъ8ё-\",\n    \"-ъ8ж8\",\n    \"8ъ8ж-\",\n    \"-ъ8з8\",\n    \"8ъ8з-\",\n    \"-ъ8и8\",\n    \"8ъ8и-\",\n    \"-ъ8й8\",\n    \"8ъ8й-\",\n    \"-ъ8к8\",\n    \"8ъ8к-\",\n    \"-ъ8л8\",\n    \"8ъ8л-\",\n    \"-ъ8м8\",\n    \"8ъ8м-\",\n    \"-ъ8н8\",\n    \"8ъ8н-\",\n    \"-ъ8о8\",\n    \"8ъ8о-\",\n    \"-ъ8п8\",\n    \"8ъ8п-\",\n    \"-ъ8р8\",\n    \"8ъ8р-\",\n    \"-ъ8с8\",\n    \"8ъ8с-\",\n    \"-ъ8т8\",\n    \"8ъ8т-\",\n    \"-ъ8у8\",\n    \"8ъ8у-\",\n    \"-ъ8ф8\",\n    \"8ъ8ф-\",\n    \"-ъ8х8\",\n    \"8ъ8х-\",\n    \"-ъ8ц8\",\n    \"8ъ8ц-\",\n    \"-ъ8ч8\",\n    \"8ъ8ч-\",\n    \"-ъ8ш8\",\n    \"8ъ8ш-\",\n    \"-ъ8щ8\",\n    \"8ъ8щ-\",\n    \"-ъ8ъ8\",\n    \"8ъ8ъ-\",\n    \"-ъ8ы8\",\n    \"8ъ8ы-\",\n    \"-ъ8ь8\",\n    \"8ъ8ь-\",\n    \"-ъ8э8\",\n    \"8ъ8э-\",\n    \"-ъ8ю8\",\n    \"8ъ8ю-\",\n    \"-ъ8я8\",\n    \"8ъ8я-\",\n    \"-ы8а8\",\n    \"8ы8а-\",\n    \"-ы8б8\",\n    \"8ы8б-\",\n    \"-ы8в8\",\n    \"8ы8в-\",\n    \"-ы8г8\",\n    \"8ы8г-\",\n    \"-ы8д8\",\n    \"8ы8д-\",\n    \"-ы8е8\",\n    \"8ы8е-\",\n    \"-ы8ё8\",\n    \"8ы8ё-\",\n    \"-ы8ж8\",\n    \"8ы8ж-\",\n    \"-ы8з8\",\n    \"8ы8з-\",\n    \"-ы8и8\",\n    \"8ы8и-\",\n    \"-ы8й8\",\n    \"8ы8й-\",\n    \"-ы8к8\",\n    \"8ы8к-\",\n    \"-ы8л8\",\n    \"8ы8л-\",\n    \"-ы8м8\",\n    \"8ы8м-\",\n    \"-ы8н8\",\n    \"8ы8н-\",\n    \"-ы8о8\",\n    \"8ы8о-\",\n    \"-ы8п8\",\n    \"8ы8п-\",\n    \"-ы8р8\",\n    \"8ы8р-\",\n    \"-ы8с8\",\n    \"8ы8с-\",\n    \"-ы8т8\",\n    \"8ы8т-\",\n    \"-ы8у8\",\n    \"8ы8у-\",\n    \"-ы8ф8\",\n    \"8ы8ф-\",\n    \"-ы8х8\",\n    \"8ы8х-\",\n    \"-ы8ц8\",\n    \"8ы8ц-\",\n    \"-ы8ч8\",\n    \"8ы8ч-\",\n    \"-ы8ш8\",\n    \"8ы8ш-\",\n    \"-ы8щ8\",\n    \"8ы8щ-\",\n    \"-ы8ъ8\",\n    \"8ы8ъ-\",\n    \"-ы8ы8\",\n    \"8ы8ы-\",\n    \"-ы8ь8\",\n    \"8ы8ь-\",\n    \"-ы8э8\",\n    \"8ы8э-\",\n    \"-ы8ю8\",\n    \"8ы8ю-\",\n    \"-ы8я8\",\n    \"8ы8я-\",\n    \"-ь8а8\",\n    \"8ь8а-\",\n    \"-ь8б8\",\n    \"8ь8б-\",\n    \"-ь8в8\",\n    \"8ь8в-\",\n    \"-ь8г8\",\n    \"8ь8г-\",\n    \"-ь8д8\",\n    \"8ь8д-\",\n    \"-ь8е8\",\n    \"8ь8е-\",\n    \"-ь8ё8\",\n    \"8ь8ё-\",\n    \"-ь8ж8\",\n    \"8ь8ж-\",\n    \"-ь8з8\",\n    \"8ь8з-\",\n    \"-ь8и8\",\n    \"8ь8и-\",\n    \"-ь8й8\",\n    \"8ь8й-\",\n    \"-ь8к8\",\n    \"8ь8к-\",\n    \"-ь8л8\",\n    \"8ь8л-\",\n    \"-ь8м8\",\n    \"8ь8м-\",\n    \"-ь8н8\",\n    \"8ь8н-\",\n    \"-ь8о8\",\n    \"8ь8о-\",\n    \"-ь8п8\",\n    \"8ь8п-\",\n    \"-ь8р8\",\n    \"8ь8р-\",\n    \"-ь8с8\",\n    \"8ь8с-\",\n    \"-ь8т8\",\n    \"8ь8т-\",\n    \"-ь8у8\",\n    \"8ь8у-\",\n    \"-ь8ф8\",\n    \"8ь8ф-\",\n    \"-ь8х8\",\n    \"8ь8х-\",\n    \"-ь8ц8\",\n    \"8ь8ц-\",\n    \"-ь8ч8\",\n    \"8ь8ч-\",\n    \"-ь8ш8\",\n    \"8ь8ш-\",\n    \"-ь8щ8\",\n    \"8ь8щ-\",\n    \"-ь8ъ8\",\n    \"8ь8ъ-\",\n    \"-ь8ы8\",\n    \"8ь8ы-\",\n    \"-ь8ь8\",\n    \"8ь8ь-\",\n    \"-ь8э8\",\n    \"8ь8э-\",\n    \"-ь8ю8\",\n    \"8ь8ю-\",\n    \"-ь8я8\",\n    \"8ь8я-\",\n    \"-э8а8\",\n    \"8э8а-\",\n    \"-э8б8\",\n    \"8э8б-\",\n    \"-э8в8\",\n    \"8э8в-\",\n    \"-э8г8\",\n    \"8э8г-\",\n    \"-э8д8\",\n    \"8э8д-\",\n    \"-э8е8\",\n    \"8э8е-\",\n    \"-э8ё8\",\n    \"8э8ё-\",\n    \"-э8ж8\",\n    \"8э8ж-\",\n    \"-э8з8\",\n    \"8э8з-\",\n    \"-э8и8\",\n    \"8э8и-\",\n    \"-э8й8\",\n    \"8э8й-\",\n    \"-э8к8\",\n    \"8э8к-\",\n    \"-э8л8\",\n    \"8э8л-\",\n    \"-э8м8\",\n    \"8э8м-\",\n    \"-э8н8\",\n    \"8э8н-\",\n    \"-э8о8\",\n    \"8э8о-\",\n    \"-э8п8\",\n    \"8э8п-\",\n    \"-э8р8\",\n    \"8э8р-\",\n    \"-э8с8\",\n    \"8э8с-\",\n    \"-э8т8\",\n    \"8э8т-\",\n    \"-э8у8\",\n    \"8э8у-\",\n    \"-э8ф8\",\n    \"8э8ф-\",\n    \"-э8х8\",\n    \"8э8х-\",\n    \"-э8ц8\",\n    \"8э8ц-\",\n    \"-э8ч8\",\n    \"8э8ч-\",\n    \"-э8ш8\",\n    \"8э8ш-\",\n    \"-э8щ8\",\n    \"8э8щ-\",\n    \"-э8ъ8\",\n    \"8э8ъ-\",\n    \"-э8ы8\",\n    \"8э8ы-\",\n    \"-э8ь8\",\n    \"8э8ь-\",\n    \"-э8э8\",\n    \"8э8э-\",\n    \"-э8ю8\",\n    \"8э8ю-\",\n    \"-э8я8\",\n    \"8э8я-\",\n    \"-ю8а8\",\n    \"8ю8а-\",\n    \"-ю8б8\",\n    \"8ю8б-\",\n    \"-ю8в8\",\n    \"8ю8в-\",\n    \"-ю8г8\",\n    \"8ю8г-\",\n    \"-ю8д8\",\n    \"8ю8д-\",\n    \"-ю8е8\",\n    \"8ю8е-\",\n    \"-ю8ё8\",\n    \"8ю8ё-\",\n    \"-ю8ж8\",\n    \"8ю8ж-\",\n    \"-ю8з8\",\n    \"8ю8з-\",\n    \"-ю8и8\",\n    \"8ю8и-\",\n    \"-ю8й8\",\n    \"8ю8й-\",\n    \"-ю8к8\",\n    \"8ю8к-\",\n    \"-ю8л8\",\n    \"8ю8л-\",\n    \"-ю8м8\",\n    \"8ю8м-\",\n    \"-ю8н8\",\n    \"8ю8н-\",\n    \"-ю8о8\",\n    \"8ю8о-\",\n    \"-ю8п8\",\n    \"8ю8п-\",\n    \"-ю8р8\",\n    \"8ю8р-\",\n    \"-ю8с8\",\n    \"8ю8с-\",\n    \"-ю8т8\",\n    \"8ю8т-\",\n    \"-ю8у8\",\n    \"8ю8у-\",\n    \"-ю8ф8\",\n    \"8ю8ф-\",\n    \"-ю8х8\",\n    \"8ю8х-\",\n    \"-ю8ц8\",\n    \"8ю8ц-\",\n    \"-ю8ч8\",\n    \"8ю8ч-\",\n    \"-ю8ш8\",\n    \"8ю8ш-\",\n    \"-ю8щ8\",\n    \"8ю8щ-\",\n    \"-ю8ъ8\",\n    \"8ю8ъ-\",\n    \"-ю8ы8\",\n    \"8ю8ы-\",\n    \"-ю8ь8\",\n    \"8ю8ь-\",\n    \"-ю8э8\",\n    \"8ю8э-\",\n    \"-ю8ю8\",\n    \"8ю8ю-\",\n    \"-ю8я8\",\n    \"8ю8я-\",\n    \"-я8а8\",\n    \"8я8а-\",\n    \"-я8б8\",\n    \"8я8б-\",\n    \"-я8в8\",\n    \"8я8в-\",\n    \"-я8г8\",\n    \"8я8г-\",\n    \"-я8д8\",\n    \"8я8д-\",\n    \"-я8е8\",\n    \"8я8е-\",\n    \"-я8ё8\",\n    \"8я8ё-\",\n    \"-я8ж8\",\n    \"8я8ж-\",\n    \"-я8з8\",\n    \"8я8з-\",\n    \"-я8и8\",\n    \"8я8и-\",\n    \"-я8й8\",\n    \"8я8й-\",\n    \"-я8к8\",\n    \"8я8к-\",\n    \"-я8л8\",\n    \"8я8л-\",\n    \"-я8м8\",\n    \"8я8м-\",\n    \"-я8н8\",\n    \"8я8н-\",\n    \"-я8о8\",\n    \"8я8о-\",\n    \"-я8п8\",\n    \"8я8п-\",\n    \"-я8р8\",\n    \"8я8р-\",\n    \"-я8с8\",\n    \"8я8с-\",\n    \"-я8т8\",\n    \"8я8т-\",\n    \"-я8у8\",\n    \"8я8у-\",\n    \"-я8ф8\",\n    \"8я8ф-\",\n    \"-я8х8\",\n    \"8я8х-\",\n    \"-я8ц8\",\n    \"8я8ц-\",\n    \"-я8ч8\",\n    \"8я8ч-\",\n    \"-я8ш8\",\n    \"8я8ш-\",\n    \"-я8щ8\",\n    \"8я8щ-\",\n    \"-я8ъ8\",\n    \"8я8ъ-\",\n    \"-я8ы8\",\n    \"8я8ы-\",\n    \"-я8ь8\",\n    \"8я8ь-\",\n    \"-я8э8\",\n    \"8я8э-\",\n    \"-я8ю8\",\n    \"8я8ю-\",\n    \"-я8я8\",\n    \"8я8я-\",\n    \"\"\n  ];\n  var hyphenation = [\n    \"ас-бест\",\n    \"бездн\",\n    \"биз-нес-мен\",\n    \"буй-нак-ске\",\n    \"вбли-зи\",\n    \"взба-ла-муть-ся\",\n    \"вздрем-нешь\",\n    \"во-до-сли-вом\",\n    \"волж-ске\",\n    \"воп-лем\",\n    \"вопль\",\n    \"вост-ра\",\n    \"во-ткать\",\n    \"во-ткем\",\n    \"во-ткешь\",\n    \"во-тку\",\n    \"во-ткут\",\n    \"впол-обо-ро-та\",\n    \"впол-уха\",\n    \"все-во-лож-ске\",\n    \"вцспс\",\n    \"га-рем-но-го\",\n    \"го-ло-дра-нец\",\n    \"грэс\",\n    \"дву-зу-бец\",\n    \"днепр\",\n    \"добре-ем\",\n    \"до-бре-ем-ся\",\n    \"добре-ет\",\n    \"добре-е-те\",\n    \"до-бре-е-тесь\",\n    \"до-бре-ет-ся\",\n    \"добре-ешь\",\n    \"до-бре-ешь-ся\",\n    \"добрею\",\n    \"до-бре-юсь\",\n    \"добре-ют\",\n    \"до-бре-ют-ся\",\n    \"до-бре-сти\",\n    \"до-бро-дят\",\n    \"до-брось\",\n    \"до-брось-те\",\n    \"до-бро-сят\",\n    \"до-бро-шу\",\n    \"домну\",\n    \"доп-пель\",\n    \"драх-му\",\n    \"дрейф-лю\",\n    \"дрейфь-те\",\n    \"еди-но-жды\",\n    \"зав-сек-то-ром\",\n    \"за-мру\",\n    \"за-члись\",\n    \"из-древ-ле\",\n    \"изо-тру\",\n    \"ин-ког-ни-то\",\n    \"искр\",\n    \"ка-за-шек\",\n    \"казнь\",\n    \"кольд-кре-мом\",\n    \"корн-па-пир\",\n    \"ксендз\",\n    \"лик-бе-зом\",\n    \"ло-шадь-ми\",\n    \"людь-ми\",\n    \"лю-э-сом\",\n    \"ма-зу-те\",\n    \"ме-ти-лам\",\n    \"ме-ти-ла-ми\",\n    \"мно-га-жды\",\n    \"морщь-те\",\n    \"на-бе-крень\",\n    \"навз-ничь\",\n    \"на-вскид-ку\",\n    \"на-встре-чу\",\n    \"нагл\",\n    \"на-изусть\",\n    \"на-ис-ко-сок\",\n    \"наи-ме-нее\",\n    \"на-ис-кось\",\n    \"на-обо-рот\",\n    \"на-от-рез\",\n    \"на-супь-ся\",\n    \"на-угад\",\n    \"на-уголь-ник\",\n    \"не-ост-ра\",\n    \"нес-лась\",\n    \"нес-лись\",\n    \"нет-то\",\n    \"не-уду\",\n    \"обидь-ся\",\n    \"обо-шлось\",\n    \"об-ра-сти\",\n    \"од-на-жды\",\n    \"ослаб-ла\",\n    \"ото-мстят\",\n    \"ото-мщу\",\n    \"ото-тру\",\n    \"отру\",\n    \"отрусь\",\n    \"паб-ли-си-ти\",\n    \"па-на-ме\",\n    \"па-на-мец\",\n    \"па-ра-так-сис\",\n    \"пе-ре-вру\",\n    \"пе-ре-ме-жать\",\n    \"пе-ре-ме-жать-ся\",\n    \"пе-ре-шла\",\n    \"пис-чая\",\n    \"по-все-дне-вен\",\n    \"по-гре-мок\",\n    \"по-до-тру\",\n    \"по-ис-ти-не\",\n    \"по-лу-то-ра-ста\",\n    \"по-лу-явью\",\n    \"по-млад-ше\",\n    \"помни\",\n    \"по-мнись\",\n    \"помни-те\",\n    \"по-мни-тесь\",\n    \"по-мно-гу\",\n    \"по-мру\",\n    \"пол-вто-ро-го\",\n    \"пол-шка-фа\",\n    \"по-на-доб-люсь\",\n    \"по-трафь-те\",\n    \"преж-де\",\n    \"прид-ти\",\n    \"при-шла\",\n    \"при-шлось\",\n    \"про-тру\",\n    \"про-хлад-ца\",\n    \"пско-ва\",\n    \"пыл-че\",\n    \"раз-орем-ся\",\n    \"раз-оре-тесь\",\n    \"раз-орет-ся\",\n    \"раз-орешь-ся\",\n    \"разо-тру\",\n    \"ра-зу-мом\",\n    \"резв-люсь\",\n    \"рсфср\",\n    \"сан-узел\",\n    \"сдрейф-лю\",\n    \"се-го-дня\",\n    \"сме-жат\",\n    \"со-блю-сти\",\n    \"со-лжешь\",\n    \"сост-рим\",\n    \"сост-ришь\",\n    \"сост-рю\",\n    \"сост-рят\",\n    \"со-ткать\",\n    \"со-ткем\",\n    \"со-ткешь\",\n    \"сотку\",\n    \"со-ткут\",\n    \"срос-лась\",\n    \"срос-лись\",\n    \"стрем-глав\",\n    \"так-же\",\n    \"тве-ре-зо-го\",\n    \"те-ле-ате-лье\",\n    \"тер-но-сли-вом\",\n    \"троп-лю\",\n    \"тьфу\",\n    \"узу-фрукт\",\n    \"умнем\",\n    \"умнет\",\n    \"умнете\",\n    \"умну\",\n    \"умру\",\n    \"услышь-те\",\n    \"ушла\",\n    \"фо-то-пле-нок\",\n    \"ца-ре-дво-рец\",\n    \"че-рес-чур\",\n    \"чер-но-сли-вом\",\n    \"чресл\",\n    \"чуж-дость\",\n    \"шесть-де-сят\",\n    \"юсом\",\n    \"ядо-зу-бе\",\n    \"ярем-но-го\",\n    \"\"\n  ];\n\n  return {\n    patterns: patterns,\n    exceptions: hyphenation\n  };\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","import http from '../http-common'\n\nclass CommentService {\n  addComment(comment) {\n    return http().post('/comment/task', comment)\n  }\n\n  addMessage(message) {\n    return http().post('/comment/project', message)\n  }\n}\n\nexport default new CommentService()\n"],"sourceRoot":""}