{"version":3,"sources":["webpack:///./src/views/Task.vue?c9b2","webpack:///src/views/Task.vue","webpack:///./src/views/Task.vue?16d7","webpack:///./src/views/Task.vue","webpack:///./src/services/TaskService.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","task","project","name","on","$event","preventDefault","action","id","editTask","deleteTask","isEdit","attrs","validateState","model","value","$v","callback","$$v","$set","expression","required","_e","maxLength","content","updateTask","comments","addComment","author","surname","_l","$root","item","index","key","directives","rawName","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","attr","idx","domProps","assignee","user","staticRenderFns","mixins","data","users","type","priority","status","comment","components","Comment","validations","methods","$dirty","$error","$router","push","mounted","fetchTask","fetchUsers","component","TaskService","http","get","post","put","delete"],"mappings":"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","file":"js/chunk-412564dd.583f874f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:\"header\"},[_c('h1',{staticClass:\"header__title\"},[_vm._v(_vm._s(_vm.task.project.name))])]),_c('div',{staticClass:\"task\"},[_c('div',{staticClass:\"task__left scroll\"},[_c('div',{staticClass:\"task__header\"},[_c('div',{staticClass:\"task__header-item\"},[_c('button',{staticClass:\"task__header-btn task__header-btn--back\",on:{\"click\":function($event){$event.preventDefault();return _vm.action($event)}}},[_c('small'),_c('span',[_vm._v(\"back\")])]),_c('span',{staticClass:\"task__header-subtitle\"},[_vm._v(\"task-\"+_vm._s(_vm.task.id))])]),_c('div',{staticClass:\"task__header-item task__header-item--buttons\"},[_c('button',{staticClass:\"task__header-btn task__header-btn--edit\",on:{\"click\":function($event){$event.preventDefault();return _vm.editTask($event)}}}),_c('b-button',{staticClass:\"task__header-btn task__header-btn--delete\",on:{\"click\":function($event){$event.preventDefault();return _vm.deleteTask($event)}}})],1)]),_c('div',{staticClass:\"task__content\"},[(!_vm.isEdit)?_c('div',{staticClass:\"task__content-wrapper horizontal-separate\"},[_c('div',{staticClass:\"task__content-title\"},[_c('span',{staticClass:\"task__header-title\"},[_vm._v(_vm._s(_vm.task.name))])]),_c('div',{staticClass:\"task__text\"},[_c('p',[_vm._v(_vm._s(_vm.task.content))])])]):_c('b-form',{staticClass:\"task__content-wrapper horizontal-separate\"},[_c('b-form-group',[_c('b-form-input',{staticClass:\"form__input-field\",attrs:{\"id\":\"nameTask\",\"type\":\"text\",\"state\":_vm.validateState('name')},model:{value:(_vm.$v.task.name.$model),callback:function ($$v) {_vm.$set(_vm.$v.task.name, \"$model\", $$v)},expression:\"$v.task.name.$model\"}}),(!this.$v.task.name.required)?_c('b-form-invalid-feedback',{attrs:{\"id\":\"input\"}},[_vm._v(\"This field is required. \")]):_vm._e(),(!this.$v.task.name.maxLength)?_c('b-form-invalid-feedback',{attrs:{\"id\":\"input\"}},[_vm._v(\"The name must be at most 140 characters long. \")]):_vm._e()],1),_c('b-form-group',[_c('b-form-textarea',{staticClass:\"form__textarea-field\",attrs:{\"id\":\"content\",\"type\":\"text\",\"state\":_vm.validateState('content')},model:{value:(_vm.$v.task.content.$model),callback:function ($$v) {_vm.$set(_vm.$v.task.content, \"$model\", $$v)},expression:\"$v.task.content.$model\"}}),(!this.$v.task.content.maxLength)?_c('b-form-invalid-feedback',{attrs:{\"id\":\"textarea\"}},[_vm._v(\"The content must be at most 1000 characters long. \")]):_vm._e()],1),_c('button',{staticClass:\"button w-25\",on:{\"click\":function($event){$event.preventDefault();return _vm.updateTask($event)}}},[_vm._v(\"Save \")])],1),_c('Comment',{staticClass:\"comments\",attrs:{\"comments\":_vm.task.comments},on:{\"addComment\":_vm.addComment}})],1)]),_c('div',{staticClass:\"task__right\"},[_c('h2',{staticClass:\"state\"},[_vm._v(\"State:\")]),_c('div',{staticClass:\"attributes attributes--task\"},[_c('div',{staticClass:\"attributes__item\"},[_c('label',{staticClass:\"attributes__label\"},[_vm._v(\"Created by:\")]),_c('span',{staticClass:\"select select--disabled\"},[_vm._v(_vm._s(_vm.task.author.name)+\" \"+_vm._s(_vm.task.author.surname))])]),_vm._l((_vm.$root.attributes),function(item,name,index){return _c('form',{key:index,staticClass:\"attributes__item\",on:{\"change\":function($event){return _vm.updateTask(name)}}},[_c('label',{staticClass:\"attributes__label\"},[_vm._v(_vm._s(name)+\":\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task[name].id),expression:\"task[name].id\"}],staticClass:\"select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.task[name], \"id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((item),function(attr,idx){return _c('option',{key:idx,staticClass:\"select__option\",domProps:{\"value\":idx}},[_vm._v(_vm._s(attr.name)+\" \")])}),0)])}),_c('form',{staticClass:\"attributes__item\",on:{\"change\":_vm.updateTask}},[_c('label',{staticClass:\"attributes__label\",attrs:{\"for\":\"assignee\"}},[_vm._v(\"Assignee:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.assignee.id),expression:\"task.assignee.id\"}],staticClass:\"select\",attrs:{\"id\":\"assignee\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.task.assignee, \"id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.users),function(user){return _c('option',{key:user.id,domProps:{\"value\":user.id}},[_vm._v(_vm._s(user.name)+\" \"+_vm._s(user.surname)+\" \")])}),0)])],2)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <header class=\"header\">\n      <h1 class=\"header__title\">{{ task.project.name }}</h1>\n    </header>\n\n    <div class=\"task\">\n      <div class=\"task__left scroll\">\n        <div class=\"task__header\">\n          <div class=\"task__header-item\">\n            <button\n                class=\"task__header-btn task__header-btn--back\"\n                @click.prevent=\"action\"\n            >\n              <small></small>\n              <span>back</span>\n            </button>\n            <span class=\"task__header-subtitle\">task-{{ task.id }}</span>\n          </div>\n          <div class=\"task__header-item task__header-item--buttons\">\n            <button\n                class=\"task__header-btn task__header-btn--edit\"\n                @click.prevent=\"editTask\"\n            ></button>\n            <b-button\n                class=\"task__header-btn task__header-btn--delete\"\n                @click.prevent=\"deleteTask\"\n            ></b-button>\n          </div>\n        </div>\n\n        <div class=\"task__content\">\n          <div\n              v-if=\"!isEdit\"\n              class=\"task__content-wrapper horizontal-separate\"\n          >\n            <div class=\"task__content-title\">\n              <span class=\"task__header-title\">{{ task.name }}</span>\n            </div>\n\n            <div class=\"task__text\">\n              <p>{{ task.content }}</p>\n            </div>\n          </div>\n\n          <b-form class=\"task__content-wrapper horizontal-separate\" v-else>\n            <b-form-group>\n              <b-form-input\n                  id=\"nameTask\"\n                  type=\"text\"\n                  v-model=\"$v.task.name.$model\"\n                  class=\"form__input-field\"\n                  :state=\"validateState('name')\"\n              ></b-form-input>\n\n              <b-form-invalid-feedback\n                  id=\"input\"\n                  v-if=\"!this.$v.task.name.required\"\n              >This field is required.\n              </b-form-invalid-feedback>\n\n              <b-form-invalid-feedback\n                  id=\"input\"\n                  v-if=\"!this.$v.task.name.maxLength\"\n              >The name must be at most 140 characters long.\n              </b-form-invalid-feedback>\n            </b-form-group>\n\n            <b-form-group>\n              <b-form-textarea\n                  id=\"content\"\n                  type=\"text\"\n                  v-model=\"$v.task.content.$model\"\n                  class=\"form__textarea-field\"\n                  :state=\"validateState('content')\"\n              ></b-form-textarea>\n\n              <b-form-invalid-feedback\n                  id=\"textarea\"\n                  v-if=\"!this.$v.task.content.maxLength\"\n              >The content must be at most 1000 characters long.\n              </b-form-invalid-feedback>\n            </b-form-group>\n            <button\n                class=\"button w-25\"\n                @click.prevent=\"updateTask\"\n            >Save\n            </button>\n          </b-form>\n\n          <Comment\n              class=\"comments\"\n\n              @addComment=\"addComment\"\n              :comments=\"task.comments\"\n          />\n        </div>\n\n\n      </div>\n      <!-- /.task__left -->\n\n      <div class=\"task__right\">\n        <h2 class=\"state\">State:</h2>\n        <div class=\"attributes attributes--task\">\n          <div class=\"attributes__item\">\n            <label class=\"attributes__label\">Created by:</label>\n            <span class=\"select select--disabled\">{{ task.author.name }} {{ task.author.surname }}</span>\n          </div>\n\n          <form\n              class=\"attributes__item\"\n              v-for=\"(item, name, index) in $root.attributes\"\n              :key=\"index\"\n              @change=\"updateTask(name)\"\n          >\n            <label class=\"attributes__label\">{{ name }}:</label>\n            <select\n                class=\"select\"\n                v-model=\"task[name].id\"\n            >\n              <option\n                  class=\"select__option\"\n                  v-for=\"(attr, idx) in item\"\n                  :key=\"idx\"\n                  :value=\"idx\"\n              >{{ attr.name }}\n              </option>\n            </select>\n          </form>\n\n          <form\n              class=\"attributes__item\"\n              @change=\"updateTask\"\n          >\n            <label\n                class=\"attributes__label\"\n                for=\"assignee\"\n            >Assignee:</label>\n            <select\n                id=\"assignee\"\n                class=\"select\"\n                v-model=\"task.assignee.id\"\n            >\n              <option\n                  v-for=\"user in users\"\n                  :key=\"user.id\"\n                  :value=\"user.id\"\n              >{{ user.name }} {{ user.surname }}\n              </option>\n            </select>\n          </form>\n        </div>\n      </div>\n    </div>\n    <!-- /.task -->\n  </div>\n  <!-- div -->\n</template>\n\n<script>\nimport UserService from '../services/UserService'\nimport TaskService from '../services/TaskService'\nimport CommentService from '../services/CommentService'\nimport Comment from '../components/Comment'\nimport {validationMixin} from 'vuelidate'\nimport {maxLength, required} from \"vuelidate/lib/validators\"\n\nexport default {\n  name: 'Task',\n  mixins: [validationMixin],\n  data() {\n    return {\n      users: [],\n      task: {\n        id: null,\n\n        name: '',\n        content: '',\n\n        comments: [],\n\n        project: {\n          id: null,\n          name: ''\n        },\n\n        type: {\n          id: null,\n          name: ''\n        },\n        priority: {\n          id: null,\n          name: ''\n        },\n        status: {\n          id: null,\n          name: ''\n        },\n\n        author: {\n          id: null,\n          name: '',\n          surname: ''\n        },\n        assignee: {\n          id: null,\n          name: '',\n          surname: ''\n        },\n      },\n\n      isEdit: false,\n      comment: ''\n    }\n  },\n  components: {\n    Comment\n  },\n  validations: {\n    task: {\n      name: {\n        required,\n        maxLength: maxLength(140)\n\n      },\n      content: {\n        maxLength: maxLength(1000)\n      }\n    }\n  },\n  methods: {\n    validateState(name) {\n      const {$dirty, $error} = this.$v.task[name]\n      return $dirty ? !$error : null\n    },\n    async fetchUsers() {\n      const res = await UserService.getAll()\n          .then(response => response)\n          .catch(error => console.log(error))\n\n      this.users = res.data\n    },\n    async fetchTask() {\n      await TaskService.getById(this.$route.params.id)\n          .then(response => {\n            this.task = {...response.data}\n          })\n          .catch(error => console.log(error.response))\n    },\n    async updateTask() {\n      this.$v.task.$touch()\n      if (this.$v.task.$anyError) {\n        return\n      }\n\n      await TaskService.updateTask({\n        id: this.task.id,\n        name: this.task.name,\n        content: this.task.content,\n        assigneeId: +this.task.assignee.id,\n        priorityId: +this.task.priority.id,\n        statusId: +this.task.status.id,\n        typeId: +this.task.type.id\n      })\n          .then(response => {\n            this.task = {...response.data}\n            console.log(response)\n          })\n          .catch(error => console.log(error))\n\n      this.isEdit = false\n    },\n    async deleteTask() {\n      await TaskService.deleteTask(this.$route.params.id)\n          .then(response => {\n            if (response.status === 200) {\n              this.$router.push(`/project/${this.$route.params.projectId}`)\n            } else {\n              console.log('Что-то пошло не так!');\n            }\n          })\n    },\n    async addComment(content) {\n      await CommentService.addComment({\n        content: content,\n        id: this.task.id\n      })\n          .then(response => {\n            this.fetchTask()\n            console.log('addComment', response)\n          })\n          .catch(error => error)\n    },\n    action() {\n      this.$router.push(`/project/${this.$route.params.projectId}`)\n    },\n    editTask() {\n      this.isEdit = !this.isEdit\n    },\n  },\n  mounted() {\n    this.fetchTask()\n    this.fetchUsers()\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=0989e09c&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import http from '../http-common'\n\nclass TaskService {\n  getById(id) {\n    return http().get(`/task/${id}`)\n  }\n\n  getByAuthUser() {\n    return http().get('/task/user')\n  }\n\n  addTask(task) {\n    return http().post('/task', task)\n  }\n\n  updateTask(task) {\n    return http().put('/task', task)\n  }\n\n  deleteTask(id) {\n    return http().delete(`/task/${id}`)\n  }\n}\n\nexport default new TaskService()\n"],"sourceRoot":""}